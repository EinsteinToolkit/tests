/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/GRHydro
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/GRHydro/output-0000-active
+ hostname
fv-az426-182
+ date
Thu Nov 24 17:42:54 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1669311774
+ CACTUS_STARTTIME=1669311774
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/EinsteinEvolve/GRHydro/test/balsara1_1d.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.13.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.13.0
Compile date:      Nov 24 2022 (17:23:27)
Run date:          Nov 24 2022 (17:42:54+0000)
Run host:          fv-az426-182.gj1gglvnjufupjanfowiwfeu1f.cx.internal.cloudapp.net (pid=112954)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/GRHydro
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/EinsteinEvolve/GRHydro/test/balsara1_1d.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Boundary CartGrid3D CoordBase Fortran InitBase IOUtil LocalReduce SymBase Time AEILocalInterp LocalInterp MoL Slab SpaceMask Carpet CarpetInterp CarpetIOASCII CarpetIOHDF5 CarpetIOScalar CarpetLib CarpetIOBasic CarpetReduce CarpetSlab LoopControl NaNChecker TerminationTrigger TimerReport ADMbase ADMmacros CoordGauge StaticConformal Constants TmunuBase HydroBase EOS_Omni GRHydro GRHydro_InitData HDF5 SystemStatistics<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn GRHydro requests automatic activation of EOS_Polytrope
Thorn HDF5 requests automatic activation of zlib
Thorn LoopControl requests automatic activation of hwloc
Thorn EOS_Polytrope requests automatic activation of EOS_Base
Activating thorn ADMbase...Success -> active implementation ADMBase
Activating thorn ADMmacros...Success -> active implementation ADMMacros
Activating thorn AEILocalInterp...Success -> active implementation AEILocalInterp
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetIOHDF5...Success -> active implementation IOHDF5
Activating thorn CarpetIOScalar...Success -> active implementation IOScalar
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetSlab...Success -> active implementation Hyperslab
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn Constants...Success -> active implementation Constants
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn EOS_Base...Success -> active implementation EOS_Base
Activating thorn EOS_Omni...Success -> active implementation EOS_Omni
Activating thorn EOS_Polytrope...Success -> active implementation EOS_2d_Polytrope
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GRHydro...Success -> active implementation GRHydro
Activating thorn GRHydro_InitData...Success -> active implementation GRHydro_init_data
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn HydroBase...Success -> active implementation HydroBase
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn LocalReduce...Success -> active implementation LocalReduce
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn Slab...Success -> active implementation Slab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn SystemStatistics...Success -> active implementation SystemStatistics
Activating thorn TerminationTrigger...Success -> active implementation TerminationTrigger
Activating thorn Time...Success -> active implementation time
Activating thorn TimerReport...Success -> active implementation timerreport
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetIOScalar::CarpetIOScalarStartup: [global] Startup routine
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      EOS_Omni::EOS_Omni_Startup: [global] Set up conversion factors and other fun stuff
      EOS_Polytrope::EOS_Polytrope_Startup: Setup the polytropic EOS
      GRHydro::GRHydro_RegisterMask: Register the hydro masks
      HydroBase::HydroBase_StartUp: Startup banner
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      LocalReduce::LocalReduce_Startup: Startup routine
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      Slab::Slab_InitMPIDatatypes: Create MPI datatypes for complex variables in C
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      TerminationTrigger::TerminationTrigger_StartSignalHandler: Start signal handler
      CarpetIOHDF5::CarpetIOHDF5_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      GRHydro::GRHydro_Startup: Startup banner
      GRHydro::GRHydro_ClearLastMoLPostStep: [global] Initialize InLastMoLPostStep to zero
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        GRHydro::GRHydro_Register: Register variables for MoL
      Slab::Slab_InitTimers: Initialise timers
      SpaceMask::MaskSym: [global] Set grid symmetries for mask
      SpaceMask::MaskSym_emask: [global] Set grid symmetries for emask (compatibility mode)
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      GRHydro::GRHydro_ParamCheck: Check parameters
      GRHydro_InitData::GRHydro_InitData_CheckParameters: Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      TerminationTrigger::TerminationTrigger_ParamCheck: Check consitency of parameters
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SpaceMask::MaskZero: Initialise mask to zero
        GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
        GROUP HydroBase_ExcisionMaskSetup: Set up hydro excision mask
          HydroBase::HydroBase_InitExcisionMask: Initialize hydro excision mask to 'no excision everywhere'
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        SpaceMask::MaskOne: Set mask to one
        GRHydro::GRHydro_SetupMask: Initialize the atmosphere mask
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GRHydro::GRHydro_Reset_Execution_Flags: [global] Initially set execution flags to 'YEAH, Execute'!
        GRHydro::GRHydro_InitSymBound: Schedule symmetries and check shift state
        GRHydro::reset_GRHydro_C2P_failed: Initialise the mask function that contains the points where C2P has failed (at BASEGRID)
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        TerminationTrigger::TerminationTrigger_ResetTrigger: Clear trigger state
        TerminationTrigger::TerminationTrigger_StartTimer: Start timer
        TerminationTrigger::TerminationTrigger_CreateFile: Create termination file
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          ADMBase::ADMBase_CartesianMinkowski: Set the metric and extrinsic curvature to cartesian minkowski values
        GRHydro::GRHydro_EOSHandle: [global] Set the EOS number
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        CarpetIOHDF5::CarpetIOHDF5_Init: [global] Initialisation routine
        CarpetIOScalar::CarpetIOScalarInit: [global] Initialisation routine
        GRHydro::GRHydro_Rho_Minima_Setup: Set up minimum for the rest-mass density in the atmosphere (before intial data)
        GRHydro::GRHydro_SetupMask: Initialize the atmosphere mask
        GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
        GROUP HydroBase_Initial: HydroBase initial data group
          GROUP GRHydro_Initial: GRHydro initial data group
          GRHydro::GRHydro_DivBInit: Set divB initially to zero
          GRHydro_InitData::GRHydro_shocktubeM: Shocktube initial data - MHD version
          GROUP HydroBase_ExcisionMaskSetup: Set up hydro excision mask
            HydroBase::HydroBase_InitExcisionMask: Initialize hydro excision mask to 'no excision everywhere'
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
        GRHydro::GRHydro_InitialAtmosphereReset: Use mask to enforce atmosphere at initial time
        MoL::MoL_StartLoop: [level] Initialise the step size control
        GROUP HydroBase_Prim2ConInitial: Recover the conservative variables from the primitive variables
          GRHydro::Primitive2ConservativeCellsM: Convert initial data given in primive variables to conserved variables - MHD version
      [CCTK_POSTINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [global] Close all filereader input files
        GRHydro::GRHydro_Scalar_Setup: Set up and check scalars for efficiency
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
          GRHydro::GRHydro_SetLastMoLPostStep: [level] Set grid scalar InLastMoLPostStep if this is the last MoL PostStep call
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP GRHydro_PostStep: Post step tasks for GRHydro
            GROUP GRHydro_AtmosphereMaskBoundaries: Apply boundary conditions to primitives
              GRHydro::GRHydro_SelectAtmosphereMaskBoundaries: [level] Select atmosphere mask for boundary conditions
              GROUP GRHydro_ApplyAtmosphereMaskBCs: Apply boundary conditions to real-valued atmosphere mask
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GRHydro::GRHydroPostSyncAtmosphereMask: Set integer atmosphere mask from synchronized real atmosphere mask
            if (GRHydro::InLastMoLPostStep)
              GRHydro::GRHydro_AtmosphereResetM: Reset the atmosphere - MHD version
            GRHydro::GRHydro_CalcBcom: Compute comoving magnetic field, pressure, etc...
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP Do_GRHydro_Boundaries: GRHydro Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
                if (GRHydro::execute_MoL_PostStep)
                  GRHydro::GRHydro_Bound: [level] Select GRHydro boundary conditions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
              if (GRHydro::execute_MoL_Step)
                GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
              if (GRHydro::execute_MoL_PostStep)
                GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP GRHydroAnalysis: Calculate analysis quantities
            GRHydro::GRHydro_CalcDivB: Calculate divB
            GROUP GRHydro_ApplyDivBBCs: Apply boundary conditions to divB
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
          GRHydro::GRHydro_SetLastMoLPostStep: [level] Set grid scalar InLastMoLPostStep if this is the last MoL PostStep call
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP GRHydro_PostStep: Post step tasks for GRHydro
            GROUP GRHydro_AtmosphereMaskBoundaries: Apply boundary conditions to primitives
              GRHydro::GRHydro_SelectAtmosphereMaskBoundaries: [level] Select atmosphere mask for boundary conditions
              GROUP GRHydro_ApplyAtmosphereMaskBCs: Apply boundary conditions to real-valued atmosphere mask
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GRHydro::GRHydroPostSyncAtmosphereMask: Set integer atmosphere mask from synchronized real atmosphere mask
            if (GRHydro::InLastMoLPostStep)
              GRHydro::GRHydro_AtmosphereResetM: Reset the atmosphere - MHD version
            GRHydro::GRHydro_CalcBcom: Compute comoving magnetic field, pressure, etc...
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP Do_GRHydro_Boundaries: GRHydro Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
                if (GRHydro::execute_MoL_PostStep)
                  GRHydro::GRHydro_Bound: [level] Select GRHydro boundary conditions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
              if (GRHydro::execute_MoL_Step)
                GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
              if (GRHydro::execute_MoL_PostStep)
                GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_POSTPOSTINITIAL]
        GRHydro::GRHydro_Rho_Minima_Setup_Final: Set the value of the rest-mass density of the atmosphere which will be used during the evolution
        GRHydro::GRHydro_InitialAtmosphereResetM: Use mask to enforce atmosphere at initial time
        GROUP Con2Prim: Convert from conservative to primitive variables (might be redundant)
          if (GRHydro::execute_MoL_Step)
            GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
          if (GRHydro::execute_MoL_PostStep)
            GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
        GROUP SetTmunu: Calculate the stress-energy tensor
        GROUP ADMConstraintsGroup: Evaluate ADM constraints, and perform symmetry boundary conditions
      [CCTK_POSTSTEP]
        GRHydro::GRHydro_RefinementLevel: Calculate current refinement level (for the check of the C2P mask)
        GRHydro::check_GRHydro_C2P_failed: Check the mask function that contains the points where C2P has failed and report an error in case a failure is found
        GROUP HydroBase_ExcisionHasBeenSet: Group to schedule thorns changing the mask before and thorns using the mask after
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        SpaceMask::CheckMask: Ensure that all mask values are legal
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GRHydro::GRHydro_Reset_Execution_Flags: [global] Initially set execution flags to 'YEAH, Execute'!
        GRHydro::GRHydro_InitSymBound: Schedule symmetries and check shift state
        GRHydro::reset_GRHydro_C2P_failed: Initialise the mask function that contains the points where C2P has failed (at BASEGRID)
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        TerminationTrigger::TerminationTrigger_ResetTrigger: Clear trigger state
        TerminationTrigger::TerminationTrigger_StartTimer: Start timer
        TerminationTrigger::TerminationTrigger_CreateFile: Create termination file
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        CarpetIOHDF5::CarpetIOHDF5_InitCheckpointingIntervals: [global] Initialisation of checkpointing intervals after recovery
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GRHydro::GRHydro_EOSHandle: [global] Set the EOS number
        GRHydro::GRHydroCopyIntegerMask: Initialize the real valued atmosphere mask after checkpoint recovery
        GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
        GROUP HydroBase_ExcisionMaskSetup: Set up hydro excision mask
          HydroBase::HydroBase_InitExcisionMask: Initialize hydro excision mask to 'no excision everywhere'
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
          GRHydro::GRHydro_SetLastMoLPostStep: [level] Set grid scalar InLastMoLPostStep if this is the last MoL PostStep call
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP GRHydro_PostStep: Post step tasks for GRHydro
            GROUP GRHydro_AtmosphereMaskBoundaries: Apply boundary conditions to primitives
              GRHydro::GRHydro_SelectAtmosphereMaskBoundaries: [level] Select atmosphere mask for boundary conditions
              GROUP GRHydro_ApplyAtmosphereMaskBCs: Apply boundary conditions to real-valued atmosphere mask
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GRHydro::GRHydroPostSyncAtmosphereMask: Set integer atmosphere mask from synchronized real atmosphere mask
            if (GRHydro::InLastMoLPostStep)
              GRHydro::GRHydro_AtmosphereResetM: Reset the atmosphere - MHD version
            GRHydro::GRHydro_CalcBcom: Compute comoving magnetic field, pressure, etc...
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP Do_GRHydro_Boundaries: GRHydro Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
                if (GRHydro::execute_MoL_PostStep)
                  GRHydro::GRHydro_Bound: [level] Select GRHydro boundary conditions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
              if (GRHydro::execute_MoL_Step)
                GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
              if (GRHydro::execute_MoL_PostStep)
                GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        TerminationTrigger::TerminationTrigger_ResetMinutes: [global] Reset Watchtime
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_InitialDataCheckpoint: [meta] Initial data checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        SystemStatistics::SystemStatistics_Collect: [global] Collect system statistics
        TerminationTrigger::TerminationTrigger_CheckWalltime: Check elapsed job walltime
        TerminationTrigger::TerminationTrigger_CheckSignal: Check if we received a termination signal
        TerminationTrigger::TerminationTrigger_CheckFile: Check termination file
        TimerReport::zzz_TimerReport_Output: [global] Print the timer report
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      SpaceMask::MaskZero: Initialise mask to zero
      GROUP HydroBase_ExcisionMaskSetup: Set up hydro excision mask
        HydroBase::HydroBase_InitExcisionMask: Initialize hydro excision mask to 'no excision everywhere'
      SpaceMask::MaskOne: Set mask to one
      GRHydro::GRHydro_SetupMask: Initialize the atmosphere mask
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
        GRHydro::GRHydro_SetLastMoLPostStep: [level] Set grid scalar InLastMoLPostStep if this is the last MoL PostStep call
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP GRHydro_PostStep: Post step tasks for GRHydro
          GROUP GRHydro_AtmosphereMaskBoundaries: Apply boundary conditions to primitives
            GRHydro::GRHydro_SelectAtmosphereMaskBoundaries: [level] Select atmosphere mask for boundary conditions
            GROUP GRHydro_ApplyAtmosphereMaskBCs: Apply boundary conditions to real-valued atmosphere mask
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GRHydro::GRHydroPostSyncAtmosphereMask: Set integer atmosphere mask from synchronized real atmosphere mask
          if (GRHydro::InLastMoLPostStep)
            GRHydro::GRHydro_AtmosphereResetM: Reset the atmosphere - MHD version
          GRHydro::GRHydro_CalcBcom: Compute comoving magnetic field, pressure, etc...
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP Do_GRHydro_Boundaries: GRHydro Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              if (GRHydro::execute_MoL_PostStep)
                GRHydro::GRHydro_Bound: [level] Select GRHydro boundary conditions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
            if (GRHydro::execute_MoL_Step)
              GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
            if (GRHydro::execute_MoL_PostStep)
              GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      GRHydro::reset_GRHydro_C2P_failed: Reset the mask function that contains the points where C2P has failed (at PRESTEP)
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
            GRHydro::GRHydro_Scalar_Setup: Set up and check scalars for efficiency
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                GROUP HydroBase_RHS: Groups for scheduling tasks for calculating RHS of hydro variables
                  if (GRHydro::execute_MoL_Step)
                    GROUP GRHydroRHS: Calculate the update terms
                      GRHydro::SourceTerms: Source term calculation
                      GRHydro::GRHydroStartLoop: [level] Set the flux_direction variable
                      while (GRHydro::flux_direction)
                        GROUP FluxTerms: Calculation of intercell fluxes
                          GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
                          GRHydro::Reconstruct: Reconstruct the functions at the cell boundaries
                          GRHydro::Riemann: Solve the local Riemann problems - MHD version
                          GRHydro::UpdateCalcul: Calculate the update term from the fluxes
                          GRHydro::GRHydroAdvanceLoop: [level] Decrement the flux_direction variable
                      end while
                      GRHydro::GRHydroUpdateAtmosphereMask: Alter the update terms if inside the atmosphere region
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 2 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
                GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
                GRHydro::GRHydro_SetLastMoLPostStep: [level] Set grid scalar InLastMoLPostStep if this is the last MoL PostStep call
                GROUP HydroBase_PostStep: Post step tasks for hydro thorns
                  GROUP GRHydro_PostStep: Post step tasks for GRHydro
                  GROUP GRHydro_AtmosphereMaskBoundaries: Apply boundary conditions to primitives
                    GRHydro::GRHydro_SelectAtmosphereMaskBoundaries: [level] Select atmosphere mask for boundary conditions
                    GROUP GRHydro_ApplyAtmosphereMaskBCs: Apply boundary conditions to real-valued atmosphere mask
                      GROUP BoundaryConditions: Execute all boundary conditions
                        Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                        CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                      Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                  GRHydro::GRHydroPostSyncAtmosphereMask: Set integer atmosphere mask from synchronized real atmosphere mask
                  if (GRHydro::InLastMoLPostStep)
                    GRHydro::GRHydro_AtmosphereResetM: Reset the atmosphere - MHD version
                  GRHydro::GRHydro_CalcBcom: Compute comoving magnetic field, pressure, etc...
                  GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
                    GROUP Do_GRHydro_Boundaries: GRHydro Boundary conditions group
                    GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
                      if (GRHydro::execute_MoL_PostStep)
                        GRHydro::GRHydro_Bound: [level] Select GRHydro boundary conditions
                    GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                      GROUP BoundaryConditions: Execute all boundary conditions
                        Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                        CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                      Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                  GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
                    if (GRHydro::execute_MoL_Step)
                      GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
                    if (GRHydro::execute_MoL_PostStep)
                      GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
              GRHydro::GRHydro_ClearLastMoLPostStep: [level] Reset InLastMoLPostStep to zero
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GRHydro::sync_GRHydro_C2P_failed: Syncronise the mask function that contains the points where C2P has failed
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP GRHydroAnalysis: Calculate analysis quantities
          GRHydro::GRHydro_CalcDivB: Calculate divB
          GROUP GRHydro_ApplyDivBBCs: Apply boundary conditions to divB
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
        GRHydro::GRHydro_SetLastMoLPostStep: [level] Set grid scalar InLastMoLPostStep if this is the last MoL PostStep call
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP GRHydro_PostStep: Post step tasks for GRHydro
          GROUP GRHydro_AtmosphereMaskBoundaries: Apply boundary conditions to primitives
            GRHydro::GRHydro_SelectAtmosphereMaskBoundaries: [level] Select atmosphere mask for boundary conditions
            GROUP GRHydro_ApplyAtmosphereMaskBCs: Apply boundary conditions to real-valued atmosphere mask
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GRHydro::GRHydroPostSyncAtmosphereMask: Set integer atmosphere mask from synchronized real atmosphere mask
          if (GRHydro::InLastMoLPostStep)
            GRHydro::GRHydro_AtmosphereResetM: Reset the atmosphere - MHD version
          GRHydro::GRHydro_CalcBcom: Compute comoving magnetic field, pressure, etc...
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP Do_GRHydro_Boundaries: GRHydro Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              if (GRHydro::execute_MoL_PostStep)
                GRHydro::GRHydro_Bound: [level] Select GRHydro boundary conditions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
            if (GRHydro::execute_MoL_Step)
              GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
            if (GRHydro::execute_MoL_PostStep)
              GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    [CCTK_POSTSTEP]
      GRHydro::GRHydro_RefinementLevel: Calculate current refinement level (for the check of the C2P mask)
      GRHydro::check_GRHydro_C2P_failed: Check the mask function that contains the points where C2P has failed and report an error in case a failure is found
      GROUP HydroBase_ExcisionHasBeenSet: Group to schedule thorns changing the mask before and thorns using the mask after
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
      SpaceMask::CheckMask: Ensure that all mask values are legal
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetIOHDF5::CarpetIOHDF5_EvolutionCheckpoint: [meta] Evolution checkpoint routine
      TimerReport::zzz_TimerReport_Checkpoint: [global] Print the timer report
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      SystemStatistics::SystemStatistics_Collect: [global] Collect system statistics
      TerminationTrigger::TerminationTrigger_CheckWalltime: Check elapsed job walltime
      TerminationTrigger::TerminationTrigger_CheckSignal: Check if we received a termination signal
      TerminationTrigger::TerminationTrigger_CheckFile: Check termination file
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetIOHDF5::CarpetIOHDF5_TerminationCheckpoint: [meta] Termination checkpoint routine
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays
      TimerReport::zzz_TimerReport_Output: [global] Print the timer report

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      SpaceMask::MaskZero: Initialise mask to zero
      GROUP HydroBase_ExcisionMaskSetup: Set up hydro excision mask
        HydroBase::HydroBase_InitExcisionMask: Initialize hydro excision mask to 'no excision everywhere'
      SpaceMask::MaskOne: Set mask to one
      GRHydro::GRHydro_SetupMask: Initialize the atmosphere mask
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GRHydro::GRHydro_RefinementLevel: Calculate current refinement level
        GRHydro::GRHydro_SetLastMoLPostStep: [level] Set grid scalar InLastMoLPostStep if this is the last MoL PostStep call
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP GRHydro_PostStep: Post step tasks for GRHydro
          GROUP GRHydro_AtmosphereMaskBoundaries: Apply boundary conditions to primitives
            GRHydro::GRHydro_SelectAtmosphereMaskBoundaries: [level] Select atmosphere mask for boundary conditions
            GROUP GRHydro_ApplyAtmosphereMaskBCs: Apply boundary conditions to real-valued atmosphere mask
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GRHydro::GRHydroPostSyncAtmosphereMask: Set integer atmosphere mask from synchronized real atmosphere mask
          if (GRHydro::InLastMoLPostStep)
            GRHydro::GRHydro_AtmosphereResetM: Reset the atmosphere - MHD version
          GRHydro::GRHydro_CalcBcom: Compute comoving magnetic field, pressure, etc...
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP Do_GRHydro_Boundaries: GRHydro Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              if (GRHydro::execute_MoL_PostStep)
                GRHydro::GRHydro_Bound: [level] Select GRHydro boundary conditions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
            if (GRHydro::execute_MoL_Step)
              GRHydro::GRHydro_SqrtSpatialDeterminant: Calculate sdetg
            if (GRHydro::execute_MoL_PostStep)
              GRHydro::Con2Prim: Convert back to primitive variables (general) - MHD version
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 0.883 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.357971 ns per clock tick (2.79352 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR scalar I/O provided by CarpetIOScalar
--------------------------------------------------------------------------------
HydroBase: Let it flow.
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 0D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 1D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 2D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 3D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az426-182, pid=112954
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[1,1,1],[1,1,1]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-0.5,-0.0025,-0.0025] : [0.5,0.0025,0.0025]   ([1,0.005,0.005])
   interior extent: [-0.45,-0.001875,-0.001875] : [0.45,0.001875,0.001875]   ([0.9,0.00375,0.00375])
   exterior extent: [-0.5,-0.0025,-0.0025] : [0.5,0.0025,0.0025]   ([1,0.005,0.005])
   base_spacing   : [0.05,0.000625,0.000625]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-0.5,-0.0025,-0.0025] : [0.5,0.0025,0.0025]   ([1,0.005,0.005])
   interior extent   : [-0.45,-0.001875,-0.001875] : [0.45,0.001875,0.001875]   ([0.9,0.00375,0.00375])
   exterior extent   : [-0.5,-0.0025,-0.0025] : [0.5,0.0025,0.0025]   ([1,0.005,0.005])
   spacing           : [0.05,0.000625,0.000625]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [21,9,9]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 607 grid functions in 108 groups
INFO (Carpet):    There are 131 grid scalars in 56 groups
INFO (Carpet):    There are 60 1-dimensional grid arrays in 10 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   GRHYDRO::divB
   HYDROBASE::rho
   HYDROBASE::press
   HYDROBASE::eps
   HYDROBASE::vel[0]
   HYDROBASE::vel[1]
   HYDROBASE::vel[2]
   HYDROBASE::w_lorentz
   HYDROBASE::Bvec[0]
   HYDROBASE::Bvec[1]
   HYDROBASE::Bvec[2]
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5' registered: AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_0D' registered: 0D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_1D' registered: 1D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_2D' registered: 2D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): Periodic 2D AMR output requested for:
   GRHYDRO::dens
   GRHYDRO::tau
   GRHYDRO::scon[0]
   GRHYDRO::scon[1]
   GRHYDRO::scon[2]
   GRHYDRO::Bcons[0]
   GRHYDRO::Bcons[1]
   GRHYDRO::Bcons[2]
   GRHYDRO::psidc
   GRHYDRO::divB
   GRHYDRO::bcom[0]
   GRHYDRO::bcom[1]
   GRHYDRO::bcom[2]
   GRHYDRO::bcom0
   GRHYDRO::bcom_sq
   HYDROBASE::rho
   HYDROBASE::press
   HYDROBASE::eps
   HYDROBASE::vel[0]
   HYDROBASE::vel[1]
   HYDROBASE::vel[2]
   HYDROBASE::w_lorentz
   HYDROBASE::Bvec[0]
   HYDROBASE::Bvec[1]
   HYDROBASE::Bvec[2]
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_3D' registered: 3D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): Periodic 3D AMR output requested for:
   GRHYDRO::divB
   GRHYDRO::bcom[0]
   GRHYDRO::bcom[1]
   GRHYDRO::bcom[2]
   GRHYDRO::bcom0
   GRHYDRO::bcom_sq
   HYDROBASE::rho
   HYDROBASE::press
   HYDROBASE::eps
   HYDROBASE::vel[0]
   HYDROBASE::vel[1]
   HYDROBASE::vel[2]
   HYDROBASE::w_lorentz
   HYDROBASE::Bvec[0]
   HYDROBASE::Bvec[1]
   HYDROBASE::Bvec[2]
INFO (MoL): Using Runge-Kutta 2 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 439. 8 are registered.
INFO (MoL): The maximum number of slow evolved variables is 439. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 439. 10 are registered.
INFO (MoL): The maximum number of SandR variables is 439. 16 are registered.
INFO (MoL): The maximum number of evolved array variables is 439. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 439. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 439. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>5.0000000e-02  dy=>6.2500000e-04  dz=>6.2500000e-04
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.003, 0.003]  z=>[-0.003, 0.003]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,20]  y=>[0,8]  z=>[0,8]
INFO (TerminationTrigger): Reminding you every 60 minutes about remaining walltime
INFO (Time): Timestep set to 0.0005 (courant_static)
INFO (GRHydro): Trying to get EOS handles
INFO (GRHydro): Trying to get EOS handles
INFO (GRHydro): GRHydro will use the Ideal_Fluid equation of state.
INFO (GRHydro): Setting up the atmosphere mask: all points are not_atmosphere
      GRHydro_InitialAtmosphereReset
Memory statistics from CarpetLib:
   Current number of objects: 206
   Current allocated memory:  0.919 MB
   Maximum number of objects: 208
   Maximum allocated memory:  0.932 MB
   Current administrative memory: 0.756 MB
   Total allocated used system memory: 12 MB
   Total allocated free system memory: 0.278 MB
   gh::allmemory:    51184
   dh::allmemory:    598608
   th::allmemory:    13920
   ggf::allmemory:   78024
   gdata::allmemory: 14048
-------------------------------------------------------------------------------------------
Iteration      Time | *me_per_hour | *RO::bcom_sq | *ROBASE::rho | *BASE::press | *axrss_mb
                    |              |      maximum |      maximum |      maximum |   maximum
-------------------------------------------------------------------------------------------
        0     0.000 |    0.0000000 |    1.2500000 |    1.0000000 |    1.0000000 |        42
---------------------------------------------------------------------------------------------------------------------------------------------------------
Time      Time   Imblnc   Timer                                               gettimeof  getrusage      cycle  cycle[avg  cycle[sdv  cycle[min  cycle[max
percent   secs   percent                                                           secs       secs       secs       secs       secs       secs       secs
---------------------------------------------------------------------------------------------------------------------------------------------------------
 100.0%      0.0    0.0%  Initialise                                            0.01667    0.01166  4.657e+07  4.657e+07          0  4.657e+07  4.657e+07
  15.7%      0.0    2.7%  |_CallAnalysis                                       0.002688   0.002257  7.509e+06  7.509e+06          0  7.509e+06  7.509e+06
   5.3%      0.0    7.6%  | |_CCTK_ANALYSIS                                    0.000957   0.000702  2.675e+06  2.675e+06          0  2.675e+06  2.675e+06
   4.9%      0.0    8.1%  | | |_CallFunction                                   0.000893   0.000639  2.492e+06  3.115e+05  1.335e+06  5.182e+04  1.537e+06
   3.8%      0.0   11.7%  | | | |_thorns                                       0.000715   0.000473  1.999e+06  2.498e+05  1.357e+06  1.833e+04  1.494e+06
   2.5%      0.0   19.8%  | | | | |_CarpetLib_printmemstats                    0.000528   0.000294  1.478e+06  1.478e+06          0  1.478e+06  1.478e+06
   1.1%      0.0          | | | |_untimed
   9.1%      0.0    0.3%  | |_OutputGH                                         0.001518   0.001354  4.237e+06  4.237e+06          0  4.237e+06  4.237e+06
   9.1%      0.0    0.3%  | | |_OutputGH                                        0.00151   0.001346  4.218e+06  4.218e+06          0  4.218e+06  4.218e+06
   5.8%      0.0    5.9%  | | | |_IOASCII::IOASCII_1D [2]                      0.000912   0.000866  2.548e+06  2.548e+06          0  2.548e+06  2.548e+06
   5.8%      0.0    6.0%  | | | | |_OutputGH<1>                                0.000905    0.00086   2.53e+06   2.53e+06          0   2.53e+06   2.53e+06
   1.9%      0.0   14.3%  | | | |_IOBasic::CarpetIOBasic [5]                   0.000374   0.000268  1.046e+06  1.046e+06          0  1.046e+06  1.046e+06
   1.9%      0.0   14.5%  | | | | |_OutputGH                                   0.000368   0.000263  1.029e+06  1.029e+06          0  1.029e+06  1.029e+06
  42.6%      0.0    0.3%  |_CallInitial                                        0.007131   0.002985  1.992e+07  1.992e+07          0  1.992e+07  1.992e+07
   9.2%      0.0    6.6%  | |_CCTK_BASEGRID                                    0.001636   0.000373  4.571e+06  4.571e+06          0  4.571e+06  4.571e+06
   8.1%      0.0    8.1%  | | |_CallFunction                                   0.001464   0.000318  4.081e+06  1.701e+05  6.052e+05  5.092e+04   5.41e+05
   4.8%      0.0   13.9%  | | | |_thorns                                        0.00092   0.000163  2.565e+06  1.069e+05  5.738e+05  1.578e+04  4.722e+05
   3.3%      0.0          | | | |_untimed
   1.1%      0.0          | | |_untimed
  11.8%      0.0    1.3%  | |_CCTK_INITIAL                                     0.001992          0  5.562e+06  5.562e+06          0  5.562e+06  5.562e+06
  11.0%      0.0    1.9%  | | |_CallFunction                                   0.001862          0  5.204e+06  2.739e+05  1.658e+06  2.567e+04  1.789e+06
   8.6%      0.0    3.4%  | | | |_thorns                                       0.001494          0  4.168e+06  2.193e+05  1.636e+06  1.812e+04  1.725e+06
   3.6%      0.0    1.5%  | | | | |_GRHydro_shocktubeM                         0.000612          0   1.71e+06   1.71e+06          0   1.71e+06   1.71e+06
   2.3%      0.0          | | | |_untimed
  16.0%      0.0    4.3%  | |_CCTK_POSTINITIAL                                 0.002552   0.001673   7.13e+06   7.13e+06          0   7.13e+06   7.13e+06
  15.0%      0.0    4.6%  | | |_CallFunction                                   0.002382   0.001573  6.653e+06  2.661e+05  1.346e+06   1.57e+04  1.114e+06
   3.9%      0.0   18.8%  | | | |_syncs                                        0.000494   0.000206  1.379e+06  4.597e+05  3.832e+05  1.833e+05  7.248e+05
   3.7%      0.0   19.5%  | | | | |_Sync                                       0.000464   0.000195  1.294e+06  4.314e+05  3.642e+05  1.686e+05  6.832e+05
   1.2%      0.0   43.2%  | | | | | |_comm_state[6].state_do_some_work.step     4.7e-05    1.9e-05  1.323e+05  4.409e+04  4.972e+04  1.184e+04  8.157e+04
   8.7%      0.0    1.7%  | | | |_thorns                                       0.001484   0.001092  4.139e+06  1.655e+05  1.077e+06       9634  1.051e+06
   1.2%      0.0    2.5%  | | | | |_Boundary_ApplyPhysicalBCs                  0.000198   0.000147  5.554e+05  1.389e+05  2.594e+05   3.31e+04  3.526e+05
   2.2%      0.0    3.0%  | | | | |_Con2Prim                                    0.00037   0.000351  1.033e+06  1.033e+06          0  1.033e+06  1.033e+06
   2.4%      0.0          | | | |_untimed
   1.0%      0.0          | | |_untimed
   4.6%      0.0    0.6%  | |_Poison                                           0.000767   0.000768  2.144e+06  2.144e+06          0  2.144e+06  2.144e+06
  11.5%      0.0    1.2%  |_CallPostInitial                                    0.001901   0.001773  5.309e+06  5.309e+06          0  5.309e+06  5.309e+06
   5.2%      0.0    0.3%  | |_CCTK_POSTPOSTINITIAL                              0.00086   0.000785  2.402e+06  2.402e+06          0  2.402e+06  2.402e+06
   4.9%      0.0    0.3%  | | |_CallFunction                                   0.000813   0.000738  2.268e+06  5.669e+05  6.329e+05  3.115e+05    1.1e+06
   4.3%      0.0    0.7%  | | | |_thorns                                       0.000714   0.000644  1.992e+06   4.98e+05  6.381e+05  2.421e+05  1.035e+06
   2.1%      0.0    3.0%  | | | | |_Con2Prim                                   0.000365   0.000347  1.021e+06  1.021e+06          0  1.021e+06  1.021e+06
   6.0%      0.0    2.5%  | |_CCTK_POSTSTEP                                    0.000968    0.00092  2.705e+06  2.705e+06          0  2.705e+06  2.705e+06
   5.6%      0.0    2.6%  | | |_CallFunction                                   0.000915   0.000867  2.554e+06  3.649e+05  1.472e+06    2.7e+04  1.702e+06
   4.9%      0.0    3.2%  | | | |_thorns                                       0.000793   0.000753  2.217e+06  3.167e+05  1.448e+06    1.9e+04  1.639e+06
   3.4%      0.0    3.0%  | | | | |_NaNChecker_NaNCheck_Check                  0.000581   0.000552  1.623e+06  1.623e+06          0  1.623e+06  1.623e+06
  16.0%      0.0    3.5%  |_CallSetup                                          0.002564   0.002367  7.162e+06  7.162e+06          0  7.162e+06  7.162e+06
   2.7%      0.0    6.2%  | |_CCTK_PARAMCHECK                                  0.000427   0.000392   1.19e+06   1.19e+06          0   1.19e+06   1.19e+06
   2.3%      0.0    5.4%  | | |_CallFunction                                   0.000354   0.000319  9.874e+05  8.229e+04   3.91e+05  2.129e+04  3.832e+05
   2.0%      0.0    5.4%  | | | |_thorns                                       0.000322   0.000286  8.942e+05  7.451e+04  3.929e+05   1.51e+04  3.766e+05
   8.8%      0.0    5.7%  | |_CCTK_WRAGH                                       0.001555   0.001392  4.344e+06  4.344e+06          0  4.344e+06  4.344e+06
   8.1%      0.0    6.8%  | | |_CallFunction                                   0.001446   0.001283  4.036e+06  2.374e+05  2.155e+06  2.405e+04  2.268e+06
   7.3%      0.0    7.4%  | | | |_thorns                                       0.001313   0.001149   3.66e+06  2.153e+05  2.156e+06  1.787e+04  2.261e+06
   4.8%      0.0    0.3%  | | | | |_GRHydro_Startup                            0.000804   0.000804  2.249e+06  2.249e+06          0  2.249e+06  2.249e+06
   2.9%      0.0    1.7%  | |_Poison                                           0.000475   0.000476  1.328e+06  1.328e+06          0  1.328e+06  1.328e+06
   1.5%      0.0          | |_untimed
   1.7%      0.0    3.2%  |_CarpetLib::ggf::recompose_allocate                 0.000295   0.000274  7.706e+05       3652  1.423e+04       3236       9694
   1.5%      0.0    2.3%  |_CarpetLib::ggf::recompose_crop                     0.000264   0.000243  6.809e+05       3227  1.341e+04       3022  1.172e+04
   1.3%      0.0    0.7%  |_dh::recompose_free_old                             0.000216   0.000211  6.108e+05       2895       5504       2810       8192
   9.6%      0.0          | untimed
---------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------
Time      Time   Imblnc   Timer                                               gettimeof  getrusage      cycle  cycle[avg  cycle[sdv  cycle[min  cycle[max
percent   secs   percent                                                           secs       secs       secs       secs       secs       secs       secs
---------------------------------------------------------------------------------------------------------------------------------------------------------
 100.0%      0.1    0.0%  meta mode                                             0.08626    0.07076   2.41e+08  8.032e+07  1.967e+08       8912  2.409e+08
  24.5%      0.0    0.5%  |_meta mode                                           0.02109    0.01473  5.891e+07  1.964e+07  4.806e+07       9066  5.888e+07
  15.9%      0.0    0.1%  | |_global mode                                        0.0137   0.008931  3.828e+07   3.19e+06  1.606e+07  5.784e+04  1.737e+07
  12.4%      0.0    0.2%  | | |_level(0)                                        0.01065   0.006559  2.976e+07  6.469e+05  9.819e+06       5260  7.017e+06
   1.0%      0.0    3.9%  | | | |_enter_local_mode                             0.000854   0.000603  2.408e+06  1.616e+04  1.309e+05       2720  6.237e+04
  10.3%      0.0          | | | |_untimed
   3.3%      0.0          | | |_untimed
   8.3%      0.0          | |_untimed
  75.5%      0.1          | untimed
---------------------------------------------------------------------------------------------------------------------------------------------------------
        1     0.001 |  141.6994595 |    1.2500000 |    1.0000000 |    1.0004542 |        45
        2     0.001 |  148.4957604 |    1.2500190 |    1.0000000 |    1.0008475 |        45
        3     0.002 |  151.6510877 |    1.2500503 |    1.0000001 |    1.0011691 |        45
        4     0.002 |  153.4002601 |    1.2500936 |    1.0000003 |    1.0014184 |        45
        5     0.003 |  154.6762385 |    1.2501486 |    1.0000006 |    1.0015919 |        45
        6     0.003 |  155.5275348 |    1.2502148 |    1.0000010 |    1.0016819 |        45
        7     0.004 |  155.9754634 |    1.2502918 |    1.0000016 |    1.0016866 |        45
        8     0.004 |  156.2261776 |    1.2503791 |    1.0000024 |    1.0016151 |        45
        9     0.005 |  156.4764893 |    1.2504768 |    1.0000034 |    1.0014768 |        45
       10     0.005 |  156.7671090 |    1.2505848 |    1.0000044 |    1.0012736 |        45
INFO (TimerReport): Timer Report before terminating at iteration 10 time 0.005
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00041400 |       0.00025400 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10008300 |       0.09966800 |   0.00000391 |        0.00000391 |        0.00000000 |        0.00000391 |        0.00000391 
LoopControl     | Set up LoopControl                      |          0.00000200 |       0.00000200 |   0.00000171 |        0.00000171 |        0.00000000 |        0.00000171 |        0.00000171 
Timers          | Prepare hierarchical timers             |          0.00000700 |       0.00000700 |   0.00000623 |        0.00000623 |        0.00000000 |        0.00000623 |        0.00000623 
Carpet          | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000278 |        0.00000278 |        0.00000000 |        0.00000278 |        0.00000278 
IOUtil          | Startup routine                         |          0.00000200 |       0.00000200 |   0.00000233 |        0.00000233 |        0.00000000 |        0.00000233 |        0.00000233 
CarpetIOScalar  | Startup routine                         |          0.00001200 |       0.00001200 |   0.00001221 |        0.00001221 |        0.00000000 |        0.00001221 |        0.00001221 
CarpetInterp    | Startup routine                         |          0.00000100 |       0.00000100 |   0.00000121 |        0.00000121 |        0.00000000 |        0.00000121 |        0.00000121 
CarpetReduce    | Startup routine                         |          0.00002200 |       0.00002200 |   0.00002201 |        0.00002201 |        0.00000000 |        0.00002201 |        0.00002201 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000100 |       0.00000100 |   0.00000147 |        0.00000147 |        0.00000000 |        0.00000147 |        0.00000147 
CoordBase       | Register a GH extension to store the coo|          0.00000100 |       0.00000100 |   0.00000140 |        0.00000140 |        0.00000000 |        0.00000140 |        0.00000140 
AEILocalInterp  | register CCTK_InterpLocalUniform() inter|          0.00000400 |       0.00000400 |   0.00000312 |        0.00000312 |        0.00000000 |        0.00000312 |        0.00000312 
EOS_Omni        | Set up conversion factors and other fun |          0.00000700 |       0.00000700 |   0.00000657 |        0.00000657 |        0.00000000 |        0.00000657 |        0.00000657 
EOS_Polytrope   | Setup the polytropic EOS                |          0.00000200 |       0.00000300 |   0.00000232 |        0.00000232 |        0.00000000 |        0.00000232 |        0.00000232 
GRHydro         | Register the hydro masks                |          0.00000800 |       0.00000800 |   0.00000853 |        0.00000853 |        0.00000000 |        0.00000853 |        0.00000853 
HydroBase       | Startup banner                          |          0.00000100 |       0.00000200 |   0.00000152 |        0.00000152 |        0.00000000 |        0.00000152 |        0.00000152 
CarpetIOASCII   | Startup routine                         |          0.00003000 |       0.00003000 |   0.00002989 |        0.00002989 |        0.00000000 |        0.00002989 |        0.00002989 
LocalInterp     | register LocalInterp's interpolation ope|          0.00000200 |       0.00000200 |   0.00000164 |        0.00000164 |        0.00000000 |        0.00000164 |        0.00000164 
LocalReduce     | Startup routine                         |          0.00001200 |       0.00001200 |   0.00001185 |        0.00001185 |        0.00000000 |        0.00001185 |        0.00001185 
CarpetIOBasic   | Startup routine                         |          0.00000400 |       0.00000400 |   0.00000389 |        0.00000389 |        0.00000000 |        0.00000389 |        0.00000389 
MoL             | Startup banner                          |          0.00000100 |       0.00000100 |   0.00000141 |        0.00000141 |        0.00000000 |        0.00000141 |        0.00000141 
Slab            | Create MPI datatypes for complex variabl|          0.00000500 |       0.00000500 |   0.00000507 |        0.00000507 |        0.00000000 |        0.00000507 |        0.00000507 
SymBase         | Register GH Extension for SymBase       |          0.00000200 |       0.00000200 |   0.00000184 |        0.00000184 |        0.00000000 |        0.00000184 |        0.00000184 
TerminationTrigg| Start signal handler                    |          0.00002800 |       0.00002800 |   0.00002788 |        0.00002788 |        0.00000000 |        0.00002788 |        0.00002788 
CarpetIOHDF5    | Startup routine                         |          0.00002900 |       0.00002900 |   0.00002880 |        0.00002880 |        0.00000000 |        0.00002880 |        0.00002880 
Vectors         | Print startup message                   |          0.00002500 |       0.00000700 |   0.00002564 |        0.00002564 |        0.00000000 |        0.00002564 |        0.00002564 
hwloc           | Output hwloc version                    |          0.00002100 |       0.00000700 |   0.00002115 |        0.00002115 |        0.00000000 |        0.00002115 |        0.00002115 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10072900 |       0.10012400 |   0.00023638 |        0.00023638 |        0.00000000 |        0.00023638 |        0.00023638 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00003400 |       0.00003400 |   0.00003377 |        0.00003377 |        0.00000000 |        0.00003377 |        0.00003377 
Boundary        | Register boundary conditions that this t|          0.00001400 |       0.00001500 |   0.00001487 |        0.00001487 |        0.00000000 |        0.00001487 |        0.00001487 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00006200 |       0.00006100 |   0.00006191 |        0.00006191 |        0.00000000 |        0.00006191 |        0.00006191 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001200 |       0.00001100 |   0.00001191 |        0.00001191 |        0.00000000 |        0.00001191 |        0.00001191 
CoordGauge      | Identify the slicing for the next iterat|          0.00001000 |       0.00001000 |   0.00001056 |        0.00001056 |        0.00000000 |        0.00001056 |        0.00001056 
GRHydro         | Startup banner                          |          0.00081400 |       0.00081400 |   0.00081395 |        0.00081395 |        0.00000000 |        0.00081395 |        0.00081395 
GRHydro         | Initialize InLastMoLPostStep to zero    |          0.00001500 |       0.00001500 |   0.00001489 |        0.00001489 |        0.00000000 |        0.00001489 |        0.00001489 
MoL             | Set up the MoL bookkeeping index arrays |          0.00007400 |       0.00003200 |   0.00007457 |        0.00007457 |        0.00000000 |        0.00007457 |        0.00007457 
MoL             | Set the flag so it is ok to register wit|          0.00001200 |       0.00001100 |   0.00001107 |        0.00001107 |        0.00000000 |        0.00001107 |        0.00001107 
TmunuBase       | Set the stress_energy_state variable    |          0.00007100 |       0.00007100 |   0.00007141 |        0.00007141 |        0.00000000 |        0.00007141 |        0.00007141 
GRHydro         | Register variables for MoL              |          0.00005200 |       0.00005200 |   0.00005155 |        0.00005155 |        0.00000000 |        0.00005155 |        0.00005155 
Slab            | Initialise timers                       |          0.00003400 |       0.00003400 |   0.00003364 |        0.00003364 |        0.00000000 |        0.00003364 |        0.00003364 
SpaceMask       | Set grid symmetries for mask            |          0.00001200 |       0.00001300 |   0.00001228 |        0.00001228 |        0.00000000 |        0.00001228 |        0.00001228 
SpaceMask       | Set grid symmetries for emask (compatibi|          0.00001200 |       0.00001200 |   0.00001131 |        0.00001131 |        0.00000000 |        0.00001131 |        0.00001131 
CartGrid3D      | Register symmetry boundaries            |          0.00004700 |       0.00004700 |   0.00004693 |        0.00004693 |        0.00000000 |        0.00004693 |        0.00004693 
SymBase         | Print symmetry boundary face description|          0.00001100 |       0.00001100 |   0.00001070 |        0.00001070 |        0.00000000 |        0.00001070 |        0.00001070 
MoL             | Report how many of each type of variable|          0.00019600 |       0.00007600 |   0.00019627 |        0.00019627 |        0.00000000 |        0.00019627 |        0.00019627 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00148200 |       0.00131900 |   0.00148160 |        0.00148160 |        0.00000000 |        0.00148160 |        0.00148160 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001900 |       0.00001900 |   0.00001862 |        0.00001862 |        0.00000000 |        0.00001862 |        0.00001862 
Boundary        | Check dimension of grid variables       |          0.00001000 |       0.00001000 |   0.00000958 |        0.00000958 |        0.00000000 |        0.00000958 |        0.00000958 
Carpet          | Parameter checking routine              |          0.00001900 |       0.00001900 |   0.00001863 |        0.00001863 |        0.00000000 |        0.00001863 |        0.00001863 
CarpetLib       | Test prolongation operators             |          0.00002400 |       0.00002400 |   0.00002392 |        0.00002392 |        0.00000000 |        0.00002392 |        0.00002392 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00001200 |       0.00001200 |   0.00001264 |        0.00001264 |        0.00000000 |        0.00001264 |        0.00001264 
Fortran         | Test whether Fortran parameters work cor|          0.00001000 |       0.00001000 |   0.00000970 |        0.00000970 |        0.00000000 |        0.00000970 |        0.00000970 
GRHydro         | Check parameters                        |          0.00010000 |       0.00009900 |   0.00009974 |        0.00009974 |        0.00000000 |        0.00009974 |        0.00009974 
GRHydro_InitData| Check parameters                        |          0.00001700 |       0.00001700 |   0.00001703 |        0.00001703 |        0.00000000 |        0.00001703 |        0.00001703 
MoL             | Basic parameter checking                |          0.00001000 |       0.00001000 |   0.00001038 |        0.00001038 |        0.00000000 |        0.00001038 |        0.00001038 
TerminationTrigg| Check consitency of parameters          |          0.00001000 |       0.00001000 |   0.00000987 |        0.00000987 |        0.00000000 |        0.00000987 |        0.00000987 
TmunuBase       | Check that no deprecated parameters are |          0.00001000 |       0.00001000 |   0.00000973 |        0.00000973 |        0.00000000 |        0.00000973 |        0.00000973 
Vectors         | Run correctness tests.                  |          0.00013900 |       0.00010400 |   0.00013912 |        0.00013912 |        0.00000000 |        0.00013912 |        0.00013912 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00038000 |       0.00034400 |   0.00037898 |        0.00037898 |        0.00000000 |        0.00037898 |        0.00037898 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00003700 |       0.00003800 |   0.00003700 |        0.00003700 |        0.00000000 |        0.00003700 |        0.00003700 
ADMBase         | Set the dtlapse_state variable to 0     |          0.00003000 |       0.00003000 |   0.00003003 |        0.00003003 |        0.00000000 |        0.00003003 |        0.00003003 
ADMBase         | Set the dtshift_state variable to 0     |          0.00003100 |       0.00003000 |   0.00003036 |        0.00003036 |        0.00000000 |        0.00003036 |        0.00003036 
ADMMacros       | Initialize the local_spatial_order      |          0.00003100 |       0.00003000 |   0.00003013 |        0.00003013 |        0.00000000 |        0.00003013 |        0.00003013 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00019500 |       0.00009900 |   0.00019566 |        0.00019566 |        0.00000000 |        0.00019566 |        0.00019566 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00004800 |       0.00004700 |   0.00004725 |        0.00004725 |        0.00000000 |        0.00004725 |        0.00004725 
CarpetReduce    | Allocate the weight function            |          0.00006200 |       0.00006200 |   0.00006187 |        0.00006187 |        0.00000000 |        0.00006187 |        0.00006187 
CarpetReduce    | Initialise the weight function          |          0.00010300 |       0.00000000 |   0.00008872 |        0.00008872 |        0.00000000 |        0.00008872 |        0.00008872 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00013400 |       0.00000000 |   0.00013369 |        0.00013369 |        0.00000000 |        0.00013369 |        0.00013369 
CarpetReduce    | Set up the weight function for the restr|          0.00005400 |       0.00000000 |   0.00005402 |        0.00005402 |        0.00000000 |        0.00005402 |        0.00005402 
CarpetReduce    | Set the weight function                 |          0.00006400 |       0.00000000 |   0.00006456 |        0.00006456 |        0.00000000 |        0.00006456 |        0.00006456 
CarpetReduce    | Test the weight function                |          0.00009500 |       0.00000000 |   0.00009531 |        0.00009531 |        0.00000000 |        0.00009531 |        0.00009531 
GRHydro         | Initially set execution flags to 'YEAH, |          0.00002100 |       0.00000000 |   0.00002062 |        0.00002062 |        0.00000000 |        0.00002062 |        0.00002062 
GRHydro         | Schedule symmetries and check shift stat|          0.00014000 |       0.00000000 |   0.00014004 |        0.00014004 |        0.00000000 |        0.00014004 |        0.00014004 
GRHydro         | Initialise the mask function that contai|          0.00010900 |       0.00000000 |   0.00010904 |        0.00010904 |        0.00000000 |        0.00010904 |        0.00010904 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00002000 |       0.00000000 |   0.00002016 |        0.00002016 |        0.00000000 |        0.00002016 |        0.00002016 
SpaceMask       | Initialise mask to zero                 |          0.00003300 |       0.00000000 |   0.00003241 |        0.00003241 |        0.00000000 |        0.00003241 |        0.00003241 
SpaceMask       | Set old style mask to one               |          0.00003300 |       0.00000000 |   0.00003232 |        0.00003232 |        0.00000000 |        0.00003232 |        0.00003232 
SymBase         | Check whether the driver set up the grid|          0.00003200 |       0.00000000 |   0.00003191 |        0.00003191 |        0.00000000 |        0.00003191 |        0.00003191 
TerminationTrigg| Clear trigger state                     |          0.00003100 |       0.00000000 |   0.00003186 |        0.00003186 |        0.00000000 |        0.00003186 |        0.00003186 
TerminationTrigg| Start timer                             |          0.00007000 |       0.00000000 |   0.00007019 |        0.00007019 |        0.00000000 |        0.00007019 |        0.00007019 
TerminationTrigg| Create termination file                 |          0.00008800 |       0.00000000 |   0.00008785 |        0.00008785 |        0.00000000 |        0.00008785 |        0.00008785 
Time            | Initialise Time variables               |          0.00002100 |       0.00000000 |   0.00002150 |        0.00002150 |        0.00000000 |        0.00002150 |        0.00002150 
Time            | Set timestep based on Courant condition |          0.00004500 |       0.00000000 |   0.00004491 |        0.00004491 |        0.00000000 |        0.00004491 |        0.00004491 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.00152700 |       0.00033600 |   0.00151142 |        0.00151142 |        0.00000000 |        0.00151142 |        0.00151142 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00004600 |       0.00000000 |   0.00004601 |        0.00004601 |        0.00000000 |        0.00004601 |        0.00004601 
ADMBase         | Set the metric and extrinsic curvature t|          0.00005300 |       0.00000000 |   0.00005327 |        0.00005327 |        0.00000000 |        0.00005327 |        0.00005327 
GRHydro         | Set the EOS number                      |          0.00009200 |       0.00000000 |   0.00009278 |        0.00009278 |        0.00000000 |        0.00009278 |        0.00009278 
CarpetIOASCII   | Initialisation routine                  |          0.00002100 |       0.00000000 |   0.00002037 |        0.00002037 |        0.00000000 |        0.00002037 |        0.00002037 
CarpetIOBasic   | Initialisation routine                  |          0.00002000 |       0.00000000 |   0.00001926 |        0.00001926 |        0.00000000 |        0.00001926 |        0.00001926 
CarpetIOHDF5    | Initialisation routine                  |          0.00002000 |       0.00000000 |   0.00002017 |        0.00002017 |        0.00000000 |        0.00002017 |        0.00002017 
CarpetIOScalar  | Initialisation routine                  |          0.00001900 |       0.00000000 |   0.00001930 |        0.00001930 |        0.00000000 |        0.00001930 |        0.00001930 
GRHydro         | Set up minimum for the rest-mass density|          0.00011600 |       0.00000000 |   0.00011658 |        0.00011658 |        0.00000000 |        0.00011658 |        0.00011658 
GRHydro         | Initialize the atmosphere mask          |          0.00013300 |       0.00000000 |   0.00013267 |        0.00013267 |        0.00000000 |        0.00013267 |        0.00013267 
GRHydro         | Calculate current refinement level      |          0.00010600 |       0.00000000 |   0.00010588 |        0.00010588 |        0.00000000 |        0.00010588 |        0.00010588 
ADMBase         | Set the lapse to 1 at all points        |          0.00003400 |       0.00000000 |   0.00003372 |        0.00003372 |        0.00000000 |        0.00003372 |        0.00003372 
ADMBase         | Set the shift to 0 at all points        |          0.00003800 |       0.00000000 |   0.00003831 |        0.00003831 |        0.00000000 |        0.00003831 |        0.00003831 
GRHydro         | Set divB initially to zero              |          0.00010300 |       0.00000000 |   0.00010312 |        0.00010312 |        0.00000000 |        0.00010312 |        0.00010312 
GRHydro_InitData| Shocktube initial data - MHD version    |          0.00064200 |       0.00000000 |   0.00064229 |        0.00064229 |        0.00000000 |        0.00064229 |        0.00064229 
HydroBase       | Initialize hydro excision mask to 'no ex|          0.00003900 |       0.00000000 |   0.00003878 |        0.00003878 |        0.00000000 |        0.00003878 |        0.00003878 
GRHydro         | Calculate sdetg                         |          0.00011200 |       0.00000000 |   0.00011205 |        0.00011205 |        0.00000000 |        0.00011205 |        0.00011205 
GRHydro         | Use mask to enforce atmosphere at initia|          0.00012700 |       0.00000000 |   0.00012657 |        0.00012657 |        0.00000000 |        0.00012657 |        0.00012657 
MoL             | Initialise the step size control        |          0.00001100 |       0.00000000 |   0.00001114 |        0.00001114 |        0.00000000 |        0.00001114 |        0.00001114 
GRHydro         | Convert initial data given in primive va|          0.00017000 |       0.00000000 |   0.00017021 |        0.00017021 |        0.00000000 |        0.00017021 |        0.00017021 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.00190200 |       0.00000000 |   0.00190248 |        0.00190248 |        0.00000000 |        0.00190248 |        0.00190248 
==================================================================================================================================================================================================
CarpetIOHDF5    | Close all filereader input files        |          0.00004000 |       0.00000000 |   0.00003998 |        0.00003998 |        0.00000000 |        0.00003998 |        0.00003998 
GRHydro         | Set up and check scalars for efficiency |          0.00010300 |       0.00000000 |   0.00010366 |        0.00010366 |        0.00000000 |        0.00010366 |        0.00010366 
ADMBase         | Select ADMBase boundary conditions - may|          0.00028300 |       0.00000000 |   0.00028271 |        0.00028271 |        0.00000000 |        0.00028271 |        0.00028271 
Boundary        | Apply all requested local physical bound|          0.00031600 |       0.00022800 |   0.00031548 |        0.00007887 |        0.00009435 |        0.00003795 |        0.00015489 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00012400 |       0.00008500 |   0.00012290 |        0.00003073 |        0.00000456 |        0.00002876 |        0.00003450 
Boundary        | Unselect all grid variables for boundary|          0.00003600 |       0.00002300 |   0.00003445 |        0.00000861 |        0.00000304 |        0.00000755 |        0.00001123 
GRHydro         | Calculate current refinement level      |          0.00010600 |       0.00000000 |   0.00010551 |        0.00010551 |        0.00000000 |        0.00010551 |        0.00010551 
GRHydro         | Set grid scalar InLastMoLPostStep if thi|          0.00001300 |       0.00000000 |   0.00001277 |        0.00001277 |        0.00000000 |        0.00001277 |        0.00001277 
GRHydro         | Select atmosphere mask for boundary cond|          0.00015700 |       0.00004000 |   0.00015672 |        0.00015672 |        0.00000000 |        0.00015672 |        0.00015672 
GRHydro         | Set integer atmosphere mask from synchro|          0.00011200 |       0.00011200 |   0.00011154 |        0.00011154 |        0.00000000 |        0.00011154 |        0.00011154 
GRHydro         | Reset the atmosphere - MHD version      |          0.00011100 |       0.00011100 |   0.00011126 |        0.00011126 |        0.00000000 |        0.00011126 |        0.00011126 
GRHydro         | Compute comoving magnetic field, pressur|          0.00014900 |       0.00014900 |   0.00014876 |        0.00014876 |        0.00000000 |        0.00014876 |        0.00014876 
GRHydro         | Select GRHydro boundary conditions      |          0.00026600 |       0.00026600 |   0.00026599 |        0.00026599 |        0.00000000 |        0.00026599 |        0.00026599 
GRHydro         | Calculate sdetg                         |          0.00011100 |       0.00010500 |   0.00011119 |        0.00011119 |        0.00000000 |        0.00011119 |        0.00011119 
GRHydro         | Convert back to primitive variables (gen|          0.00040100 |       0.00038100 |   0.00040089 |        0.00040089 |        0.00000000 |        0.00040089 |        0.00040089 
GRHydro         | Calculate divB                          |          0.00011100 |       0.00010500 |   0.00011123 |        0.00011123 |        0.00000000 |        0.00011123 |        0.00011123 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.00243900 |       0.00160500 |   0.00243504 |        0.00208041 |        0.00010195 |        0.00203646 |        0.00216282 
==================================================================================================================================================================================================
GRHydro         | Set the value of the rest-mass density o|          0.00013000 |       0.00012400 |   0.00013039 |        0.00013039 |        0.00000000 |        0.00013039 |        0.00013039 
GRHydro         | Use mask to enforce atmosphere at initia|          0.00018400 |       0.00014200 |   0.00018399 |        0.00018399 |        0.00000000 |        0.00018399 |        0.00018399 
GRHydro         | Calculate sdetg                         |          0.00011400 |       0.00010800 |   0.00011361 |        0.00011361 |        0.00000000 |        0.00011361 |        0.00011361 
GRHydro         | Convert back to primitive variables (gen|          0.00039600 |       0.00037600 |   0.00039568 |        0.00039568 |        0.00000000 |        0.00039568 |        0.00039568 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTPOSTINITIAL     |          0.00082400 |       0.00075000 |   0.00082367 |        0.00082367 |        0.00000000 |        0.00082367 |        0.00082367 
==================================================================================================================================================================================================
CarpetIOHDF5    | Initial data checkpoint routine         |          0.00005200 |       0.00005000 |   0.00005233 |        0.00005233 |        0.00000000 |        0.00005233 |        0.00005233 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_CPINITIAL           |          0.00005200 |       0.00005000 |   0.00005233 |        0.00005233 |        0.00000000 |        0.00005233 |        0.00005233 
==================================================================================================================================================================================================
ADMBase         | Copy the lapse to the current time level|          0.00032600 |       0.00029400 |   0.00032542 |        0.00003254 |        0.00001289 |        0.00003094 |        0.00004475 
ADMBase         | Copy the shift to the current time level|          0.00030800 |       0.00027800 |   0.00030885 |        0.00003089 |        0.00000516 |        0.00003012 |        0.00003576 
ADMBase         | Copy the metric and extrinsic curvature |          0.00038200 |       0.00034300 |   0.00038237 |        0.00003824 |        0.00001991 |        0.00003496 |        0.00005616 
CoordGauge      | Identify the slicing for the next iterat|          0.00029200 |       0.00026400 |   0.00029290 |        0.00002929 |        0.00000447 |        0.00002847 |        0.00003347 
GRHydro         | Reset the mask function that contains th|          0.00106800 |       0.00096100 |   0.00106688 |        0.00010669 |        0.00001066 |        0.00010363 |        0.00011504 
LoopControl     | Update LoopControl algorithm preferences|          0.00046600 |       0.00041800 |   0.00046312 |        0.00004631 |        0.00000769 |        0.00004363 |        0.00005210 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00016800 |       0.00015400 |   0.00016954 |        0.00001695 |        0.00000387 |        0.00001643 |        0.00002062 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00301000 |       0.00271200 |   0.00300907 |        0.00030091 |        0.00006464 |        0.00028817 |        0.00035790 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00009300 |       0.00008600 |   0.00009403 |        0.00000940 |        0.00001248 |        0.00000789 |        0.00002123 
MoL             | Set the counter for the ODE method to lo|          0.00010300 |       0.00009200 |   0.00010127 |        0.00001013 |        0.00000326 |        0.00000966 |        0.00001320 
MoL             | Ensure the correct time and timestep are|          0.00008200 |       0.00007500 |   0.00008070 |        0.00000807 |        0.00000333 |        0.00000767 |        0.00001122 
MoL             | Allocate storage for scratch levels     |          0.00038000 |       0.00035000 |   0.00037989 |        0.00003799 |        0.00006360 |        0.00002927 |        0.00009816 
GRHydro         | Set up and check scalars for efficiency |          0.00104700 |       0.00094400 |   0.00104712 |        0.00010471 |        0.00000937 |        0.00010316 |        0.00011348 
MoL             | Allocate sufficient space for array scra|          0.00028300 |       0.00025500 |   0.00028324 |        0.00002832 |        0.00000430 |        0.00002773 |        0.00003239 
MoL             | Ensure the data is in the correct timele|          0.00098600 |       0.00089300 |   0.00098625 |        0.00009862 |        0.00001843 |        0.00009401 |        0.00011452 
MoL             | Initialise the RHS functions            |          0.00085000 |       0.00079800 |   0.00084775 |        0.00004239 |        0.00004141 |        0.00003821 |        0.00007181 
GRHydro         | Source term calculation                 |          0.00094700 |       0.00090200 |   0.00096794 |        0.00004840 |        0.00003046 |        0.00004365 |        0.00006668 
GRHydro         | Set the flux_direction variable         |          0.00162000 |       0.00153700 |   0.00162020 |        0.00008101 |        0.00001823 |        0.00007735 |        0.00009582 
GRHydro         | Calculate current refinement level      |          0.00610000 |       0.00579700 |   0.00610008 |        0.00010167 |        0.00005078 |        0.00009816 |        0.00014410 
GRHydro         | Reconstruct the functions at the cell bo|          0.00673600 |       0.00639400 |   0.00673526 |        0.00011225 |        0.00006742 |        0.00010518 |        0.00016851 
GRHydro         | Solve the local Riemann problems - MHD v|          0.00833100 |       0.00790800 |   0.00833061 |        0.00013884 |        0.00002787 |        0.00013529 |        0.00016155 
GRHydro         | Calculate the update term from the fluxe|          0.00631000 |       0.00598300 |   0.00631128 |        0.00010519 |        0.00003009 |        0.00010262 |        0.00012720 
GRHydro         | Decrement the flux_direction variable   |          0.00471000 |       0.00446000 |   0.00470994 |        0.00007850 |        0.00003213 |        0.00007710 |        0.00010204 
GRHydro         | Alter the update terms if inside the atm|          0.00207400 |       0.00196600 |   0.00207149 |        0.00010357 |        0.00001976 |        0.00010049 |        0.00012094 
MoL             | Updates calculated with the efficient Ru|          0.00089500 |       0.00084800 |   0.00089345 |        0.00004467 |        0.00001129 |        0.00004144 |        0.00005111 
MoL             | Alter the counter number                |          0.00017200 |       0.00016400 |   0.00017269 |        0.00000863 |        0.00000395 |        0.00000775 |        0.00001176 
MoL             | If necessary, change the time           |          0.00016300 |       0.00015000 |   0.00016194 |        0.00000810 |        0.00000379 |        0.00000758 |        0.00001169 
ADMBase         | Select ADMBase boundary conditions - may|          0.00292400 |       0.00276700 |   0.00292579 |        0.00014629 |        0.00005649 |        0.00013484 |        0.00019567 
Boundary        | Apply all requested local physical bound|          0.00570900 |       0.00559200 |   0.00570815 |        0.00008154 |        0.00039882 |        0.00003747 |        0.00015931 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00210500 |       0.00204200 |   0.00210462 |        0.00003007 |        0.00000884 |        0.00002865 |        0.00003577 
Boundary        | Unselect all grid variables for boundary|          0.00053900 |       0.00052600 |   0.00054323 |        0.00000776 |        0.00000440 |        0.00000746 |        0.00001188 
GRHydro         | Calculate current refinement level      |          0.00201800 |       0.00191300 |   0.00201731 |        0.00010087 |        0.00000311 |        0.00009998 |        0.00010297 
GRHydro         | Set grid scalar InLastMoLPostStep if thi|          0.00018500 |       0.00017700 |   0.00018667 |        0.00000933 |        0.00000428 |        0.00000879 |        0.00001343 
GRHydro         | Select atmosphere mask for boundary cond|          0.00235500 |       0.00223000 |   0.00235487 |        0.00011774 |        0.00000999 |        0.00011543 |        0.00012336 
GRHydro         | Set integer atmosphere mask from synchro|          0.00206100 |       0.00203000 |   0.00205878 |        0.00010294 |        0.00002427 |        0.00010067 |        0.00012623 
GRHydro         | Reset the atmosphere - MHD version      |          0.00105900 |       0.00105500 |   0.00105885 |        0.00010588 |        0.00001497 |        0.00010288 |        0.00011810 
GRHydro         | Compute comoving magnetic field, pressur|          0.00283900 |       0.00283700 |   0.00283960 |        0.00014198 |        0.00000596 |        0.00013996 |        0.00014662 
GRHydro         | Select GRHydro boundary conditions      |          0.00439000 |       0.00439100 |   0.00438833 |        0.00021942 |        0.00001494 |        0.00021456 |        0.00022703 
GRHydro         | Calculate sdetg                         |          0.00212500 |       0.00212200 |   0.00212140 |        0.00010607 |        0.00000543 |        0.00010463 |        0.00011025 
GRHydro         | Convert back to primitive variables (gen|          0.00843300 |       0.00842500 |   0.00843467 |        0.00042173 |        0.00004001 |        0.00040873 |        0.00044522 
GRHydro         | Reset InLastMoLPostStep to zero         |          0.00024900 |       0.00018200 |   0.00024764 |        0.00001238 |        0.00008688 |        0.00000757 |        0.00009699 
MoL             | If necessary, change the timestep       |          0.00016100 |       0.00016200 |   0.00016126 |        0.00000806 |        0.00000400 |        0.00000758 |        0.00001183 
MoL             | Control the step size                   |          0.00008300 |       0.00008500 |   0.00008283 |        0.00000828 |        0.00000549 |        0.00000761 |        0.00001349 
MoL             | Restoring the Save and Restore variables|          0.00055600 |       0.00055600 |   0.00055580 |        0.00005558 |        0.00001394 |        0.00005164 |        0.00006763 
MoL             | Free storage for scratch levels         |          0.00019900 |       0.00019800 |   0.00019897 |        0.00001990 |        0.00000591 |        0.00001847 |        0.00002404 
GRHydro         | Syncronise the mask function that contai|          0.00145900 |       0.00145100 |   0.00145982 |        0.00014598 |        0.00002891 |        0.00013758 |        0.00016542 
GRHydro         | Calculate divB                          |          0.00107900 |       0.00107900 |   0.00107900 |        0.00010790 |        0.00000667 |        0.00010625 |        0.00011381 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |          0.08241000 |       0.07942200 |   0.08242272 |        0.00312019 |        0.00119523 |        0.00295496 |        0.00384643 
==================================================================================================================================================================================================
GRHydro         | Calculate current refinement level (for |          0.00112600 |       0.00111500 |   0.00112339 |        0.00010213 |        0.00001627 |        0.00009925 |        0.00011478 
GRHydro         | Check the mask function that contains th|          0.00117800 |       0.00117200 |   0.00117751 |        0.00010705 |        0.00000974 |        0.00010467 |        0.00011435 
NaNChecker      | Prepare data structures to check for NaN|          0.00009700 |       0.00009900 |   0.00009695 |        0.00000881 |        0.00000514 |        0.00000792 |        0.00001253 
NaNChecker      | Check for NaNs                          |          0.00675500 |       0.00672200 |   0.00675268 |        0.00061388 |        0.00005944 |        0.00060272 |        0.00066646 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00017900 |       0.00017600 |   0.00017703 |        0.00001609 |        0.00000784 |        0.00001392 |        0.00002065 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00031100 |       0.00030900 |   0.00031033 |        0.00002821 |        0.00000687 |        0.00002636 |        0.00003233 
SpaceMask       | Ensure that all mask values are legal   |          0.00034200 |       0.00034100 |   0.00034225 |        0.00003111 |        0.00000561 |        0.00002976 |        0.00003496 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00998800 |       0.00993400 |   0.00998014 |        0.00090729 |        0.00011090 |        0.00088459 |        0.00099605 
==================================================================================================================================================================================================
CarpetIOHDF5    | Evolution checkpoint routine            |          0.00052500 |       0.00051300 |   0.00052065 |        0.00005207 |        0.00002670 |        0.00004446 |        0.00006931 
TimerReport     | Print the timer report                  |          0.00017100 |       0.00016900 |   0.00017043 |        0.00001704 |        0.00000420 |        0.00001649 |        0.00002102 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_CHECKPOINT          |          0.00069600 |       0.00068200 |   0.00069108 |        0.00006911 |        0.00003090 |        0.00006095 |        0.00009033 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00020700 |       0.00020200 |   0.00020465 |        0.00001860 |        0.00001528 |        0.00001629 |        0.00003038 
CarpetLib       | Print memory statistics if desired      |          0.00072000 |       0.00048600 |   0.00071888 |        0.00006535 |        0.00051073 |        0.00001615 |        0.00055230 
LoopControl     | Output LoopControl statistics           |          0.00046700 |       0.00042800 |   0.00046685 |        0.00004244 |        0.00001842 |        0.00003870 |        0.00005495 
SystemStatistics| Collect system statistics               |          0.00134200 |       0.00122400 |   0.00134371 |        0.00012216 |        0.00002277 |        0.00011122 |        0.00013228 
TerminationTrigg| Check elapsed job walltime              |          0.00035500 |       0.00031900 |   0.00035387 |        0.00003217 |        0.00001327 |        0.00002955 |        0.00004371 
TerminationTrigg| Check if we received a termination signa|          0.00033100 |       0.00029900 |   0.00032987 |        0.00002999 |        0.00000483 |        0.00002888 |        0.00003305 
TerminationTrigg| Check termination file                  |          0.00044100 |       0.00039900 |   0.00043835 |        0.00003985 |        0.00001312 |        0.00003660 |        0.00005150 
TimerReport     | Print the timer report                  |          0.00019400 |       0.00017400 |   0.00019255 |        0.00001750 |        0.00000486 |        0.00001660 |        0.00002070 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.00405700 |       0.00353100 |   0.00404874 |        0.00036807 |        0.00060328 |        0.00029399 |        0.00091887 
==================================================================================================================================================================================================
CarpetIOHDF5    | Termination checkpoint routine          |          0.00006100 |       0.00000000 |   0.00006116 |        0.00006116 |        0.00000000 |        0.00006116 |        0.00006116 
LoopControl     | Output LoopControl statistics           |          0.00004800 |       0.00000000 |   0.00004835 |        0.00004835 |        0.00000000 |        0.00004835 |        0.00004835 
MoL             | Free the MoL bookkeeping index arrays   |          0.00003900 |       0.00000000 |   0.00003888 |        0.00003888 |        0.00000000 |        0.00003888 |        0.00003888 
TimerReport     | Print the timer report                  |          0.00000000 |       0.00000000 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00014800 |       0.00000000 |   0.00014839 |        0.00014839 |        0.00000000 |        0.00014839 |        0.00014839 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          0.14156900 |       0.12356000 |   0.14156727 |        0.14156727 |        0.00000000 |        0.14156727 |        0.14156727 
==================================================================================================================================================================================================
INFO (TimerReport): Top timers at iteration 10 time 0.005
======================================================================
    %    Time/s   Min/s   Max/s   Timer (gettimeofday)
======================================================================
100.0   0.139634 0.137699 0.141569   CCTK total time
 91.1   0.127198 0.126826 0.127571   meta mode/meta mode/global mode
 86.6   0.120869 0.120553 0.121185   meta mode/meta mode/global mode/level(0)
 83.1   0.116090 0.116082 0.116098   main/Evolve
 71.7   0.100052 0.100021 0.100083   [0001] CycleClock: CycleClock_Setup in CCTK_STARTUP
 68.0   0.094901 0.094844 0.094959   main/Evolve/CallEvol
 62.4   0.087190 0.087180 0.087200   main/Evolve/CallEvol/CCTK_EVOL
 61.8   0.086290 0.086262 0.086319   meta mode
 57.6   0.080383 0.080335 0.080431   main/Evolve/CallEvol/CCTK_EVOL/CallFunction
 46.0   0.064229 0.064199 0.064259   main/CarpetStartup
 44.2   0.061663 0.061600 0.061726   main/CarpetStartup/CarpetLib::gh::regrid
 44.0   0.061389 0.061321 0.061457   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid
 41.5   0.057917 0.057375 0.058459   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns
 15.5   0.021666 0.021666 0.021667   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/test
 15.2   0.021185 0.021087 0.021282   meta mode/meta mode
 14.8   0.020638 0.020636 0.020640   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/buffers
 14.3   0.019984 0.019682 0.020285   main/Evolve/CallAnalysis
 11.9   0.016675 0.016672 0.016679   main/Initialise
  6.6   0.009225 0.009188 0.009262   main/Evolve/CallAnalysis/CCTK_POSTSTEP
  6.4   0.008948 0.008909 0.008987   main/Evolve/CallAnalysis/CCTK_POSTSTEP/CallFunction
  6.3   0.008855 0.008816 0.008895   meta mode/meta mode/global mode/level(0)/enter_local_mode
  5.9   0.008244 0.008156 0.008331   [0154] GRHydro: Riemann in CCTK_EVOL
  5.9   0.008241 0.008049 0.008433   [0172] GRHydro: Con2Prim in CCTK_EVOL
  5.6   0.007796 0.007742 0.007849   main/Evolve/CallAnalysis/CCTK_POSTSTEP/CallFunction/thorns
  5.5   0.007738 0.007717 0.007759   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/region
  5.5   0.007701 0.007514 0.007888   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/Con2Prim
  5.1   0.007109 0.007087 0.007131   main/Initialise/CallInitial
  5.0   0.007019 0.006292 0.007747   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs
  4.7   0.006582 0.006428 0.006736   [0153] GRHydro: Reconstruct in CCTK_EVOL
  4.7   0.006554 0.006488 0.006621   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/Riemann
  4.7   0.006553 0.005818 0.007288   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/syncs/Sync
  4.7   0.006526 0.006297 0.006755   [0122] NaNChecker: NaNChecker_NaNCheck_Check in CCTK_POSTSTEP
  4.5   0.006304 0.006301 0.006306   main/CarpetStartup/CarpetLib::gh::regrid/CarpetLib::dh::regrid/bcast_comm
  4.5   0.006287 0.006264 0.006310   [0155] GRHydro: UpdateCalcul in CCTK_EVOL
  4.4   0.006091 0.006083 0.006100   [0152] GRHydro: GRHydro_RefinementLevel in CCTK_EVOL
  4.2   0.005871 0.005863 0.005880   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/GRHydro_RefinementLevel
  4.1   0.005662 0.005455 0.005870   main/Evolve/CallAnalysis/CCTK_POSTSTEP/CallFunction/thorns/NaNChecker_NaNCheck_Check
  4.0   0.005601 0.005493 0.005709   [0162] Boundary: Boundary_ApplyPhysicalBCs in CCTK_EVOL
  3.5   0.004928 0.004789 0.005068   main/Evolve/CallEvol/CCTK_EVOL/CallFunction/thorns/Reconstruct
  3.5   0.004901 0.004560 0.005243   main/Evolve/CallAnalysis/OutputGH
======================================================================
---------------------------------------------------------------------------------------------------------------------------------------------------------
Time      Time   Imblnc   Timer                                               gettimeof  getrusage      cycle  cycle[avg  cycle[sdv  cycle[min  cycle[max
percent   secs   percent                                                           secs       secs       secs       secs       secs       secs       secs
---------------------------------------------------------------------------------------------------------------------------------------------------------
 100.0%      0.1    0.0%  Evolve                                                 0.1161       0.11  3.243e+08  3.243e+08          0  3.243e+08  3.243e+08
  17.2%      0.0    1.5%  |_CallAnalysis                                        0.02029    0.01814  5.666e+07  5.666e+06  2.001e+06  5.199e+06  7.417e+06
   2.8%      0.0    1.5%  | |_CCTK_ANALYSIS                                    0.003275   0.003007  9.149e+06  9.149e+05  1.463e+05  8.727e+05  1.044e+06
   2.5%      0.0    1.8%  | | |_CallFunction                                    0.00298    0.00272  8.308e+06  1.038e+05  8.133e+05  3.978e+04  3.639e+05
   1.2%      0.0    2.9%  | | | |_thorns                                        0.00149   0.001366  4.161e+06  5.202e+04  8.512e+05       9550  3.305e+05
   1.3%      0.0          | | | |_untimed
   7.9%      0.0    0.4%  | |_CCTK_POSTSTEP                                    0.009188   0.009188  2.566e+07  2.566e+06  2.011e+05  2.509e+06  2.709e+06
   7.7%      0.0    0.4%  | | |_CallFunction                                   0.008909   0.008911  2.488e+07  3.555e+05  4.709e+06   1.68e+04  1.856e+06
   6.7%      0.0    0.7%  | | | |_thorns                                       0.007742   0.007737  2.162e+07  3.088e+05  4.636e+06       9664  1.794e+06
   4.9%      0.0    3.5%  | | | | |_NaNChecker_NaNCheck_Check                   0.00587   0.005871   1.64e+07   1.64e+06  1.671e+05  1.609e+06  1.788e+06
   4.2%      0.0    6.5%  | |_OutputGH                                         0.005243   0.003515  1.464e+07  1.464e+06  1.808e+06  1.201e+06   3.16e+06
   4.2%      0.0    6.5%  | | |_OutputGH                                       0.005209   0.003486  1.456e+07  1.456e+06  1.807e+06  1.194e+06  3.153e+06
   2.0%      0.0   15.3%  | | | |_IOBasic::CarpetIOBasic [5]                   0.002796   0.002009  7.804e+06  7.804e+05  7.496e+04  7.477e+05  8.205e+05
   2.0%      0.0   15.3%  | | | | |_OutputGH                                   0.002755   0.001978  7.713e+06  7.713e+05  7.029e+04    7.4e+05  8.029e+05
   1.6%      0.0          | |_untimed
  81.7%      0.1    0.1%  |_CallEvol                                            0.09496    0.09106  2.653e+08  2.653e+07  4.639e+06  2.585e+07  3.091e+07
  75.1%      0.1    0.0%  | |_CCTK_EVOL                                          0.0872    0.08404  2.436e+08  2.436e+07  4.313e+06  2.376e+07  2.844e+07
  69.2%      0.1    0.1%  | | |_CallFunction                                    0.08043    0.07751  2.247e+08  2.247e+05  6.215e+06  1.549e+04  1.238e+06
   6.0%      0.0    9.4%  | | | |_syncs                                        0.006292   0.006107  1.758e+07  2.512e+05  1.058e+06  9.589e+04  4.795e+05
   5.6%      0.0   10.1%  | | | | |_Sync                                       0.005818    0.00566  1.627e+07  2.324e+05  1.019e+06  8.402e+04  4.516e+05
   1.4%      0.0    1.2%  | | | | | |_comm_state[3].state_fill_send_buffers.   0.001644   0.001596  4.604e+06  6.577e+04  3.547e+05   1.29e+04  1.537e+05
   1.2%      0.0   34.6%  | | | | | |_comm_state[6].state_do_some_work.step    0.000659   0.000645  1.862e+06   2.66e+04  1.312e+05       8000  6.093e+04
   1.2%      0.0    0.3%  | | | | | |_comm_state[7].state_empty_recv_buffers   0.001378    0.00134  3.857e+06   5.51e+04  3.374e+05       8416  1.011e+05
  49.9%      0.1    0.9%  | | | |_thorns                                        0.05846    0.05642  1.636e+08  1.636e+05  5.531e+06       9458  1.175e+06
   3.2%      0.0    2.5%  | | | | |_Boundary_ApplyPhysicalBCs                  0.003784   0.003724  1.059e+07  1.513e+05  1.107e+06  3.197e+04  3.687e+05
   6.6%      0.0    2.4%  | | | | |_Con2Prim                                   0.007888   0.007883  2.205e+07  1.102e+06  1.135e+05   1.06e+06  1.169e+06
   3.7%      0.0    0.1%  | | | | |_GRHydroAdvanceLoop                         0.004318   0.004094   1.21e+07  2.017e+05  8.871e+04  1.981e+05  2.674e+05
   1.3%      0.0    0.1%  | | | | |_GRHydroPostSyncAtmosphereMask              0.001522   0.001515  4.267e+06  2.133e+05  6.678e+04  2.078e+05  2.783e+05
   1.3%      0.0    0.0%  | | | | |_GRHydroStartLoop                           0.001488   0.001412   4.16e+06   2.08e+05  4.811e+04  1.988e+05  2.498e+05
   1.3%      0.0    0.9%  | | | | |_GRHydroUpdateAtmosphereMask                0.001529   0.001449  4.277e+06  2.138e+05  5.195e+04  2.067e+05   2.62e+05
   1.5%      0.0    0.1%  | | | | |_GRHydro_Bound                              0.001703   0.001704  4.767e+06  2.383e+05       6737  2.359e+05  2.418e+05
   2.0%      0.0    1.0%  | | | | |_GRHydro_CalcBcom                             0.0023   0.002302  6.436e+06  3.218e+05       9849  3.173e+05  3.255e+05
   5.1%      0.0    0.1%  | | | | |_GRHydro_RefinementLevel                    0.005863   0.005567  1.638e+07  2.047e+05  7.539e+04  1.974e+05  2.467e+05
   1.3%      0.0    0.3%  | | | | |_GRHydro_SelectAtmosphereMaskBoundaries     0.001469   0.001399  4.121e+06   2.06e+05       4378  2.049e+05  2.089e+05
   1.4%      0.0    0.1%  | | | | |_GRHydro_SqrtSpatialDeterminant             0.001585   0.001589  4.441e+06   2.22e+05       8325  2.189e+05  2.256e+05
   4.2%      0.0    2.8%  | | | | |_Reconstruct                                0.005068   0.004816  1.417e+07  2.362e+05  1.712e+05  2.173e+05   3.76e+05
   5.6%      0.0    1.0%  | | | | |_Riemann                                    0.006621   0.006277   1.85e+07  3.083e+05  6.281e+04  2.993e+05  3.532e+05
   4.0%      0.0    0.0%  | | | | |_UpdateCalcul                               0.004626   0.004387  1.294e+07  2.157e+05  7.854e+04  2.098e+05  2.765e+05
   2.0%      0.0          | | | | |_untimed
  13.3%      0.0          | | | |_untimed
   5.7%      0.0          | | |_untimed
   2.7%      0.0    0.9%  | |_CCTK_PRESTEP                                     0.003156   0.002845  8.813e+06  8.813e+05   2.02e+05  8.417e+05  1.065e+06
   2.4%      0.0    0.8%  | | |_CallFunction                                   0.002863   0.002584  8.008e+06  1.144e+05  6.431e+05  4.029e+04  3.159e+05
   1.0%      0.0    1.1%  | | | |_thorns                                       0.001227   0.001103  3.418e+06  4.883e+04  6.263e+05  1.005e+04  2.526e+05
   1.4%      0.0          | | | |_untimed
   3.4%      0.0    0.5%  | |_Poison                                           0.003911   0.003525  1.092e+07  1.092e+06  6.555e+04  1.066e+06  1.138e+06
---------------------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------------
Time      Time   Imblnc   Timer                                               gettimeof  getrusage      cycle  cycle[avg  cycle[sdv  cycle[min  cycle[max
percent   secs   percent                                                           secs       secs       secs       secs       secs       secs       secs
---------------------------------------------------------------------------------------------------------------------------------------------------------
 100.0%      0.2    0.0%  meta mode                                              0.2163     0.1871  6.043e+08  1.007e+08  3.594e+08       8912  3.633e+08
  69.9%      0.2    0.1%  |_meta mode                                            0.1512     0.1311  4.223e+08  7.038e+07  3.252e+08       8754  3.633e+08
  62.8%      0.1    2.2%  | |_global mode                                        0.1389     0.1218   3.88e+08  5.174e+06  7.454e+07  5.784e+04  3.165e+07
  55.9%      0.1    0.3%  | | |_level(0)                                         0.1212     0.1113  3.385e+08  1.209e+06  7.605e+07       5232   2.85e+07
   4.1%      0.0    0.4%  | | | |_enter_local_mode                             0.008895     0.0082  2.505e+07  2.257e+04  1.971e+05       2720  7.803e+04
   1.8%      0.0    1.2%  | | | |_leave_local_mode                              0.00401   0.003713  1.143e+07  1.028e+04  7.459e+04       2728  4.655e+04
  48.1%      0.1          | | | |_untimed
   6.4%      0.0          | | |_untimed
   6.2%      0.0          | |_untimed
  30.1%      0.1          | untimed
---------------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Nov 24 17:42:55 UTC 2022
+ echo Done.
Done.
  Elapsed time: 1.1 s
