/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
pkrvmpptgkbjq6m
+ date
Sat Jul 26 12:10:09 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1753531809
+ CACTUS_STARTTIME=1753531809
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.18.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.18.0
Compile date:      Jul 26 2025 (12:02:20)
Run date:          Jul 26 2025 (12:10:09+0000)
Run host:          pkrvmpptgkbjq6m (pid=131398)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.10.0, API version 0x20800
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: pkrvmpptgkbjq6m
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16379472KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=b0ce2727-04a4-5240-83f9-a2a30ab7025f, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/hosted-compute-agent.service, OSName=Linux, OSRelease=6.11.0-1018-azure, OSVersion="#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025", HostName=pkrvmpptgkbjq6m, Architecture=x86_64, hwlocVersion=2.10.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16379472KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00125921 sec
      iterations=10000000... time=0.0124795 sec
      iterations=100000000... time=0.124261 sec
      iterations=900000000... time=1.11948 sec
      iterations=900000000... time=0.840315 sec
      result: 6.44777 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00198754 sec
      iterations=10000000... time=0.0198298 sec
      iterations=100000000... time=0.198198 sec
      iterations=600000000... time=1.18946 sec
      result: 16.1417 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00157706 sec
      iterations=10000000... time=0.0155332 sec
      iterations=100000000... time=0.155307 sec
      iterations=700000000... time=1.08785 sec
      result: 10.2955 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000125834 sec
      iterations=10000... time=0.00124473 sec
      iterations=100000... time=0.0124367 sec
      iterations=1000000... time=0.124324 sec
      iterations=9000000... time=1.11832 sec
      result: 1.24258 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000524233 sec
      iterations=10000... time=0.00488796 sec
      iterations=100000... time=0.0494316 sec
      iterations=1000000... time=0.482485 sec
      iterations=2000000... time=0.966331 sec
      iterations=4000000... time=1.92984 sec
      result: 4.82459 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.01e-07 sec
      iterations=10... time=5.65e-06 sec
      iterations=100... time=3.8943e-05 sec
      iterations=1000... time=0.000313623 sec
      iterations=10000... time=0.00260206 sec
      iterations=100000... time=0.0245122 sec
      iterations=1000000... time=0.245062 sec
      iterations=4000000... time=0.979824 sec
      iterations=8000000... time=1.95918 sec
      result: 100.352 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=8.987e-06 sec
      iterations=10... time=6.6133e-05 sec
      iterations=100... time=0.000507523 sec
      iterations=1000... time=0.00511406 sec
      iterations=10000... time=0.0509108 sec
      iterations=100000... time=0.507914 sec
      iterations=200000... time=1.01799 sec
      result: 77.2531 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.306e-06 sec
      iterations=10000... time=3.3402e-05 sec
      iterations=100000... time=0.000254052 sec
      iterations=1000000... time=0.00250239 sec
      iterations=10000000... time=0.0248921 sec
      iterations=100000000... time=0.24859 sec
      iterations=400000000... time=0.994515 sec
      iterations=800000000... time=1.98939 sec
      result: 0.310842 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.1572e-05 sec
      iterations=10000... time=9.9064e-05 sec
      iterations=100000... time=0.00107097 sec
      iterations=1000000... time=0.010959 sec
      iterations=10000000... time=0.108824 sec
      iterations=100000000... time=1.10913 sec
      result: 1.38642 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.01e-07 sec
      iterations=10... time=3.537e-06 sec
      iterations=100... time=3.6648e-05 sec
      iterations=1000... time=0.000284989 sec
      iterations=10000... time=0.00279048 sec
      iterations=100000... time=0.0278963 sec
      iterations=1000000... time=0.28169 sec
      iterations=4000000... time=1.11403 sec
      result: 88.242 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=1.036e-05 sec
      iterations=10... time=7.0321e-05 sec
      iterations=100... time=0.000547516 sec
      iterations=1000... time=0.00481081 sec
      iterations=10000... time=0.0467015 sec
      iterations=100000... time=0.467482 sec
      iterations=200000... time=0.935509 sec
      iterations=400000... time=1.86989 sec
      result: 84.1153 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.4134e-05 sec
      iterations=10... time=0.000333339 sec
      iterations=100... time=0.00311196 sec
      iterations=1000... time=0.0298387 sec
      iterations=10000... time=0.305118 sec
      iterations=40000... time=1.22465 sec
      result: 0.0564407 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000175556 sec
      iterations=10... time=0.001673 sec
      iterations=100... time=0.0157959 sec
      iterations=1000... time=0.155641 sec
      iterations=7000... time=1.08126 sec
      result: 0.157892 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00388897 sec
      iterations=10... time=0.03983 sec
      iterations=100... time=0.396878 sec
      iterations=300... time=1.19902 sec
      result: 0.390544 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00124873 sec
      iterations=10000000... time=0.0124596 sec
      iterations=100000000... time=0.124462 sec
      iterations=900000000... time=1.12142 sec
      iterations=900000000... time=0.841218 sec
      result: 6.42401 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00198396 sec
      iterations=10000000... time=0.019826 sec
      iterations=100000000... time=0.198244 sec
      iterations=600000000... time=1.18951 sec
      result: 16.1411 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00156838 sec
      iterations=10000000... time=0.0155379 sec
      iterations=100000000... time=0.155498 sec
      iterations=700000000... time=1.08858 sec
      result: 10.2886 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124406 sec
      iterations=10000... time=0.00125149 sec
      iterations=100000... time=0.0124403 sec
      iterations=1000000... time=0.124304 sec
      iterations=9000000... time=1.11864 sec
      result: 1.24294 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000389803 sec
      iterations=10000... time=0.00378512 sec
      iterations=100000... time=0.0373851 sec
      iterations=1000000... time=0.37307 sec
      iterations=3000000... time=1.11686 sec
      result: 3.72286 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=5.16e-07 sec
      iterations=10... time=3.596e-06 sec
      iterations=100... time=3.96535e-05 sec
      iterations=1000... time=0.000327012 sec
      iterations=10000... time=0.00265785 sec
      iterations=100000... time=0.0245156 sec
      iterations=1000000... time=0.245179 sec
      iterations=4000000... time=0.981694 sec
      iterations=8000000... time=1.96023 sec
      result: 100.298 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=8.4605e-06 sec
      iterations=10... time=5.2342e-05 sec
      iterations=100... time=0.000496417 sec
      iterations=1000... time=0.00486488 sec
      iterations=10000... time=0.0486492 sec
      iterations=100000... time=0.485244 sec
      iterations=200000... time=0.959975 sec
      iterations=400000... time=1.92074 sec
      result: 81.8883 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.006e-06 sec
      iterations=10000... time=2.8433e-05 sec
      iterations=100000... time=0.0002583 sec
      iterations=1000000... time=0.0024976 sec
      iterations=10000000... time=0.0248796 sec
      iterations=100000000... time=0.248841 sec
      iterations=400000000... time=0.99655 sec
      iterations=800000000... time=1.98986 sec
      result: 0.310916 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.48175e-05 sec
      iterations=10000... time=0.000101544 sec
      iterations=100000... time=0.000966153 sec
      iterations=1000000... time=0.00966663 sec
      iterations=10000000... time=0.0971224 sec
      iterations=100000000... time=0.973463 sec
      iterations=200000000... time=1.94798 sec
      result: 1.21749 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.31e-07 sec
      iterations=10... time=3.5815e-06 sec
      iterations=100... time=5.1861e-05 sec
      iterations=1000... time=0.000306664 sec
      iterations=10000... time=0.00278078 sec
      iterations=100000... time=0.0270079 sec
      iterations=1000000... time=0.271668 sec
      iterations=4000000... time=1.08277 sec
      result: 90.7894 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=9.0765e-06 sec
      iterations=10... time=6.46495e-05 sec
      iterations=100... time=0.000587826 sec
      iterations=1000... time=0.00455408 sec
      iterations=10000... time=0.045283 sec
      iterations=100000... time=0.452334 sec
      iterations=200000... time=0.900936 sec
      iterations=400000... time=1.80226 sec
      result: 87.2715 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=5.8555e-06 sec
      iterations=10... time=8.2899e-05 sec
      iterations=100... time=0.000816065 sec
      iterations=1000... time=0.00855002 sec
      iterations=10000... time=0.0838065 sec
      iterations=100000... time=0.835866 sec
      iterations=200000... time=1.69625 sec
      result: 0.203744 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=4.25635e-05 sec
      iterations=10... time=0.000424723 sec
      iterations=100... time=0.00406239 sec
      iterations=1000... time=0.0426234 sec
      iterations=10000... time=0.413394 sec
      iterations=30000... time=1.22353 sec
      result: 0.598 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000953335 sec
      iterations=10... time=0.0111429 sec
      iterations=100... time=0.109438 sec
      iterations=1000... time=1.11135 sec
      result: 1.40451 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):  10
INFO (PUGH):  1
INFO (PUGH): 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Sat Jul 26 12:11:14 UTC 2025
+ echo Done.
Done.
  Elapsed time: 65.6 s
