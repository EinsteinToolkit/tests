/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az75-892
+ date
Fri Sep 24 22:49:52 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1632523792
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Sep 24 2021 (22:41:52)
Run date:          Sep 24 2021 (22:49:53+0000)
Run host:          fv-az75-892.ozjq2hgvjyiebjvorarhoiqszb.bx.internal.cloudapp.net (pid=100665)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az75-892
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120796KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=db08571e-4857-1344-8a9b-981b0777cfe0, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1041-azure, OSVersion="#44~20.04.1-Ubuntu SMP Fri Aug 20 20:41:09 UTC 2021", HostName=fv-az75-892, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120796KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=85, CPUModel="Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz", CPUStepping=4)
    L3Cache L#0: (P#-1, size=36608KB, linesize=64, ways=11, Inclusive=0)
      L2Cache L#0: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 16 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 37486592 linesize 64 associativity 11 stride 3407872, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00167875 sec
      iterations=10000000... time=0.0162208 sec
      iterations=100000000... time=0.164267 sec
      iterations=700000000... time=1.14073 sec
      iterations=700000000... time=1.13759 sec
      result: 445.398 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00357189 sec
      iterations=10000000... time=0.0357076 sec
      iterations=100000000... time=0.362964 sec
      iterations=300000000... time=1.10211 sec
      result: 8.71057 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00244026 sec
      iterations=10000000... time=0.0243005 sec
      iterations=100000000... time=0.2436 sec
      iterations=500000000... time=1.23477 sec
      result: 6.47895 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000161604 sec
      iterations=10000... time=0.00160724 sec
      iterations=100000... time=0.0162753 sec
      iterations=1000000... time=0.170217 sec
      iterations=6000000... time=0.984256 sec
      iterations=12000000... time=1.97604 sec
      result: 1.6467 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000617416 sec
      iterations=10000... time=0.00747829 sec
      iterations=100000... time=0.0683682 sec
      iterations=1000000... time=0.680276 sec
      iterations=2000000... time=1.3322 sec
      result: 6.66098 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.9e-06 sec
      iterations=100... time=3.7001e-05 sec
      iterations=1000... time=0.00036771 sec
      iterations=10000... time=0.0039145 sec
      iterations=100000... time=0.0371449 sec
      iterations=1000000... time=0.372286 sec
      iterations=3000000... time=1.12066 sec
      result: 65.7897 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=2.3301e-05 sec
      iterations=10... time=0.000188505 sec
      iterations=100... time=0.00212795 sec
      iterations=1000... time=0.0211663 sec
      iterations=10000... time=0.192816 sec
      iterations=60000... time=1.14812 sec
      result: 41.0983 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.6e-06 sec
      iterations=10000... time=3.2901e-05 sec
      iterations=100000... time=0.000321308 sec
      iterations=1000000... time=0.00313418 sec
      iterations=10000000... time=0.0325356 sec
      iterations=100000000... time=0.321741 sec
      iterations=300000000... time=0.993189 sec
      iterations=600000000... time=1.96997 sec
      result: 0.41041 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=3.5601e-05 sec
      iterations=10000... time=0.000162304 sec
      iterations=100000... time=0.00172564 sec
      iterations=1000000... time=0.01703 sec
      iterations=10000000... time=0.170851 sec
      iterations=60000000... time=1.0402 sec
      result: 2.16709 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=4e-07 sec
      iterations=10... time=2e-06 sec
      iterations=100... time=1.82e-05 sec
      iterations=1000... time=0.000180504 sec
      iterations=10000... time=0.00185335 sec
      iterations=100000... time=0.017688 sec
      iterations=1000000... time=0.181545 sec
      iterations=6000000... time=1.09923 sec
      result: 134.144 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.4401e-05 sec
      iterations=10... time=0.000341409 sec
      iterations=100... time=0.00341149 sec
      iterations=1000... time=0.034171 sec
      iterations=10000... time=0.319667 sec
      iterations=30000... time=0.981206 sec
      iterations=60000... time=1.86122 sec
      result: 25.3521 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=3.1401e-05 sec
      iterations=10... time=0.00040511 sec
      iterations=100... time=0.00235416 sec
      iterations=1000... time=0.0239751 sec
      iterations=10000... time=0.255863 sec
      iterations=40000... time=0.963915 sec
      iterations=80000... time=1.97888 sec
      result: 0.0698576 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000297008 sec
      iterations=10... time=0.00205765 sec
      iterations=100... time=0.0199307 sec
      iterations=1000... time=0.205107 sec
      iterations=5000... time=1.01274 sec
      result: 0.250078 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00567294 sec
      iterations=10... time=0.0571961 sec
      iterations=100... time=0.540445 sec
      iterations=200... time=1.09488 sec
      result: 0.323608 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00165414 sec
      iterations=10000000... time=0.0192621 sec
      iterations=100000000... time=0.165104 sec
      iterations=700000000... time=1.17564 sec
      iterations=700000000... time=1.18842 sec
      result: -109.583 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00369744 sec
      iterations=10000000... time=0.0385508 sec
      iterations=100000000... time=0.365402 sec
      iterations=300000000... time=1.10722 sec
      result: 8.67038 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00271642 sec
      iterations=10000000... time=0.0246286 sec
      iterations=100000000... time=0.247501 sec
      iterations=400000000... time=1.01025 sec
      result: 6.33509 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000161354 sec
      iterations=10000... time=0.00160554 sec
      iterations=100000... time=0.0165215 sec
      iterations=1000000... time=0.170762 sec
      iterations=6000000... time=1.03497 sec
      result: 1.72496 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000672118 sec
      iterations=10000... time=0.00745979 sec
      iterations=100000... time=0.0723443 sec
      iterations=1000000... time=0.706027 sec
      iterations=2000000... time=1.35594 sec
      result: 6.77972 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7.5e-07 sec
      iterations=10... time=4.25e-06 sec
      iterations=100... time=4.0401e-05 sec
      iterations=1000... time=0.00040456 sec
      iterations=10000... time=0.00409551 sec
      iterations=100000... time=0.038017 sec
      iterations=1000000... time=0.386131 sec
      iterations=3000000... time=1.14619 sec
      result: 64.3243 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=2.36e-05 sec
      iterations=10... time=0.000188055 sec
      iterations=100... time=0.0018931 sec
      iterations=1000... time=0.0197572 sec
      iterations=10000... time=0.196987 sec
      iterations=60000... time=1.16613 sec
      result: 40.4635 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=4.5e-06 sec
      iterations=10000... time=3.8551e-05 sec
      iterations=100000... time=0.000386309 sec
      iterations=1000000... time=0.00391605 sec
      iterations=10000000... time=0.0334105 sec
      iterations=100000000... time=0.33345 sec
      iterations=300000000... time=1.00487 sec
      result: 0.418696 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=5.0401e-05 sec
      iterations=10000... time=0.000176654 sec
      iterations=100000... time=0.0018822 sec
      iterations=1000000... time=0.0169057 sec
      iterations=10000000... time=0.187368 sec
      iterations=60000000... time=1.0496 sec
      result: 2.18666 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=5.5e-07 sec
      iterations=10... time=2.3e-06 sec
      iterations=100... time=1.87e-05 sec
      iterations=1000... time=0.000183004 sec
      iterations=10000... time=0.0018904 sec
      iterations=100000... time=0.0186325 sec
      iterations=1000000... time=0.187849 sec
      iterations=6000000... time=1.15249 sec
      result: 127.945 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=3.9501e-05 sec
      iterations=10... time=0.00038341 sec
      iterations=100... time=0.0038116 sec
      iterations=1000... time=0.0328261 sec
      iterations=10000... time=0.287974 sec
      iterations=40000... time=1.132 sec
      result: 27.7892 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=3.1e-06 sec
      iterations=10... time=3.0101e-05 sec
      iterations=100... time=0.000297358 sec
      iterations=1000... time=0.00333969 sec
      iterations=10000... time=0.0359254 sec
      iterations=100000... time=0.333438 sec
      iterations=300000... time=0.972615 sec
      iterations=600000... time=1.98986 sec
      result: 0.219814 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*29^3 grid points, 2*390224 bytes):
      iterations=1... time=3.20005e-05 sec
      iterations=10... time=0.000305508 sec
      iterations=100... time=0.00315753 sec
      iterations=1000... time=0.0331139 sec
      iterations=10000... time=0.325522 sec
      iterations=30000... time=0.977624 sec
      iterations=60000... time=1.9532 sec
      result: 0.749202 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00124193 sec
      iterations=10... time=0.0127102 sec
      iterations=100... time=0.136789 sec
      iterations=800... time=1.0498 sec
      result: 1.35002 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri Sep 24 22:50:55 UTC 2021
+ echo Done.
Done.
  Elapsed time: 62.7 s
