/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az91-338
+ date
Mon Sep 20 21:33:59 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1632173639
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Sep 20 2021 (21:06:54)
Run date:          Sep 20 2021 (21:33:59+0000)
Run host:          fv-az91-338.1u4dveb1r3ruphbftqvtwhitpc.gx.internal.cloudapp.net (pid=112051)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az91-338
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120800KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=3bd4bb12-04b2-ce40-a34a-fc35e4c81ae3, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1041-azure, OSVersion="#44~20.04.1-Ubuntu SMP Fri Aug 20 20:41:09 UTC 2021", HostName=fv-az91-338, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120800KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00260282 sec
      iterations=10000000... time=0.0239945 sec
      iterations=100000000... time=0.254175 sec
      iterations=400000000... time=1.11311 sec
      iterations=400000000... time=0.798752 sec
      result: 2.54489 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00255453 sec
      iterations=10000000... time=0.0274108 sec
      iterations=100000000... time=0.285115 sec
      iterations=400000000... time=1.09474 sec
      result: 11.6923 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00167045 sec
      iterations=10000000... time=0.0168582 sec
      iterations=100000000... time=0.167937 sec
      iterations=700000000... time=1.2929 sec
      result: 8.66267 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.00011251 sec
      iterations=10000... time=0.00131022 sec
      iterations=100000... time=0.0123893 sec
      iterations=1000000... time=0.141238 sec
      iterations=8000000... time=1.03724 sec
      result: 1.29655 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000486644 sec
      iterations=10000... time=0.00547209 sec
      iterations=100000... time=0.0472236 sec
      iterations=1000000... time=0.477523 sec
      iterations=2000000... time=0.986495 sec
      iterations=4000000... time=1.90123 sec
      result: 4.75307 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=8e-07 sec
      iterations=10... time=2.8e-06 sec
      iterations=100... time=2.3301e-05 sec
      iterations=1000... time=0.00022821 sec
      iterations=10000... time=0.00233829 sec
      iterations=100000... time=0.0275839 sec
      iterations=1000000... time=0.264196 sec
      iterations=4000000... time=1.10294 sec
      result: 89.1292 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=7.1e-06 sec
      iterations=10... time=3.8902e-05 sec
      iterations=100... time=0.000427717 sec
      iterations=1000... time=0.00365015 sec
      iterations=10000... time=0.0435921 sec
      iterations=100000... time=0.591638 sec
      iterations=200000... time=1.02492 sec
      result: 38.3654 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=4.4e-06 sec
      iterations=10000... time=4.8002e-05 sec
      iterations=100000... time=0.000395517 sec
      iterations=1000000... time=0.0023947 sec
      iterations=10000000... time=0.0411752 sec
      iterations=100000000... time=0.357423 sec
      iterations=300000000... time=1.12231 sec
      result: 0.467629 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=1.73e-05 sec
      iterations=10000... time=0.000148706 sec
      iterations=100000... time=0.00144286 sec
      iterations=1000000... time=0.0157209 sec
      iterations=10000000... time=0.18326 sec
      iterations=60000000... time=1.25064 sec
      result: 2.6055 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=9e-07 sec
      iterations=10... time=3.8e-06 sec
      iterations=100... time=3.2101e-05 sec
      iterations=1000... time=0.000280811 sec
      iterations=10000... time=0.00228089 sec
      iterations=100000... time=0.0444495 sec
      iterations=1000000... time=0.333532 sec
      iterations=3000000... time=1.05393 sec
      result: 69.9552 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=7.8e-06 sec
      iterations=10... time=7.6901e-05 sec
      iterations=100... time=0.000776207 sec
      iterations=1000... time=0.00827667 sec
      iterations=10000... time=0.0808342 sec
      iterations=100000... time=1.05651 sec
      result: 18.6092 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.5e-05 sec
      iterations=10... time=0.000212802 sec
      iterations=100... time=0.00219762 sec
      iterations=1000... time=0.0207365 sec
      iterations=10000... time=0.278924 sec
      iterations=40000... time=1.09417 sec
      result: 0.0631712 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=2.47e-05 sec
      iterations=10... time=0.000716606 sec
      iterations=100... time=0.00771416 sec
      iterations=1000... time=0.073643 sec
      iterations=10000... time=1.02733 sec
      result: 0.118433 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.0123461 sec
      iterations=10... time=0.0975777 sec
      iterations=100... time=0.748089 sec
      iterations=200... time=1.48777 sec
      result: 0.330746 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00266732 sec
      iterations=10000000... time=0.0385032 sec
      iterations=100000000... time=0.352572 sec
      iterations=300000000... time=1.04582 sec
      iterations=300000000... time=0.799114 sec
      result: 2.43207 GHz
    CPU floating point performance:
      iterations=1000000... time=0.002875 sec
      iterations=10000000... time=0.0388576 sec
      iterations=100000000... time=0.363433 sec
      iterations=300000000... time=1.09122 sec
      result: 8.7975 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00225235 sec
      iterations=10000000... time=0.0255272 sec
      iterations=100000000... time=0.240259 sec
      iterations=500000000... time=1.15133 sec
      result: 6.94851 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.00014675 sec
      iterations=10000... time=0.00130065 sec
      iterations=100000... time=0.0183138 sec
      iterations=1000000... time=0.181224 sec
      iterations=6000000... time=0.995601 sec
      iterations=12000000... time=2.05518 sec
      result: 1.71265 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000420107 sec
      iterations=10000... time=0.00404985 sec
      iterations=100000... time=0.0581912 sec
      iterations=1000000... time=0.536279 sec
      iterations=2000000... time=1.10147 sec
      result: 5.50737 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=5.5e-07 sec
      iterations=10... time=2.7005e-06 sec
      iterations=100... time=2.2703e-05 sec
      iterations=1000... time=0.00022303 sec
      iterations=10000... time=0.00230437 sec
      iterations=100000... time=0.035978 sec
      iterations=1000000... time=0.350046 sec
      iterations=3000000... time=1.0361 sec
      result: 71.1591 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=6.0505e-06 sec
      iterations=10... time=4.03055e-05 sec
      iterations=100... time=0.000395955 sec
      iterations=1000... time=0.00359859 sec
      iterations=10000... time=0.0569456 sec
      iterations=100000... time=0.54036 sec
      iterations=200000... time=1.12668 sec
      result: 34.9006 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.3e-06 sec
      iterations=10000... time=2.3003e-05 sec
      iterations=100000... time=0.00022328 sec
      iterations=1000000... time=0.0022282 sec
      iterations=10000000... time=0.0407964 sec
      iterations=100000000... time=0.330823 sec
      iterations=300000000... time=0.994696 sec
      iterations=600000000... time=1.99596 sec
      result: 0.415824 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=1.7351e-05 sec
      iterations=10000... time=0.00023297 sec
      iterations=100000... time=0.00172215 sec
      iterations=1000000... time=0.0245082 sec
      iterations=10000000... time=0.207197 sec
      iterations=50000000... time=1.08234 sec
      result: 2.70586 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8e-07 sec
      iterations=10... time=2.95e-06 sec
      iterations=100... time=2.3752e-05 sec
      iterations=1000... time=0.00023187 sec
      iterations=10000... time=0.0023227 sec
      iterations=100000... time=0.0369077 sec
      iterations=1000000... time=0.34304 sec
      iterations=3000000... time=1.0629 sec
      result: 69.3646 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=8.401e-06 sec
      iterations=10... time=9.9659e-05 sec
      iterations=100... time=0.000994885 sec
      iterations=1000... time=0.0125723 sec
      iterations=10000... time=0.116248 sec
      iterations=90000... time=1.0544 sec
      result: 16.7817 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=8.151e-06 sec
      iterations=10... time=7.7507e-05 sec
      iterations=100... time=0.000999586 sec
      iterations=1000... time=0.00906768 sec
      iterations=10000... time=0.0969866 sec
      iterations=100000... time=0.939418 sec
      iterations=200000... time=1.53247 sec
      result: 0.0951405 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=4.2854e-05 sec
      iterations=10... time=0.000456089 sec
      iterations=100... time=0.00422196 sec
      iterations=1000... time=0.0452816 sec
      iterations=10000... time=0.450496 sec
      iterations=20000... time=0.904861 sec
      iterations=40000... time=1.79166 sec
      result: 0.130203 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 1200 nsec
    MPI bandwidth: 6.14497 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Mon Sep 20 21:34:50 UTC 2021
+ echo Done.
Done.
  Elapsed time: 51.7 s
