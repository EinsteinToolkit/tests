/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az260-710
+ date
Thu Mar 16 20:25:25 UTC 2023
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1678998325
+ CACTUS_STARTTIME=1678998325
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.13.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.13.0
Compile date:      Mar 16 2023 (20:17:06)
Run date:          Mar 16 2023 (20:25:26+0000)
Run host:          fv-az260-710.44fmlilepbzu5fnkfno1iqmhhf.dx.internal.cloudapp.net (pid=104037)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az260-710
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7110652KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=628a924e-fe71-6a45-a8d6-ec645c4758c8, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.15.0-1034-azure, OSVersion="#41~20.04.1-Ubuntu SMP Sat Feb 11 17:02:42 UTC 2023", HostName=fv-az260-710, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7110652KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00320633 sec
      iterations=10000000... time=0.0352261 sec
      iterations=100000000... time=0.31602 sec
      iterations=300000000... time=0.984082 sec
      iterations=600000000... time=2.032 sec
      iterations=600000000... time=1.49505 sec
      result: 2.23483 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00339233 sec
      iterations=10000000... time=0.0336648 sec
      iterations=100000000... time=0.336623 sec
      iterations=300000000... time=1.004 sec
      result: 9.56173 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00215242 sec
      iterations=10000000... time=0.0213475 sec
      iterations=100000000... time=0.214041 sec
      iterations=500000000... time=1.05735 sec
      result: 7.56607 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000158702 sec
      iterations=10000... time=0.00182031 sec
      iterations=100000... time=0.0150564 sec
      iterations=1000000... time=0.156168 sec
      iterations=7000000... time=1.11012 sec
      result: 1.58589 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000600305 sec
      iterations=10000... time=0.00567284 sec
      iterations=100000... time=0.0580774 sec
      iterations=1000000... time=0.555092 sec
      iterations=2000000... time=1.11904 sec
      result: 5.59521 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=3.2e-06 sec
      iterations=100... time=8.07e-05 sec
      iterations=1000... time=0.000295103 sec
      iterations=10000... time=0.00307492 sec
      iterations=100000... time=0.0291772 sec
      iterations=1000000... time=0.322143 sec
      iterations=3000000... time=0.946171 sec
      iterations=6000000... time=1.87148 sec
      result: 78.7912 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=6.1e-06 sec
      iterations=10... time=6.4101e-05 sec
      iterations=100... time=0.000650405 sec
      iterations=1000... time=0.00542404 sec
      iterations=10000... time=0.0537745 sec
      iterations=100000... time=0.566925 sec
      iterations=200000... time=1.11263 sec
      result: 35.341 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.701e-06 sec
      iterations=10000... time=2.76e-05 sec
      iterations=100000... time=0.000267802 sec
      iterations=1000000... time=0.00292042 sec
      iterations=10000000... time=0.0315842 sec
      iterations=100000000... time=0.305181 sec
      iterations=400000000... time=1.26221 sec
      result: 0.39444 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.2101e-05 sec
      iterations=10000... time=0.000193901 sec
      iterations=100000... time=0.00212162 sec
      iterations=1000000... time=0.0175997 sec
      iterations=10000000... time=0.18377 sec
      iterations=60000000... time=1.16908 sec
      result: 2.43558 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=3.6e-06 sec
      iterations=100... time=3.21e-05 sec
      iterations=1000... time=0.000316403 sec
      iterations=10000... time=0.00320462 sec
      iterations=100000... time=0.0329571 sec
      iterations=1000000... time=0.304302 sec
      iterations=4000000... time=1.2625 sec
      result: 77.8647 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=2.62e-05 sec
      iterations=10... time=8.9001e-05 sec
      iterations=100... time=0.00119811 sec
      iterations=1000... time=0.00947967 sec
      iterations=10000... time=0.0892235 sec
      iterations=100000... time=0.942286 sec
      iterations=200000... time=1.86121 sec
      result: 21.1269 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.65e-05 sec
      iterations=10... time=0.000236702 sec
      iterations=100... time=0.00236272 sec
      iterations=1000... time=0.025671 sec
      iterations=10000... time=0.245656 sec
      iterations=40000... time=0.971888 sec
      iterations=80000... time=1.95953 sec
      result: 0.0705476 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=2.65e-05 sec
      iterations=10... time=0.000896707 sec
      iterations=100... time=0.00894837 sec
      iterations=1000... time=0.0885748 sec
      iterations=10000... time=0.885032 sec
      iterations=20000... time=1.75764 sec
      result: 0.138447 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00613155 sec
      iterations=10... time=0.0678274 sec
      iterations=100... time=0.654709 sec
      iterations=200... time=1.26486 sec
      result: 0.389034 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00316233 sec
      iterations=10000000... time=0.0325041 sec
      iterations=100000000... time=0.339201 sec
      iterations=300000000... time=0.931469 sec
      iterations=600000000... time=1.89731 sec
      iterations=600000000... time=1.42888 sec
      result: 2.56178 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00336398 sec
      iterations=10000000... time=0.0332312 sec
      iterations=100000000... time=0.335248 sec
      iterations=300000000... time=1.01749 sec
      result: 9.43502 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00226097 sec
      iterations=10000000... time=0.0219536 sec
      iterations=100000000... time=0.213047 sec
      iterations=500000000... time=1.08045 sec
      result: 7.40429 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000154651 sec
      iterations=10000... time=0.00153906 sec
      iterations=100000... time=0.0160479 sec
      iterations=1000000... time=0.158998 sec
      iterations=7000000... time=1.07765 sec
      result: 1.53951 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000569955 sec
      iterations=10000... time=0.0060564 sec
      iterations=100000... time=0.0593178 sec
      iterations=1000000... time=0.581804 sec
      iterations=2000000... time=1.18522 sec
      result: 5.92611 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=6.5e-07 sec
      iterations=10... time=3.2e-06 sec
      iterations=100... time=2.965e-05 sec
      iterations=1000... time=0.000294703 sec
      iterations=10000... time=0.00411063 sec
      iterations=100000... time=0.0336903 sec
      iterations=1000000... time=0.321814 sec
      iterations=3000000... time=0.893705 sec
      iterations=6000000... time=1.88954 sec
      result: 78.0382 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=7e-06 sec
      iterations=10... time=5.5851e-05 sec
      iterations=100... time=0.000556004 sec
      iterations=1000... time=0.00579725 sec
      iterations=10000... time=0.0573128 sec
      iterations=100000... time=0.605601 sec
      iterations=200000... time=1.1708 sec
      result: 33.5852 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.9e-06 sec
      iterations=10000... time=3.14e-05 sec
      iterations=100000... time=0.000308803 sec
      iterations=1000000... time=0.00330633 sec
      iterations=10000000... time=0.0322042 sec
      iterations=100000000... time=0.316404 sec
      iterations=300000000... time=0.959449 sec
      iterations=600000000... time=1.93232 sec
      result: 0.402566 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.4951e-05 sec
      iterations=10000... time=0.000225351 sec
      iterations=100000... time=0.00237572 sec
      iterations=1000000... time=0.0230574 sec
      iterations=10000000... time=0.236646 sec
      iterations=50000000... time=1.16933 sec
      result: 2.92334 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=6.5e-07 sec
      iterations=10... time=3.4e-06 sec
      iterations=100... time=3.11e-05 sec
      iterations=1000... time=0.000308803 sec
      iterations=10000... time=0.00320513 sec
      iterations=100000... time=0.0317102 sec
      iterations=1000000... time=0.3345 sec
      iterations=3000000... time=1.01342 sec
      result: 72.7519 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=9.2e-06 sec
      iterations=10... time=9.03e-05 sec
      iterations=100... time=0.000904958 sec
      iterations=1000... time=0.00926394 sec
      iterations=10000... time=0.0927987 sec
      iterations=100000... time=0.96296 sec
      iterations=200000... time=1.91188 sec
      result: 20.567 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=2.55e-06 sec
      iterations=10... time=2.535e-05 sec
      iterations=100... time=0.000285053 sec
      iterations=1000... time=0.00291603 sec
      iterations=10000... time=0.0284107 sec
      iterations=100000... time=0.290751 sec
      iterations=400000... time=1.1675 sec
      result: 0.249765 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=1.215e-05 sec
      iterations=10... time=0.000133001 sec
      iterations=100... time=0.00193232 sec
      iterations=1000... time=0.0134709 sec
      iterations=10000... time=0.144959 sec
      iterations=80000... time=1.17256 sec
      result: 0.3979 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00167527 sec
      iterations=10... time=0.0193636 sec
      iterations=100... time=0.208156 sec
      iterations=500... time=1.01656 sec
      result: 1.21015 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Mar 16 20:26:30 UTC 2023
+ echo Done.
Done.
  Elapsed time: 64.9 s
