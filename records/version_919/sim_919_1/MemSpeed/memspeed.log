/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1383-978
+ date
Mon Apr  8 22:54:43 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1712616883
+ CACTUS_STARTTIME=1712616883
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      Apr 08 2024 (22:47:36)
Run date:          Apr 08 2024 (22:54:44+0000)
Run host:          fv-az1383-978.ikz3ofujitfebmhnxoyjuylfjd.ex.internal.cloudapp.net (pid=130877)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az1383-978
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364600KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=36e10f10-763a-f44d-b756-c91df58d33e8, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1017-azure, OSVersion="#17~22.04.1-Ubuntu SMP Sat Mar  9 04:50:38 UTC 2024", HostName=fv-az1383-978, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364600KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00131232 sec
      iterations=10000000... time=0.012452 sec
      iterations=100000000... time=0.123805 sec
      iterations=900000000... time=1.11376 sec
      iterations=900000000... time=0.836681 sec
      result: 6.4963 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196903 sec
      iterations=10000000... time=0.0197378 sec
      iterations=100000000... time=0.197286 sec
      iterations=600000000... time=1.18388 sec
      result: 16.2178 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00190059 sec
      iterations=10000000... time=0.0185397 sec
      iterations=100000000... time=0.185497 sec
      iterations=600000000... time=1.11469 sec
      result: 8.61229 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000124893 sec
      iterations=10000... time=0.00123733 sec
      iterations=100000... time=0.0123626 sec
      iterations=1000000... time=0.123643 sec
      iterations=9000000... time=1.11265 sec
      result: 1.23628 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000491859 sec
      iterations=10000... time=0.00460515 sec
      iterations=100000... time=0.0461076 sec
      iterations=1000000... time=0.458626 sec
      iterations=2000000... time=0.91799 sec
      iterations=4000000... time=1.83792 sec
      result: 4.59479 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.71e-07 sec
      iterations=10... time=4.028e-06 sec
      iterations=100... time=3.0687e-05 sec
      iterations=1000... time=0.000266108 sec
      iterations=10000... time=0.00248185 sec
      iterations=100000... time=0.0244922 sec
      iterations=1000000... time=0.243737 sec
      iterations=5000000... time=1.22313 sec
      result: 100.463 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=1.0891e-05 sec
      iterations=10... time=6.5282e-05 sec
      iterations=100... time=0.000497509 sec
      iterations=1000... time=0.00500869 sec
      iterations=10000... time=0.0497158 sec
      iterations=100000... time=0.492098 sec
      iterations=200000... time=0.983963 sec
      iterations=400000... time=1.96844 sec
      result: 79.9042 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.146e-06 sec
      iterations=10000... time=3.1609e-05 sec
      iterations=100000... time=0.000252863 sec
      iterations=1000000... time=0.00249206 sec
      iterations=10000000... time=0.0247342 sec
      iterations=100000000... time=0.247501 sec
      iterations=400000000... time=0.993428 sec
      iterations=800000000... time=1.97983 sec
      result: 0.309348 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.1331e-05 sec
      iterations=10000... time=9.5779e-05 sec
      iterations=100000... time=0.000961647 sec
      iterations=1000000... time=0.0093908 sec
      iterations=10000000... time=0.0937112 sec
      iterations=100000000... time=0.941655 sec
      iterations=200000000... time=1.83191 sec
      result: 1.14494 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.3e-07 sec
      iterations=10... time=3.587e-06 sec
      iterations=100... time=3.756e-05 sec
      iterations=1000... time=0.000285093 sec
      iterations=10000... time=0.00277726 sec
      iterations=100000... time=0.0276628 sec
      iterations=1000000... time=0.277066 sec
      iterations=4000000... time=1.1091 sec
      result: 88.6342 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.924e-06 sec
      iterations=10... time=6.894e-05 sec
      iterations=100... time=0.000503311 sec
      iterations=1000... time=0.00451433 sec
      iterations=10000... time=0.0450213 sec
      iterations=100000... time=0.449997 sec
      iterations=200000... time=0.901494 sec
      iterations=400000... time=1.8015 sec
      result: 87.3084 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.5118e-05 sec
      iterations=10... time=0.000327282 sec
      iterations=100... time=0.00319914 sec
      iterations=1000... time=0.0322243 sec
      iterations=10000... time=0.322697 sec
      iterations=30000... time=0.971246 sec
      iterations=60000... time=1.92695 sec
      result: 0.0538052 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000156583 sec
      iterations=10... time=0.00165732 sec
      iterations=100... time=0.0163122 sec
      iterations=1000... time=0.163663 sec
      iterations=7000... time=1.14733 sec
      result: 0.1488 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00398894 sec
      iterations=10... time=0.0398758 sec
      iterations=100... time=0.402184 sec
      iterations=300... time=1.23161 sec
      result: 0.380207 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00131163 sec
      iterations=10000000... time=0.0123951 sec
      iterations=100000000... time=0.123802 sec
      iterations=900000000... time=1.11408 sec
      iterations=900000000... time=0.838271 sec
      result: 6.52618 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196847 sec
      iterations=10000000... time=0.0197264 sec
      iterations=100000000... time=0.197359 sec
      iterations=600000000... time=1.18372 sec
      result: 16.22 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186096 sec
      iterations=10000000... time=0.0185601 sec
      iterations=100000000... time=0.186434 sec
      iterations=600000000... time=1.11463 sec
      result: 8.61271 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124538 sec
      iterations=10000... time=0.00124824 sec
      iterations=100000... time=0.0123673 sec
      iterations=1000000... time=0.1237 sec
      iterations=9000000... time=1.11288 sec
      result: 1.23653 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000443314 sec
      iterations=10000... time=0.00424544 sec
      iterations=100000... time=0.0423602 sec
      iterations=1000000... time=0.425081 sec
      iterations=3000000... time=1.26816 sec
      result: 4.2272 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.305e-07 sec
      iterations=10... time=3.632e-06 sec
      iterations=100... time=3.59975e-05 sec
      iterations=1000... time=0.000326144 sec
      iterations=10000... time=0.0026152 sec
      iterations=100000... time=0.0243584 sec
      iterations=1000000... time=0.243683 sec
      iterations=5000000... time=1.22003 sec
      result: 100.718 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=7.579e-06 sec
      iterations=10... time=5.27185e-05 sec
      iterations=100... time=0.000487035 sec
      iterations=1000... time=0.00480836 sec
      iterations=10000... time=0.0481189 sec
      iterations=100000... time=0.481848 sec
      iterations=200000... time=0.962021 sec
      iterations=400000... time=1.92721 sec
      result: 81.6136 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.1055e-06 sec
      iterations=10000... time=3.1103e-05 sec
      iterations=100000... time=0.000280644 sec
      iterations=1000000... time=0.00256626 sec
      iterations=10000000... time=0.0247512 sec
      iterations=100000000... time=0.247621 sec
      iterations=400000000... time=0.991553 sec
      iterations=800000000... time=1.98183 sec
      result: 0.30966 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.1466e-05 sec
      iterations=10000... time=9.6506e-05 sec
      iterations=100000... time=0.000925415 sec
      iterations=1000000... time=0.00898111 sec
      iterations=10000000... time=0.0899993 sec
      iterations=100000000... time=0.897734 sec
      iterations=200000000... time=1.79273 sec
      result: 1.12046 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.66e-07 sec
      iterations=10... time=3.4715e-06 sec
      iterations=100... time=3.478e-05 sec
      iterations=1000... time=0.000322222 sec
      iterations=10000... time=0.00271786 sec
      iterations=100000... time=0.0269027 sec
      iterations=1000000... time=0.268827 sec
      iterations=4000000... time=1.07832 sec
      result: 91.1642 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.10455e-05 sec
      iterations=10... time=6.5017e-05 sec
      iterations=100... time=0.000608893 sec
      iterations=1000... time=0.00468107 sec
      iterations=10000... time=0.0451396 sec
      iterations=100000... time=0.450919 sec
      iterations=200000... time=0.898799 sec
      iterations=400000... time=1.79729 sec
      result: 87.5131 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=5.876e-06 sec
      iterations=10... time=9.75975e-05 sec
      iterations=100... time=0.000923045 sec
      iterations=1000... time=0.00904058 sec
      iterations=10000... time=0.0911926 sec
      iterations=100000... time=0.912951 sec
      iterations=200000... time=1.82103 sec
      result: 0.189783 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=4.17225e-05 sec
      iterations=10... time=0.000466472 sec
      iterations=100... time=0.00470934 sec
      iterations=1000... time=0.0463039 sec
      iterations=10000... time=0.461767 sec
      iterations=20000... time=0.932332 sec
      iterations=40000... time=1.87898 sec
      result: 0.519198 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000952159 sec
      iterations=10... time=0.0110052 sec
      iterations=100... time=0.112916 sec
      iterations=1000... time=1.14349 sec
      result: 1.36503 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Mon Apr  8 22:55:53 UTC 2024
+ echo Done.
Done.
  Elapsed time: 70.6 s
