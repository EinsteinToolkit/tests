/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az208-150
+ date
Fri Oct  8 00:51:35 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1633654295
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Oct 08 2021 (00:25:33)
Run date:          Oct 08 2021 (00:51:36+0000)
Run host:          fv-az208-150.e0tah0prcmautdldtlfxyeofwf.cx.internal.cloudapp.net (pid=107730)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az208-150
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120800KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=af79876f-a7d5-ef4d-9458-042575d25267, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1042-azure, OSVersion="#45~20.04.1-Ubuntu SMP Wed Sep 15 14:24:15 UTC 2021", HostName=fv-az208-150, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120800KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=85, CPUModel="Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz", CPUStepping=7)
    L3Cache L#0: (P#-1, size=36608KB, linesize=64, ways=11, Inclusive=0)
      L2Cache L#0: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 16 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 37486592 linesize 64 associativity 11 stride 3407872, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00134862 sec
      iterations=10000000... time=0.0134735 sec
      iterations=100000000... time=0.13476 sec
      iterations=800000000... time=1.07725 sec
      iterations=800000000... time=1.07395 sec
      result: 485.52 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00299513 sec
      iterations=10000000... time=0.0299091 sec
      iterations=100000000... time=0.303054 sec
      iterations=400000000... time=1.19764 sec
      result: 10.6877 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00184462 sec
      iterations=10000000... time=0.0183318 sec
      iterations=100000000... time=0.183038 sec
      iterations=600000000... time=1.10842 sec
      result: 8.66098 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000135401 sec
      iterations=10000... time=0.00133742 sec
      iterations=100000... time=0.0134131 sec
      iterations=1000000... time=0.133976 sec
      iterations=8000000... time=1.07992 sec
      result: 1.34989 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000667908 sec
      iterations=10000... time=0.00608547 sec
      iterations=100000... time=0.0598536 sec
      iterations=1000000... time=0.60025 sec
      iterations=2000000... time=1.20213 sec
      result: 6.01066 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=9e-07 sec
      iterations=10... time=3.5e-06 sec
      iterations=100... time=3.1e-05 sec
      iterations=1000... time=0.000305203 sec
      iterations=10000... time=0.00306533 sec
      iterations=100000... time=0.0305496 sec
      iterations=1000000... time=0.305907 sec
      iterations=4000000... time=1.22506 sec
      result: 80.244 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.2801e-05 sec
      iterations=10... time=0.000173602 sec
      iterations=100... time=0.00164142 sec
      iterations=1000... time=0.0164515 sec
      iterations=10000... time=0.163217 sec
      iterations=70000... time=1.14083 sec
      result: 48.2545 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.4e-06 sec
      iterations=10000... time=2.71e-05 sec
      iterations=100000... time=0.000267803 sec
      iterations=1000000... time=0.00267513 sec
      iterations=10000000... time=0.0268053 sec
      iterations=100000000... time=0.268662 sec
      iterations=400000000... time=1.07788 sec
      result: 0.336836 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=3.18e-05 sec
      iterations=10000... time=0.000150301 sec
      iterations=100000... time=0.00143012 sec
      iterations=1000000... time=0.0142541 sec
      iterations=10000000... time=0.141937 sec
      iterations=80000000... time=1.13582 sec
      result: 1.77472 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=2e-06 sec
      iterations=100... time=1.57e-05 sec
      iterations=1000... time=0.000152502 sec
      iterations=10000... time=0.00152052 sec
      iterations=100000... time=0.01524 sec
      iterations=1000000... time=0.152854 sec
      iterations=7000000... time=1.06663 sec
      result: 161.286 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.11e-05 sec
      iterations=10... time=0.000321504 sec
      iterations=100... time=0.00305924 sec
      iterations=1000... time=0.0296722 sec
      iterations=10000... time=0.244335 sec
      iterations=50000... time=0.914651 sec
      iterations=100000... time=2.06327 sec
      result: 38.1158 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.5201e-05 sec
      iterations=10... time=0.000222003 sec
      iterations=100... time=0.00222713 sec
      iterations=1000... time=0.0223414 sec
      iterations=10000... time=0.22417 sec
      iterations=50000... time=1.12086 sec
      result: 0.0770839 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000190803 sec
      iterations=10... time=0.00178612 sec
      iterations=100... time=0.0176394 sec
      iterations=1000... time=0.176959 sec
      iterations=6000... time=1.0632 sec
      result: 0.285852 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00404835 sec
      iterations=10... time=0.0390684 sec
      iterations=100... time=0.398527 sec
      iterations=300... time=1.19346 sec
      result: 0.445318 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00133802 sec
      iterations=10000000... time=0.0133995 sec
      iterations=100000000... time=0.134026 sec
      iterations=800000000... time=1.07433 sec
      iterations=800000000... time=1.07356 sec
      result: 2084.8 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00299658 sec
      iterations=10000000... time=0.0299394 sec
      iterations=100000000... time=0.299005 sec
      iterations=400000000... time=1.19714 sec
      result: 10.6922 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187222 sec
      iterations=10000000... time=0.0183445 sec
      iterations=100000000... time=0.186217 sec
      iterations=600000000... time=1.28035 sec
      result: 7.49797 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000134552 sec
      iterations=10000... time=0.00133852 sec
      iterations=100000... time=0.0194803 sec
      iterations=1000000... time=0.187322 sec
      iterations=6000000... time=1.06575 sec
      result: 1.77626 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000652758 sec
      iterations=10000... time=0.00988081 sec
      iterations=100000... time=0.0738301 sec
      iterations=1000000... time=0.759263 sec
      iterations=2000000... time=1.56976 sec
      result: 7.84878 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8e-07 sec
      iterations=10... time=3.4e-06 sec
      iterations=100... time=3.08e-05 sec
      iterations=1000... time=0.000305204 sec
      iterations=10000... time=0.00306869 sec
      iterations=100000... time=0.046563 sec
      iterations=1000000... time=0.443125 sec
      iterations=2000000... time=0.839329 sec
      iterations=4000000... time=1.61338 sec
      result: 60.9306 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=2.33e-05 sec
      iterations=10... time=0.000167452 sec
      iterations=100... time=0.00162897 sec
      iterations=1000... time=0.0240644 sec
      iterations=10000... time=0.236142 sec
      iterations=50000... time=1.08534 sec
      result: 36.2298 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.25e-06 sec
      iterations=10000... time=2.725e-05 sec
      iterations=100000... time=0.000268204 sec
      iterations=1000000... time=0.00269533 sec
      iterations=10000000... time=0.0362153 sec
      iterations=100000000... time=0.354888 sec
      iterations=300000000... time=1.08714 sec
      result: 0.452973 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=3.5601e-05 sec
      iterations=10000... time=0.000149751 sec
      iterations=100000... time=0.00143897 sec
      iterations=1000000... time=0.0182622 sec
      iterations=10000000... time=0.17859 sec
      iterations=60000000... time=1.13469 sec
      result: 2.36393 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7.5e-07 sec
      iterations=10... time=2.1e-06 sec
      iterations=100... time=1.56e-05 sec
      iterations=1000... time=0.000151252 sec
      iterations=10000... time=0.00158382 sec
      iterations=100000... time=0.0206024 sec
      iterations=1000000... time=0.221289 sec
      iterations=5000000... time=1.00308 sec
      result: 122.502 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=3.9301e-05 sec
      iterations=10... time=0.000308054 sec
      iterations=100... time=0.00304639 sec
      iterations=1000... time=0.0397231 sec
      iterations=10000... time=0.346204 sec
      iterations=30000... time=0.952464 sec
      iterations=60000... time=1.9508 sec
      result: 24.188 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=9.15e-06 sec
      iterations=10... time=0.00409575 sec
      iterations=100... time=0.00086776 sec
      iterations=1000... time=0.0127387 sec
      iterations=10000... time=0.124462 sec
      iterations=90000... time=1.04701 sec
      result: 0.0626644 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*29^3 grid points, 2*390224 bytes):
      iterations=1... time=0.000114851 sec
      iterations=10... time=0.00107171 sec
      iterations=100... time=0.0146132 sec
      iterations=1000... time=0.142107 sec
      iterations=8000... time=1.12151 sec
      result: 0.173973 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 1200 nsec
    MPI bandwidth: 1.6938 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri Oct  8 00:52:23 UTC 2021
+ echo Done.
Done.
  Elapsed time: 47.9 s
