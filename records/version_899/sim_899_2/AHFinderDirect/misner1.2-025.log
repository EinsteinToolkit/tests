/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/AHFinderDirect
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/AHFinderDirect/output-0000-active
+ hostname
fv-az1567-380
+ date
Thu Mar 14 23:22:33 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1710458553
+ CACTUS_STARTTIME=1710458553
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/EinsteinAnalysis/AHFinderDirect/test/misner1.2-025.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      Mar 14 2024 (23:07:39)
Run date:          Mar 14 2024 (23:22:33+0000)
Run host:          fv-az1567-380 (pid=134806)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/AHFinderDirect
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/EinsteinAnalysis/AHFinderDirect/test/misner1.2-025.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->PUGH CoordBase CartGrid3D Boundary SymBase ADMBase CoordGauge StaticConformal SpaceMask IDAnalyticBH IOUtil PUGHSlab IOBasic IOASCII SphericalSurface PUGHInterp PUGHReduce AEILocalInterp AHFinderDirect<---
Thorn AHFinderDirect requests automatic activation of HDF5
Thorn PUGH requests automatic activation of MPI
Thorn PUGH requests automatic activation of Vectors
Thorn HDF5 requests automatic activation of zlib
Thorn MPI requests automatic activation of hwloc
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn AEILocalInterp...Success -> active implementation AEILocalInterp
Activating thorn AHFinderDirect...Success -> active implementation AHFinderDirect
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IDAnalyticBH...Success -> active implementation idanalyticbh
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOBasic...Success -> active implementation IOBasic
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHInterp...Success -> active implementation Interp
Activating thorn PUGHReduce...Success -> active implementation Reduce
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn SphericalSurface...Success -> active implementation SphericalSurface
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      PUGH::Driver_Startup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      IOUtil::IOUtil_Startup: Startup routine
      IOBasic::IOBasic_Startup: Startup routine
      IOASCII::IOASCII_Startup: Startup routine
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      PUGHInterp::PUGHInterp_Startup: PUGHInterp startup routine
      PUGHReduce::PUGHReduce_Startup: Startup routine
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      SpaceMask::MaskSym: [global] Set grid symmetries for mask
      SpaceMask::MaskSym_emask: [global] Set grid symmetries for emask (compatibility mode)
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      IDAnalyticBH::IDAnalyticBH_ParamChecker: [global] Construct parameters for analytic black hole solutions
      SphericalSurface::SphericalSurface_ParamCheck: [global] Check that all surface names are unique
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        SpaceMask::MaskZero: Initialise mask to zero
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        SpaceMask::MaskOne: Set mask to one
        AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        AHFinderDirect::AHFinderDirect_setup: [global] setup data structures
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          IDAnalyticBH::Misner_standard: Construct initial data for two Misner black holes
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
        IOBasic::IOBasic_Init: Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        AHFinderDirect::AHFinderDirect_import_mask: [global] [loop-local] import the excision mask
        AHFinderDirect::AHFinderDirect_find_horizons: [global] find apparent horizon(s) after this time step
        AHFinderDirect::AHFinderDirect_store: [global] store apparent horizon(s) into spherical surface(s)
        AHFinderDirect::AHFinderDirect_save: [global] save apparent horizon(s) into Cactus variables
        AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
        SpaceMask::CheckMask: Ensure that all mask values are legal
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        AHFinderDirect::AHFinderDirect_setup: [global] setup data structures
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        AHFinderDirect::AHFinderDirect_recover: [global] import horizon data from Cactus variables
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      SpaceMask::MaskZero: Initialise mask to zero
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      SpaceMask::MaskOne: Set mask to one
      AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
      AHFinderDirect::AHFinderDirect_import_mask: [global] [loop-local] import the excision mask
      AHFinderDirect::AHFinderDirect_find_horizons: [global] find apparent horizon(s) after this time step
      AHFinderDirect::AHFinderDirect_store: [global] store apparent horizon(s) into spherical surface(s)
      AHFinderDirect::AHFinderDirect_save: [global] save apparent horizon(s) into Cactus variables
      AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
      SpaceMask::CheckMask: Ensure that all mask values are legal
      SphericalSurface::SphericalSurface_Set: [global] Set surface radii
      GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
        SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      SpaceMask::MaskZero: Initialise mask to zero
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      SpaceMask::MaskOne: Set mask to one
      AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.7.0, API version 0x20500
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOBasic): I/O Method 'Scalar' registered: output of scalar quantities (grid scalars, reductions) to ASCII files
INFO (IOBasic): I/O Method 'Info' registered: output of scalar quantities (grid scalars, reductions) to screen
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output turned off
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output every 1 iterations
INFO (IOASCII): Periodic 2D output requested for 'SPACEMASK::emask', 'SPHERICALSURFACE::sf_radius[0]', 'SPHERICALSURFACE::sf_radius[1]'
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (SymBase): Symmetry on lower x-face: CartGrid3D
INFO (SymBase): Symmetry on lower y-face: CartGrid3D
INFO (SymBase): Symmetry on lower z-face: CartGrid3D
WARNING[L2,P0] (SymBase): The symmetry "CartGrid3D" on the lower x-face has not registered a symmetry interpolator
WARNING[L2,P0] (SymBase): The symmetry "CartGrid3D" on the lower y-face has not registered a symmetry interpolator
WARNING[L2,P0] (SymBase): The symmetry "CartGrid3D" on the lower z-face has not registered a symmetry interpolator
INFO (IDAnalyticBH): Two Misner black holes (on z-axis)
INFO (IDAnalyticBH):   mu is 1.200000
INFO (IDAnalyticBH): Black hole initial data uses conformal metric
INFO (IDAnalyticBH):   and conformal derivatives
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>2.5000000e-02  dy=>2.5000000e-02  dz=>2.5000000e-02
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.038, 1.012]  y=>[-0.038, 1.012]  z=>[-0.038, 2.013]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[2,42]  y=>[2,42]  z=>[2,82]
INFO (AHFinderDirect): setting up AHFinderDirect data structures
INFO (AHFinderDirect):            to search for 2 horizons on 1 processor
INFO (AHFinderDirect):       Cactus has mirrored octant mode
INFO (AHFinderDirect):       but patch system origin_z=1 != 0
INFO (AHFinderDirect):       ==> using "+xy quadrant (mirrored)" patch system
INFO (AHFinderDirect):       constructing +xy quadrant (mirrored) patch system
INFO (AHFinderDirect):                    at origin (0,0,1)
INFO (AHFinderDirect):                    with 20 angular zones per right angle
INFO (AHFinderDirect):       ==> 704 nominal, 1200 ghosted angular grid points
INFO (AHFinderDirect):       constructing +xyz octant (mirrored) patch system
INFO (AHFinderDirect):                    at origin (0,0,0)
INFO (AHFinderDirect):                    with 30 angular zones per right angle
INFO (AHFinderDirect):       ==> 768 nominal, 1200 ghosted angular grid points
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 43 43 83
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 153467   [43 x 43 x 83]
INFO (PUGH):   Maximum load skew: 0.000000
INFO (IDAnalyticBH): setting up Misner initial data
INFO (IDAnalyticBH): ADM mass is 3.694690
INFO (IDAnalyticBH): Initialise with cadez lapse
INFO (AHFinderDirect): proc 0: searching for horizons 1,2/2
INFO (AHFinderDirect): AH 1/2: r=0.660744 at (0.000000,0.000000,1.127429)
INFO (AHFinderDirect): AH 1/2: area=338.0476684 m_irreducible=2.593307672
INFO (AHFinderDirect): AH 2/2: r=1.23701 at (0.000000,0.000000,0.000000)
INFO (AHFinderDirect): AH 2/2: area=719.7156025 m_irreducible=3.783951238
INFO (IOBasic): Periodic scalar output requested for 'SPHERICALSURFACE::sf_valid[0]', 'SPHERICALSURFACE::sf_valid[1]', 'SPHERICALSURFACE::sf_area[0]', 'SPHERICALSURFACE::sf_area[1]', 'SPHERICALSURFACE::sf_mean_radius[0]', 'SPHERICALSURFACE::sf_mean_radius[1]', 'SPHERICALSURFACE::sf_centroid_x[0]', 'SPHERICALSURFACE::sf_centroid_x[1]', 'SPHERICALSURFACE::sf_centroid_y[0]', 'SPHERICALSURFACE::sf_centroid_y[1]', 'SPHERICALSURFACE::sf_centroid_z[0]', 'SPHERICALSURFACE::sf_centroid_z[1]', 'SPHERICALSURFACE::sf_quadrupole_xx[0]', 'SPHERICALSURFACE::sf_quadrupole_xx[1]', 'SPHERICALSURFACE::sf_quadrupole_xy[0]', 'SPHERICALSURFACE::sf_quadrupole_xy[1]', 'SPHERICALSURFACE::sf_quadrupole_xz[0]', 'SPHERICALSURFACE::sf_quadrupole_xz[1]', 'SPHERICALSURFACE::sf_quadrupole_yy[0]', 'SPHERICALSURFACE::sf_quadrupole_yy[1]', 'SPHERICALSURFACE::sf_quadrupole_yz[0]', 'SPHERICALSURFACE::sf_quadrupole_yz[1]', 'SPHERICALSURFACE::sf_quadrupole_zz[0]', 'SPHERICALSURFACE::sf_quadrupole_zz[1]', 'SPHERICALSURFACE::sf_min_radius[0]', 'SPHERICALSURFACE::sf_min_radius[1]', 'SPHERICALSURFACE::sf_max_radius[0]', 'SPHERICALSURFACE::sf_max_radius[1]', 'SPHERICALSURFACE::sf_min_x[0]', 'SPHERICALSURFACE::sf_min_x[1]', 'SPHERICALSURFACE::sf_min_y[0]', 'SPHERICALSURFACE::sf_min_y[1]', 'SPHERICALSURFACE::sf_min_z[0]', 'SPHERICALSURFACE::sf_min_z[1]', 'SPHERICALSURFACE::sf_max_x[0]', 'SPHERICALSURFACE::sf_max_x[1]', 'SPHERICALSURFACE::sf_max_y[0]', 'SPHERICALSURFACE::sf_max_y[1]', 'SPHERICALSURFACE::sf_max_z[0]', 'SPHERICALSURFACE::sf_max_z[1]', 'SPHERICALSURFACE::sf_origin_x[0]', 'SPHERICALSURFACE::sf_origin_x[1]', 'SPHERICALSURFACE::sf_origin_y[0]', 'SPHERICALSURFACE::sf_origin_y[1]', 'SPHERICALSURFACE::sf_origin_z[0]', 'SPHERICALSURFACE::sf_origin_z[1]'
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Mar 14 23:22:34 UTC 2024
+ echo Done.
Done.
  Elapsed time: 1.7 s
