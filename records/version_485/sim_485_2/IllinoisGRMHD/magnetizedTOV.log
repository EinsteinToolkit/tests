/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/IllinoisGRMHD
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/IllinoisGRMHD/output-0000-active
+ hostname
fv-az371-38
+ date
Wed Dec  7 19:06:53 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1670440013
+ CACTUS_STARTTIME=1670440013
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/WVUThorns/IllinoisGRMHD/test/magnetizedTOV.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.13.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.13.0
Compile date:      Dec 07 2022 (18:41:01)
Run date:          Dec 07 2022 (19:06:54+0000)
Run host:          fv-az371-38.ipdn00qvwfrujbrcphh0gwusye.dx.internal.cloudapp.net (pid=110413)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/IllinoisGRMHD
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/WVUThorns/IllinoisGRMHD/test/magnetizedTOV.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Time MoL Coordbase CartGrid3d Boundary StaticConformal SymBase ADMBase TmunuBase HydroBase InitBase ADMMacros IOUtil SpaceMask CoordGauge Constants LocalReduce aeilocalinterp LoopControl Carpet CarpetLib CarpetReduce CarpetRegrid2 CarpetInterp CarpetIOASCII CarpetIOScalar CarpetIOHDF5 CarpetIOBasic IllinoisGRMHD ID_converter_ILGRMHD Convert_to_HydroBase Seed_Magnetic_Fields NaNChecker GenericFD NewRad ML_BSSN ML_BSSN_Helper SphericalSurface Dissipation TOVSolver<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn CarpetIOHDF5 requests automatic activation of HDF5
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn IllinoisGRMHD requests automatic activation of EOS_Omni
Thorn LoopControl requests automatic activation of hwloc
Thorn HDF5 requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn aeilocalinterp...Success -> active implementation AEILocalInterp
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetIOHDF5...Success -> active implementation IOHDF5
Activating thorn CarpetIOScalar...Success -> active implementation IOScalar
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetRegrid2...Success -> active implementation CarpetRegrid2
Activating thorn CartGrid3d...Success -> active implementation grid
Activating thorn Constants...Success -> active implementation Constants
Activating thorn Convert_to_HydroBase...Success -> active implementation Convert_to_HydroBase
Activating thorn Coordbase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Dissipation...Success -> active implementation Dissipation
Activating thorn EOS_Omni...Success -> active implementation EOS_Omni
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn HydroBase...Success -> active implementation HydroBase
Activating thorn ID_converter_ILGRMHD...Success -> active implementation ID_converter_ILGRMHD
Activating thorn IllinoisGRMHD...Success -> active implementation IllinoisGRMHD
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LocalReduce...Success -> active implementation LocalReduce
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn NewRad...Success -> active implementation NewRad
Activating thorn Seed_Magnetic_Fields...Success -> active implementation seed_magnetic_fields
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn SphericalSurface...Success -> active implementation SphericalSurface
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn TOVSolver...Success -> active implementation TOVSolver
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
WARNING[L1,P1] (Seed_Magnetic_Fields): Boolean variable is set with integer: Seed_Magnetic_Fields::enable_IllinoisGRMHD_staggered_A_fields = 1

WARNING[L1,P0] (Seed_Magnetic_Fields): Boolean variable is set with integer: Seed_Magnetic_Fields::enable_IllinoisGRMHD_staggered_A_fields = 1

[1mWARNING[L1,P0] (Seed_Magnetic_Fields):[0m Boolean variable is set with integer: Seed_Magnetic_Fields::enable_IllinoisGRMHD_staggered_A_fields = 1

INFO (IOUtil): Recovery directory 'magnetizedTOV' doesn't exist
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      EOS_Omni::EOS_Omni_Startup: [global] Set up conversion factors and other fun stuff
      HydroBase::HydroBase_StartUp: Startup banner
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      LocalReduce::LocalReduce_Startup: Startup routine
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOHDF5::CarpetIOHDF5_Startup: Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOScalar::CarpetIOScalarStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CarpetRegrid2::CarpetRegrid2_Initialise: [global] Initialise locations of refined regions
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        IllinoisGRMHD::IllinoisGRMHD_RegisterVars: [meta] Register evolved, rhs variables in IllinoisGRMHD for MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      SpaceMask::MaskSym: [global] Set grid symmetries for mask
      SpaceMask::MaskSym_emask: [global] Set grid symmetries for emask (compatibility mode)
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      TOVSolver::TOV_C_AllocateMemory: [global] Allocate memory for TOVSolver_C
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CarpetRegrid2::CarpetRegrid2_ParamCheck: Check parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Dissipation::dissipation_paramcheck: Check dissipation parameters for consistency
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      SphericalSurface::SphericalSurface_ParamCheck: [global] Check that all surface names are unique
      TOVSolver::TOV_C_ParamCheck: [global] Check parameters
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        Dissipation::setup_epsdis: Setup spatially varying dissipation
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set mask to one
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        Dissipation::dissipation_basegrid: Ensure that there are enough ghost zones
        IllinoisGRMHD::IllinoisGRMHD_InitSymBound: Schedule symmetries
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        CarpetIOHDF5::CarpetIOHDF5_Init: [global] Initialisation routine
        CarpetIOScalar::CarpetIOScalarInit: [global] Initialisation routine
        GROUP HydroBase_Initial: HydroBase initial data group
          HydroBase::HydroBase_Zero: Set up vacuum hydro initial data
          GROUP TOV_Initial_Data: Group for the TOV initial data
            TOVSolver::TOV_C_Integrate_RHS: [global] Integrate the 1d equations for the TOV star
            TOVSolver::TOV_C_Exact: Set up the 3d quantities for the TOV star
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        GROUP HydroBase_Prim2ConInitial: Recover the conservative variables from the primitive variables
        Seed_Magnetic_Fields::Seed_Magnetic_Fields: Set up seed magnetic field configuration.
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
        ML_BSSN_Helper::ML_BSSN_ExtrapolateGammas: Extrapolate Gammas and time derivatives of lapse and shift
        MoL::MoL_StartLoop: [level] Initialise the step size control
        GROUP IllinoisGRMHD_ID_Converter: Translate ET-generated, HydroBase-compatible initial data and convert into variables used by IllinoisGRMHD
          ID_converter_ILGRMHD::first_initialdata: [local] Convert HydroBase initial data (ID) to ID that IllinoisGRMHD can read.
          ID_converter_ILGRMHD::third_initialdata: Schedule symmetries -- Actually just a placeholder function to ensure prolongation / processor syncs are done BEFORE the primitives solver.
          ID_converter_ILGRMHD::fourth_initialdata: Compute B and B_stagger from A
          ID_converter_ILGRMHD::fifth_initialdata: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
        Convert_to_HydroBase::Convert_to_HydroBase: Convert IllinoisGRMHD-native variables to HydroBase
      [CCTK_POSTINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [global] Close all filereader input files
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
              IllinoisGRMHD::Boundary_SYNCs: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
              IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_A_mu: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i.
              IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A,  SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
              IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
              IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_P_rho_b_vx_vy_vz: Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero.
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
              IllinoisGRMHD::Boundary_SYNCs: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
              IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_A_mu: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i.
              IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A,  SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
              IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
              IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_P_rho_b_vx_vy_vz: Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero.
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
        GROUP Con2Prim: Convert from conservative to primitive variables (might be redundant)
        GROUP IllinoisGRMHD_PostPostInitial: HydroBase_Con2Prim in CCTK_POSTPOSTINITIAL sets conserv to prim then outer boundaries (OBs, which are technically disabled). The post OB SYNCs actually reprolongate the conservative variables, making cons and prims INCONSISTENT. So here we redo the con2prim, avoiding the SYNC afterward, then copy the result to other timelevels
          IllinoisGRMHD::postid: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
          IllinoisGRMHD::compute_b: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
          IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
          IllinoisGRMHD::mhdpostid: Compute post-initialdata quantities
        TOVSolver::TOV_C_FreeMemory: [global] Free memory from TOVSolver_C
      [CCTK_POSTSTEP]
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        SpaceMask::CheckMask: Ensure that all mask values are legal
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        Dissipation::setup_epsdis: Setup spatially varying dissipation
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        Dissipation::dissipation_basegrid: Ensure that there are enough ghost zones
        IllinoisGRMHD::IllinoisGRMHD_InitSymBound: Schedule symmetries
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
        IOUtil::IOUtil_RecoverGH: [level] Checkpoint recovery routine
      [CCTK_POST_RECOVER_VARIABLES]
        CarpetIOHDF5::CarpetIOHDF5_InitCheckpointingIntervals: [global] Initialisation of checkpointing intervals after recovery
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [meta] Close all initial data checkpoint files after recovery
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
              IllinoisGRMHD::Boundary_SYNCs: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
              IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_A_mu: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i.
              IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A,  SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
              IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
              IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_P_rho_b_vx_vy_vz: Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero.
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_InitialDataCheckpoint: [meta] Initial data checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        Convert_to_HydroBase::Convert_to_HydroBase: [global] [loop-local] Convert IllinoisGRMHD-native variables to HydroBase
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
          ML_BSSN_Helper::ML_BSSN_NewRad: Apply NewRad boundary conditions to RHS
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            IllinoisGRMHD::Boundary_SYNCs: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
            IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_A_mu: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i.
            IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A,  SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
            IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
            IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_P_rho_b_vx_vy_vz: Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero.
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      SpaceMask::MaskZero: Initialise mask to zero
      SpaceMask::MaskOne: Set mask to one
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                GROUP HydroBase_RHS: Groups for scheduling tasks for calculating RHS of hydro variables
                IllinoisGRMHD::IllinoisGRMHD_RHS_eval: Evaluate RHSs of GR Hydro & GRMHD equations
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
                ML_BSSN_Helper::ML_BSSN_NewRad: Apply NewRad boundary conditions to RHS
              GROUP MoL_PostRHS: Modify RHS functions
                Dissipation::dissipation_add: Add Kreiss-Oliger dissipation to the right hand sides
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
                GROUP HydroBase_PostStep: Post step tasks for hydro thorns
                  GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
                    GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
                    GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                      GROUP BoundaryConditions: Execute all boundary conditions
                        Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                        CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                      Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                    IllinoisGRMHD::Boundary_SYNCs: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
                    IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_A_mu: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i.
                    IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A,  SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
                  GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
                GROUP SetTmunu: Group for calculating the stress-energy tensor
                  TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
                  GROUP AddToTmunu: Add to the stress-energy tensor here
                    IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
                    IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_P_rho_b_vx_vy_vz: Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero.
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            IllinoisGRMHD::Boundary_SYNCs: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
            IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_A_mu: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i.
            IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A,  SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
            IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
            IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_P_rho_b_vx_vy_vz: Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero.
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      SphericalSurface::SphericalSurface_Set: [global] Set surface radii
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
      SpaceMask::CheckMask: Ensure that all mask values are legal
      GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
        SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
      Dissipation::setup_epsdis: Setup spatially varying dissipation
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetIOHDF5::CarpetIOHDF5_EvolutionCheckpoint: [meta] Evolution checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      Convert_to_HydroBase::Convert_to_HydroBase: [global] [loop-local] Convert IllinoisGRMHD-native variables to HydroBase
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
        ML_BSSN_Helper::ML_BSSN_NewRad: Apply NewRad boundary conditions to RHS
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetIOHDF5::CarpetIOHDF5_TerminationCheckpoint: [meta] Termination checkpoint routine
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      Dissipation::setup_epsdis: Setup spatially varying dissipation
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            IllinoisGRMHD::Boundary_SYNCs: Schedule symmetries -- Actually just a placeholder function to ensure prolongations / processor syncs are done BEFORE outer boundaries are updated.
            IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_A_mu: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i.
            IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A,  SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
            IllinoisGRMHD::IllinoisGRMHD_conserv_to_prims: Compute primitive variables from conservatives. This is non-trivial, requiring a Newton-Raphson root-finder.
            IllinoisGRMHD::IllinoisGRMHD_outer_boundaries_on_P_rho_b_vx_vy_vz: Apply outflow-only, flat BCs on {P,rho_b,vx,vy,vz}. Outflow only == velocities pointed inward from outer boundary are set to zero.
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      SpaceMask::MaskZero: Initialise mask to zero
      SpaceMask::MaskOne: Set mask to one
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 1.51 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.417611 ns per clock tick (2.39457 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
HydroBase: Let it flow.
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 0D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 1D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 2D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 3D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR scalar I/O provided by CarpetIOScalar
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az371-38, pid=110413
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-12,-12,-12] : [12,12,12]   ([24,24,24])
   interior extent: [-11,-11,-11] : [11,11,11]   ([22,22,22])
   exterior extent: [-14,-14,-14] : [14,14,14]   ([28,28,28])
   base_spacing   : [1,1,1]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-12,-12,-12] : [12,12,12]   ([24,24,24])
   interior extent   : [-11,-11,-11] : [11,11,11]   ([22,22,22])
   exterior extent   : [-14,-14,-14] : [14,14,14]   ([28,28,28])
   spacing           : [1,1,1]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [29,29,29]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[9,9,9],[9,9,9]]
   [2]: [[9,9,9],[9,9,9]]
   [3]: [[9,9,9],[9,9,9]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[0,0,0],[0,0,0]]
   [2]: [[0,0,0],[0,0,0]]
   [3]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 949 grid functions in 85 groups
INFO (Carpet):    There are 264 grid scalars in 50 groups
INFO (Carpet):    There are 86 1-dimensional grid arrays in 9 groups
INFO (Carpet):    There are 3 2-dimensional grid arrays in 2 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ILLINOISGRMHD::Ax
   ILLINOISGRMHD::Ay
   ILLINOISGRMHD::Az
   ILLINOISGRMHD::psi6phi
   ILLINOISGRMHD::rho_b
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5' registered: AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_0D' registered: 0D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_1D' registered: 1D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_2D' registered: 2D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_3D' registered: 3D AMR output of grid variables to HDF5 files
INFO (CarpetIOScalar): Periodic scalar output requested for:
   ILLINOISGRMHD::rho_b
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 619. 34 are registered.
INFO (MoL): The maximum number of slow evolved variables is 619. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 619. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 619. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 619. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 619. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 619. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 1
INFO (Carpet): Grid structure (superregions, grid points):
   [0][0][0]   exterior: [0,0,0] : [28,28,28]   ([29,29,29] + PADDING) 24389
   [1][0][0]   exterior: [2,2,2] : [54,54,54]   ([53,53,53] + PADDING) 148877
   [2][0][0]   exterior: [29,29,29] : [83,83,83]   ([55,55,55] + PADDING) 166375
   [3][0][0]   exterior: [91,91,91] : [133,133,133]   ([43,43,43] + PADDING) 79507
INFO (Carpet): Grid structure (superregions, coordinates):
   [0][0][0]   exterior: [-14,-14,-14] : [14,14,14] : [1,1,1]
   [1][0][0]   exterior: [-13,-13,-13] : [13,13,13] : [0.5,0.5,0.5]
   [2][0][0]   exterior: [-6.75,-6.75,-6.75] : [6.75,6.75,6.75] : [0.25,0.25,0.25]
   [3][0][0]   exterior: [-2.625,-2.625,-2.625] : [2.625,2.625,2.625] : [0.125,0.125,0.125]
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "HYDROBASE::BVEC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "HYDROBASE::AVEC".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): There are not enough time levels for the desired temporal prolongation order in the grid function group "HYDROBASE::APHI".  With Carpet::prolongation_order_time=2, you need at least 3 time levels.
INFO (Carpet): Global grid structure statistics:
INFO (Carpet): GF: rhs: 36k active, 101k owned (+178%), 161k total (+59%), 15 steps/time
INFO (Carpet): GF: vars: 354, pts: 65M active, 128M owned (+99%), 204M total (+59%), 1.0 comp/proc
INFO (Carpet): GA: vars: 348, pts: 0M active, 0M total (+0%)
INFO (Carpet): Total required memory: 1.628 GByte (for GAs and currently active GFs)
INFO (Carpet): Load balance:  min     avg     max     sdv     max/avg-1
INFO (Carpet): Level  0:       2M      2M      2M      0M owned      4%
INFO (Carpet): Level  1:      18M     18M     19M      0M owned      2%
INFO (Carpet): Level  2:      29M     29M     30M      1M owned      2%
INFO (Carpet): Level  3:      14M     14M     14M      0M owned      2%
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.0000000e+00  dy=>1.0000000e+00  dz=>1.0000000e+00
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-14.000,14.000]  y=>[-14.000,14.000]  z=>[-14.000,14.000]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,28]  y=>[0,28]  z=>[0,28]
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (Time): Timestep set to 0.5 (courant_static)
INFO (TOVSolver): Integrated TOV equation
INFO (TOVSolver): Information about the TOVs used:
INFO (): TOV    radius    mass  bary_mass mass(g) cent.rho rho(cgi)        K   K(cgi)    Gamma
INFO ():   1  0.809903 0.140503 0.151197 2.79e+32 0.129285    8e+16        1 1.45e+03        2
INFO (TOVSolver): Not using old matter initial data
INFO (TOVSolver): Done interpolation.
INFO (Seed_Magnetic_Fields): Seeding magnetic fields
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 5.212e-16, ErrDenom: 4.260e-01 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 2.606e-16, ErrDenom: 4.260e-01 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (Time): Timestep set to 0.25 (courant_static)
INFO (TOVSolver): Not using old matter initial data
INFO (TOVSolver): Done interpolation.
INFO (Seed_Magnetic_Fields): Seeding magnetic fields
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 8.346e-17, ErrDenom: 1.330e+00 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 9.389e-17, ErrDenom: 1.330e+00 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (Time): Timestep set to 0.125 (courant_static)
INFO (TOVSolver): Not using old matter initial data
INFO (TOVSolver): Done interpolation.
INFO (Seed_Magnetic_Fields): Seeding magnetic fields
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 2.845e-16, ErrDenom: 1.024e+01 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 3.655e-16, ErrDenom: 1.024e+01 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (Time): Timestep set to 0.0625 (courant_static)
INFO (TOVSolver): Not using old matter initial data
INFO (TOVSolver): Done interpolation.
INFO (Seed_Magnetic_Fields): Seeding magnetic fields
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.267e-14, ErrDenom: 7.773e+01 | 1.01 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.328e-14, ErrDenom: 7.773e+01 | 1.01 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 4.908e-08, ErrDenom: 4.260e-01 | 1.01 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 2.796e-08, ErrDenom: 1.330e+00 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 7.346e-09, ErrDenom: 1.024e+01 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.508e-13, ErrDenom: 7.773e+01 | 1.01 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.303e-16, ErrDenom: 4.260e-01 | 1.01 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 7.302e-17, ErrDenom: 1.330e+00 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 4.119e-16, ErrDenom: 1.024e+01 | 1.00 iters/gridpt
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 0 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.507e-13, ErrDenom: 7.773e+01 | 1.01 iters/gridpt
------------------------------------------------------------------------------------------
Iteration      Time | *me_per_hour |      ILLINOISGRMHD::rho_b |                ML_BSSN::H
                    |              |      minimum      maximum |      minimum      maximum
------------------------------------------------------------------------------------------
        0     0.000 |    0.0000000 | 1.292853e-10    0.1292852 |   -0.0231890    0.0541658
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 0, Integrating to time: 5.000000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 3432 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 3.408e-08, ErrDenom: 4.468e-01 | 1.53 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 0, Integrating to time: 7.500000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 136 VL= 0 rho*= 6 | Failures: 0 InHoriz= 0 / 0 | Error: 3.939e-02, ErrDenom: 4.553e-01 | 1.53 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 0, Integrating to time: 7.500000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 56 VL= 0 rho*= 18 | Failures: 0 InHoriz= 0 / 0 | Error: 1.043e-01, ErrDenom: 4.956e-01 | 1.53 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 0, Integrating to time: 1.000000e+00 *****
INFO (IllinoisGRMHD): C2P: Lev: 0 NumPts= 15138 | Fixes: Font= 142 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.247e-09, ErrDenom: 4.689e-01 | 1.55 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 1, Integrating to time: 2.500000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 26042 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 3.958e-09, ErrDenom: 1.345e+00 | 1.71 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 1, Integrating to time: 3.750000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 189 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.281e-09, ErrDenom: 1.346e+00 | 1.71 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 1, Integrating to time: 3.750000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 61 VL= 0 rho*= 14 | Failures: 0 InHoriz= 0 / 0 | Error: 6.798e-05, ErrDenom: 1.359e+00 | 1.71 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 1, Integrating to time: 5.000000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 1 NumPts= 84270 | Fixes: Font= 199 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 7.320e-09, ErrDenom: 1.360e+00 | 1.71 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 2, Integrating to time: 1.250000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 40120 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 5.983e-10, ErrDenom: 1.026e+01 | 1.74 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 2, Integrating to time: 1.875000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 295 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 4.303e-10, ErrDenom: 1.027e+01 | 1.74 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 2, Integrating to time: 1.875000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 105 VL= 0 rho*= 9 | Failures: 0 InHoriz= 0 / 0 | Error: 3.455e-07, ErrDenom: 1.028e+01 | 1.75 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 2, Integrating to time: 2.500000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 212 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.395e-09, ErrDenom: 1.028e+01 | 2.01 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 3, Integrating to time: 6.250000e-02 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 18330 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.196e-10, ErrDenom: 7.775e+01 | 1.69 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 3, Integrating to time: 9.375000e-02 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 419 VL= 0 rho*= 8 | Failures: 0 InHoriz= 0 / 0 | Error: 2.937e-07, ErrDenom: 7.775e+01 | 1.70 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 3, Integrating to time: 9.375000e-02 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 270 VL= 0 rho*= 36 | Failures: 0 InHoriz= 0 / 0 | Error: 1.099e-06, ErrDenom: 7.777e+01 | 1.70 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 1, Lev: 3, Integrating to time: 1.250000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 1664 VL= 0 rho*= 40 | Failures: 0 InHoriz= 0 / 0 | Error: 8.269e-10, ErrDenom: 7.777e+01 | 2.04 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 2, Lev: 3, Integrating to time: 1.250000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 6691 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.756e-10, ErrDenom: 7.779e+01 | 2.04 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 2, Lev: 3, Integrating to time: 1.562500e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 88 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 1.757e-10, ErrDenom: 7.779e+01 | 2.04 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 2, Lev: 3, Integrating to time: 1.562500e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 274 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 3.103e-10, ErrDenom: 7.781e+01 | 2.04 iters/gridpt
INFO (IllinoisGRMHD): ***** Iter. # 2, Lev: 3, Integrating to time: 1.875000e-01 *****
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 3128 VL= 4 rho*= 84 | Failures: 0 InHoriz= 0 / 0 | Error: 4.974e-09, ErrDenom: 7.781e+01 | 2.05 iters/gridpt
INFO (IllinoisGRMHD): C2P: Lev: 2 NumPts= 126514 | Fixes: Font= 188 VL= 0 rho*= 0 | Failures: 0 InHoriz= 0 / 0 | Error: 5.505e-12, ErrDenom: 1.022e+01 | 2.00 iters/gridpt
INFO (IllinoisGRMHD): C2P: Lev: 3 NumPts= 67228 | Fixes: Font= 2314 VL= 0 rho*= 105 | Failures: 0 InHoriz= 0 / 0 | Error: 5.658e-10, ErrDenom: 7.781e+01 | 2.03 iters/gridpt
        2     0.125 |   39.7721396 | 1.292853e-10    0.1283006 |   -0.0347952    0.0442707
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Dec  7 19:07:10 UTC 2022
+ echo Done.
Done.
  Elapsed time: 16.8 s
