/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1567-87
+ date
Fri May 31 20:00:02 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1717185602
+ CACTUS_STARTTIME=1717185602
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      May 31 2024 (19:52:49)
Run date:          May 31 2024 (20:00:02+0000)
Run host:          fv-az1567-87.ivwpl3vsblrubjity54i0equac.phxx.internal.cloudapp.net (pid=131072)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az1567-87
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364600KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=7c44b4fa-3bd9-c84d-ac85-0b0585c92a7b, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1021-azure, OSVersion="#22~22.04.1-Ubuntu SMP Tue Apr 30 16:08:18 UTC 2024", HostName=fv-az1567-87, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364600KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00132455 sec
      iterations=10000000... time=0.0124531 sec
      iterations=100000000... time=0.123919 sec
      iterations=900000000... time=1.11402 sec
      iterations=900000000... time=0.83618 sec
      result: 6.47859 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197139 sec
      iterations=10000000... time=0.0197407 sec
      iterations=100000000... time=0.197252 sec
      iterations=600000000... time=1.18382 sec
      result: 16.2187 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187845 sec
      iterations=10000000... time=0.0185376 sec
      iterations=100000000... time=0.186774 sec
      iterations=600000000... time=1.11473 sec
      result: 8.61198 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000125615 sec
      iterations=10000... time=0.00123657 sec
      iterations=100000... time=0.012361 sec
      iterations=1000000... time=0.123606 sec
      iterations=9000000... time=1.11299 sec
      result: 1.23666 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000458216 sec
      iterations=10000... time=0.00438691 sec
      iterations=100000... time=0.0437491 sec
      iterations=1000000... time=0.436321 sec
      iterations=3000000... time=1.31078 sec
      result: 4.36927 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.81e-07 sec
      iterations=10... time=2.966e-06 sec
      iterations=100... time=2.9145e-05 sec
      iterations=1000... time=0.000248915 sec
      iterations=10000... time=0.00242418 sec
      iterations=100000... time=0.0244044 sec
      iterations=1000000... time=0.243784 sec
      iterations=5000000... time=1.22077 sec
      result: 100.658 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=9.328e-06 sec
      iterations=10... time=5.3269e-05 sec
      iterations=100... time=0.000473806 sec
      iterations=1000... time=0.00464987 sec
      iterations=10000... time=0.0460108 sec
      iterations=100000... time=0.462248 sec
      iterations=200000... time=0.919794 sec
      iterations=400000... time=1.84256 sec
      result: 85.3628 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.116e-06 sec
      iterations=10000... time=3.1769e-05 sec
      iterations=100000... time=0.000252712 sec
      iterations=1000000... time=0.00247438 sec
      iterations=10000000... time=0.0247282 sec
      iterations=100000000... time=0.247317 sec
      iterations=400000000... time=0.990661 sec
      iterations=800000000... time=1.98199 sec
      result: 0.309686 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.0219e-05 sec
      iterations=10000... time=0.00010748 sec
      iterations=100000... time=0.000993206 sec
      iterations=1000000... time=0.00984067 sec
      iterations=10000000... time=0.0987141 sec
      iterations=100000000... time=1.00145 sec
      result: 1.25181 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.51e-07 sec
      iterations=10... time=4.058e-06 sec
      iterations=100... time=3.749e-05 sec
      iterations=1000... time=0.000285573 sec
      iterations=10000... time=0.00278033 sec
      iterations=100000... time=0.0276817 sec
      iterations=1000000... time=0.279452 sec
      iterations=4000000... time=1.10724 sec
      result: 88.7833 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.965e-06 sec
      iterations=10... time=6.3328e-05 sec
      iterations=100... time=0.000493192 sec
      iterations=1000... time=0.00434685 sec
      iterations=10000... time=0.0428794 sec
      iterations=100000... time=0.43019 sec
      iterations=300000... time=1.29568 sec
      result: 91.0449 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.6279e-05 sec
      iterations=10... time=0.000332601 sec
      iterations=100... time=0.00321048 sec
      iterations=1000... time=0.0320348 sec
      iterations=10000... time=0.328243 sec
      iterations=30000... time=1.00508 sec
      result: 0.0515781 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000154939 sec
      iterations=10... time=0.00168085 sec
      iterations=100... time=0.016647 sec
      iterations=1000... time=0.16854 sec
      iterations=7000... time=1.17084 sec
      result: 0.145812 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00398198 sec
      iterations=10... time=0.038479 sec
      iterations=100... time=0.389359 sec
      iterations=300... time=1.1978 sec
      result: 0.390942 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.0013036 sec
      iterations=10000000... time=0.0124127 sec
      iterations=100000000... time=0.123994 sec
      iterations=900000000... time=1.11428 sec
      iterations=900000000... time=0.837558 sec
      result: 6.50479 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197157 sec
      iterations=10000000... time=0.0197342 sec
      iterations=100000000... time=0.197314 sec
      iterations=600000000... time=1.18616 sec
      result: 16.1867 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187681 sec
      iterations=10000000... time=0.0212162 sec
      iterations=100000000... time=0.186843 sec
      iterations=600000000... time=1.11491 sec
      result: 8.61055 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124282 sec
      iterations=10000... time=0.00123423 sec
      iterations=100000... time=0.0123667 sec
      iterations=1000000... time=0.123667 sec
      iterations=9000000... time=1.11408 sec
      result: 1.23787 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000454684 sec
      iterations=10000... time=0.00437569 sec
      iterations=100000... time=0.043746 sec
      iterations=1000000... time=0.437941 sec
      iterations=3000000... time=1.31774 sec
      result: 4.39247 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=3.955e-07 sec
      iterations=10... time=3.301e-06 sec
      iterations=100... time=4.4508e-05 sec
      iterations=1000... time=0.000294811 sec
      iterations=10000... time=0.00258358 sec
      iterations=100000... time=0.0244113 sec
      iterations=1000000... time=0.243891 sec
      iterations=5000000... time=1.21991 sec
      result: 100.728 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=8.075e-06 sec
      iterations=10... time=5.5233e-05 sec
      iterations=100... time=0.000528507 sec
      iterations=1000... time=0.00509473 sec
      iterations=10000... time=0.050661 sec
      iterations=100000... time=0.485937 sec
      iterations=200000... time=0.9684 sec
      iterations=400000... time=1.94766 sec
      result: 80.7568 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=2.8055e-06 sec
      iterations=10000... time=3.0557e-05 sec
      iterations=100000... time=0.000265981 sec
      iterations=1000000... time=0.00256292 sec
      iterations=10000000... time=0.0247644 sec
      iterations=100000000... time=0.247604 sec
      iterations=400000000... time=0.998714 sec
      iterations=800000000... time=1.98258 sec
      result: 0.309779 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.064e-05 sec
      iterations=10000... time=9.72115e-05 sec
      iterations=100000... time=0.000900367 sec
      iterations=1000000... time=0.00903625 sec
      iterations=10000000... time=0.0905086 sec
      iterations=100000000... time=0.904969 sec
      iterations=200000000... time=1.81271 sec
      result: 1.13294 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.41e-07 sec
      iterations=10... time=3.6465e-06 sec
      iterations=100... time=3.5311e-05 sec
      iterations=1000... time=0.000307695 sec
      iterations=10000... time=0.00275902 sec
      iterations=100000... time=0.0268958 sec
      iterations=1000000... time=0.268881 sec
      iterations=4000000... time=1.07668 sec
      result: 91.3027 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=9.6735e-06 sec
      iterations=10... time=7.21795e-05 sec
      iterations=100... time=0.000627503 sec
      iterations=1000... time=0.0054558 sec
      iterations=10000... time=0.0477118 sec
      iterations=100000... time=0.456862 sec
      iterations=200000... time=0.913824 sec
      iterations=400000... time=1.82498 sec
      result: 86.1851 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=6.437e-06 sec
      iterations=10... time=9.01085e-05 sec
      iterations=100... time=0.000878631 sec
      iterations=1000... time=0.00865594 sec
      iterations=10000... time=0.0910844 sec
      iterations=100000... time=0.885875 sec
      iterations=200000... time=1.75794 sec
      result: 0.196594 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=3.94185e-05 sec
      iterations=10... time=0.000416804 sec
      iterations=100... time=0.00440615 sec
      iterations=1000... time=0.0403308 sec
      iterations=10000... time=0.411923 sec
      iterations=30000... time=1.21892 sec
      result: 0.600263 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00091539 sec
      iterations=10... time=0.0110892 sec
      iterations=100... time=0.111139 sec
      iterations=1000... time=1.09913 sec
      result: 1.42012 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri May 31 20:01:02 UTC 2024
+ echo Done.
Done.
  Elapsed time: 60.4 s
