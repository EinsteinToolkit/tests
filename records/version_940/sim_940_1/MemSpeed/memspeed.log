/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1153-958
+ date
Fri May 17 15:43:49 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1715960629
+ CACTUS_STARTTIME=1715960629
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      May 17 2024 (15:36:27)
Run date:          May 17 2024 (15:43:50+0000)
Run host:          fv-az1153-958.j2xen23xrnaetdgy434mngmvif.cx.internal.cloudapp.net (pid=131218)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az1153-958
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364604KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=abbb2452-5f22-204d-8887-2f4dbe6fbaae, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1021-azure, OSVersion="#22~22.04.1-Ubuntu SMP Tue Apr 30 16:08:18 UTC 2024", HostName=fv-az1153-958, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364604KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00138632 sec
      iterations=10000000... time=0.0124018 sec
      iterations=100000000... time=0.12391 sec
      iterations=900000000... time=1.11528 sec
      iterations=900000000... time=0.835843 sec
      result: 6.44159 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197007 sec
      iterations=10000000... time=0.019737 sec
      iterations=100000000... time=0.19733 sec
      iterations=600000000... time=1.18385 sec
      result: 16.2183 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187394 sec
      iterations=10000000... time=0.0185454 sec
      iterations=100000000... time=0.18546 sec
      iterations=600000000... time=1.1153 sec
      result: 8.60754 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000125224 sec
      iterations=10000... time=0.0012354 sec
      iterations=100000... time=0.0123732 sec
      iterations=1000000... time=0.123621 sec
      iterations=9000000... time=1.11332 sec
      result: 1.23702 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000571105 sec
      iterations=10000... time=0.00533091 sec
      iterations=100000... time=0.0527874 sec
      iterations=1000000... time=0.527273 sec
      iterations=2000000... time=1.05421 sec
      result: 5.27107 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=3.7e-07 sec
      iterations=10... time=2.815e-06 sec
      iterations=100... time=3.1038e-05 sec
      iterations=1000... time=0.000247231 sec
      iterations=10000... time=0.00244055 sec
      iterations=100000... time=0.0242123 sec
      iterations=1000000... time=0.241936 sec
      iterations=5000000... time=1.21109 sec
      result: 101.462 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=9.087e-06 sec
      iterations=10... time=5.9732e-05 sec
      iterations=100... time=0.000530991 sec
      iterations=1000... time=0.00554647 sec
      iterations=10000... time=0.0518883 sec
      iterations=100000... time=0.506708 sec
      iterations=200000... time=1.01453 sec
      result: 77.5168 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.116e-06 sec
      iterations=10000... time=3.1429e-05 sec
      iterations=100000... time=0.000252852 sec
      iterations=1000000... time=0.00248311 sec
      iterations=10000000... time=0.0247331 sec
      iterations=100000000... time=0.247478 sec
      iterations=400000000... time=0.990035 sec
      iterations=800000000... time=1.98086 sec
      result: 0.30951 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.2062e-05 sec
      iterations=10000... time=0.000114213 sec
      iterations=100000... time=0.000989926 sec
      iterations=1000000... time=0.00994851 sec
      iterations=10000000... time=0.0980453 sec
      iterations=100000000... time=1.00344 sec
      result: 1.2543 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=6.11e-07 sec
      iterations=10... time=3.717e-06 sec
      iterations=100... time=3.5647e-05 sec
      iterations=1000... time=0.000285283 sec
      iterations=10000... time=0.00276897 sec
      iterations=100000... time=0.0309535 sec
      iterations=1000000... time=0.305152 sec
      iterations=4000000... time=1.10957 sec
      result: 88.5967 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=8.576e-06 sec
      iterations=10... time=6.1855e-05 sec
      iterations=100... time=0.000556979 sec
      iterations=1000... time=0.00500673 sec
      iterations=10000... time=0.0491292 sec
      iterations=100000... time=0.483065 sec
      iterations=200000... time=0.96617 sec
      iterations=400000... time=1.94444 sec
      result: 80.8903 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.7283e-05 sec
      iterations=10... time=0.000297856 sec
      iterations=100... time=0.00289153 sec
      iterations=1000... time=0.0297369 sec
      iterations=10000... time=0.284057 sec
      iterations=40000... time=1.1887 sec
      result: 0.0581476 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000160399 sec
      iterations=10... time=0.00142531 sec
      iterations=100... time=0.0146172 sec
      iterations=1000... time=0.148965 sec
      iterations=7000... time=1.03979 sec
      result: 0.16419 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00396236 sec
      iterations=10... time=0.0380043 sec
      iterations=100... time=0.379814 sec
      iterations=300... time=1.13635 sec
      result: 0.412083 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00133307 sec
      iterations=10000000... time=0.0124006 sec
      iterations=100000000... time=0.124402 sec
      iterations=900000000... time=1.11682 sec
      iterations=900000000... time=0.835754 sec
      result: 6.40412 GHz
    CPU floating point performance:
      iterations=1000000... time=0.0019699 sec
      iterations=10000000... time=0.0197268 sec
      iterations=100000000... time=0.197295 sec
      iterations=600000000... time=1.18376 sec
      result: 16.2195 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186351 sec
      iterations=10000000... time=0.0186128 sec
      iterations=100000000... time=0.18582 sec
      iterations=600000000... time=1.11818 sec
      result: 8.58537 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124346 sec
      iterations=10000... time=0.00124904 sec
      iterations=100000... time=0.0123658 sec
      iterations=1000000... time=0.123679 sec
      iterations=9000000... time=1.11358 sec
      result: 1.23731 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000467352 sec
      iterations=10000... time=0.00447053 sec
      iterations=100000... time=0.0444875 sec
      iterations=1000000... time=0.444709 sec
      iterations=2000000... time=0.892276 sec
      iterations=4000000... time=1.78145 sec
      result: 4.45361 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=3.96e-07 sec
      iterations=10... time=2.8855e-06 sec
      iterations=100... time=3.0281e-05 sec
      iterations=1000... time=0.00027597 sec
      iterations=10000... time=0.00245756 sec
      iterations=100000... time=0.0242364 sec
      iterations=1000000... time=0.242175 sec
      iterations=5000000... time=1.21216 sec
      result: 101.373 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=9.142e-06 sec
      iterations=10... time=6.962e-05 sec
      iterations=100... time=0.000602158 sec
      iterations=1000... time=0.00579609 sec
      iterations=10000... time=0.0520934 sec
      iterations=100000... time=0.507357 sec
      iterations=200000... time=1.01432 sec
      result: 77.5331 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.216e-06 sec
      iterations=10000... time=3.1469e-05 sec
      iterations=100000... time=0.000280754 sec
      iterations=1000000... time=0.00252517 sec
      iterations=10000000... time=0.0247371 sec
      iterations=100000000... time=0.247683 sec
      iterations=400000000... time=1.01816 sec
      result: 0.318174 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.81385e-05 sec
      iterations=10000... time=9.57485e-05 sec
      iterations=100000... time=0.00098624 sec
      iterations=1000000... time=0.00992805 sec
      iterations=10000000... time=0.0982266 sec
      iterations=100000000... time=0.995991 sec
      iterations=200000000... time=1.9959 sec
      result: 1.24744 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.455e-07 sec
      iterations=10... time=3.727e-06 sec
      iterations=100... time=3.4685e-05 sec
      iterations=1000... time=0.000307589 sec
      iterations=10000... time=0.00277486 sec
      iterations=100000... time=0.0270407 sec
      iterations=1000000... time=0.271847 sec
      iterations=4000000... time=1.08353 sec
      result: 90.7259 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.21825e-05 sec
      iterations=10... time=6.89995e-05 sec
      iterations=100... time=0.000558938 sec
      iterations=1000... time=0.0049592 sec
      iterations=10000... time=0.0474253 sec
      iterations=100000... time=0.465391 sec
      iterations=200000... time=0.933097 sec
      iterations=400000... time=1.86673 sec
      result: 84.2579 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=4.7235e-06 sec
      iterations=10... time=6.79265e-05 sec
      iterations=100... time=0.000695517 sec
      iterations=1000... time=0.00691983 sec
      iterations=10000... time=0.0715249 sec
      iterations=100000... time=0.755939 sec
      iterations=200000... time=1.49962 sec
      result: 0.230458 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=3.9549e-05 sec
      iterations=10... time=0.000388776 sec
      iterations=100... time=0.00391226 sec
      iterations=1000... time=0.0389792 sec
      iterations=10000... time=0.393075 sec
      iterations=30000... time=1.18577 sec
      result: 0.617042 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000846379 sec
      iterations=10... time=0.0108313 sec
      iterations=100... time=0.107697 sec
      iterations=1000... time=1.0817 sec
      result: 1.443 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri May 17 15:44:46 UTC 2024
+ echo Done.
Done.
  Elapsed time: 57.1 s
