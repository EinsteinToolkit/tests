/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az127-371
+ date
Mon Jul 25 17:47:21 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1658771241
+ CACTUS_STARTTIME=1658771241
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.12.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.12.0
Compile date:      Jul 25 2022 (17:20:26)
Run date:          Jul 25 2022 (17:47:22+0000)
Run host:          fv-az127-371.5aj0erdmsgperguxzqs1t2u5da.phxx.internal.cloudapp.net (pid=109128)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az127-371
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7110356KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=043a30b8-b169-c14f-8884-14e5a0e091d2, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.15.0-1014-azure, OSVersion="#17~20.04.1-Ubuntu SMP Thu Jun 23 20:01:51 UTC 2022", HostName=fv-az127-371, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7110356KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=106, CPUModel="Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz", CPUStepping=6)
    L3Cache L#0: (P#-1, size=49152KB, linesize=64, ways=12, Inclusive=0)
      L2Cache L#0: (P#-1, size=1280KB, linesize=64, ways=20, Inclusive=0)
        L1dCache L#0: (P#-1, size=48KB, linesize=64, ways=12, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1280KB, linesize=64, ways=20, Inclusive=0)
        L1dCache L#1: (P#-1, size=48KB, linesize=64, ways=12, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 49152 linesize 64 associativity 12 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1310720 linesize 64 associativity 20 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 50331648 linesize 64 associativity 12 stride 4194304, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.0016467 sec
      iterations=10000000... time=0.0163092 sec
      iterations=100000000... time=0.161881 sec
      iterations=700000000... time=1.13951 sec
      iterations=700000000... time=1.22328 sec
      result: -16.7137 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00361171 sec
      iterations=10000000... time=0.0364613 sec
      iterations=100000000... time=0.366058 sec
      iterations=300000000... time=1.08868 sec
      result: 8.81805 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.0019993 sec
      iterations=10000000... time=0.0228281 sec
      iterations=100000000... time=0.201516 sec
      iterations=500000000... time=1.00336 sec
      result: 7.97323 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*36864 bytes):
      iterations=1000... time=0.000202 sec
      iterations=10000... time=0.0020146 sec
      iterations=100000... time=0.0200877 sec
      iterations=1000000... time=0.203224 sec
      iterations=5000000... time=1.01434 sec
      result: 2.02868 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*983040 bytes):
      iterations=1000... time=0.000605301 sec
      iterations=10000... time=0.00588011 sec
      iterations=100000... time=0.0589088 sec
      iterations=1000000... time=0.587179 sec
      iterations=2000000... time=1.18086 sec
      result: 5.90428 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*37748736 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*36864 bytes):
      iterations=1... time=9.99999e-07 sec
      iterations=10... time=5.8e-06 sec
      iterations=100... time=5.43e-05 sec
      iterations=1000... time=0.000540701 sec
      iterations=10000... time=0.00592501 sec
      iterations=100000... time=0.0542355 sec
      iterations=1000000... time=0.544967 sec
      iterations=2000000... time=1.09636 sec
      result: 67.2479 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*983040 bytes):
      iterations=1... time=2.74e-05 sec
      iterations=10... time=0.0002311 sec
      iterations=100... time=0.0022639 sec
      iterations=1000... time=0.0226121 sec
      iterations=10000... time=0.230145 sec
      iterations=50000... time=1.13654 sec
      result: 43.247 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*37748736 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*36864 bytes):
      iterations=1000... time=3.9e-06 sec
      iterations=10000... time=3.27e-05 sec
      iterations=100000... time=0.000321701 sec
      iterations=1000000... time=0.00320901 sec
      iterations=10000000... time=0.0334559 sec
      iterations=100000000... time=0.326873 sec
      iterations=300000000... time=1.19422 sec
      result: 0.49759 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*983040 bytes):
      iterations=1000... time=2.06e-05 sec
      iterations=10000... time=0.000175201 sec
      iterations=100000... time=0.0017498 sec
      iterations=1000000... time=0.0208302 sec
      iterations=10000000... time=0.232596 sec
      iterations=50000000... time=1.17198 sec
      result: 2.92996 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*37748736 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*36864 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=2.9e-06 sec
      iterations=100... time=2.49e-05 sec
      iterations=1000... time=0.0002446 sec
      iterations=10000... time=0.0024644 sec
      iterations=100000... time=0.02457 sec
      iterations=1000000... time=0.417585 sec
      iterations=3000000... time=0.920046 sec
      iterations=6000000... time=1.9313 sec
      result: 114.526 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*983040 bytes):
      iterations=1... time=4.47e-05 sec
      iterations=10... time=0.000268801 sec
      iterations=100... time=0.0026067 sec
      iterations=1000... time=0.0219797 sec
      iterations=10000... time=0.265624 sec
      iterations=40000... time=1.31987 sec
      result: 29.792 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*37748736 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*13^3 grid points, 1*35152 bytes):
      iterations=1... time=1.44e-05 sec
      iterations=10... time=0.0001442 sec
      iterations=100... time=0.0014791 sec
      iterations=1000... time=0.0153507 sec
      iterations=10000... time=0.279243 sec
      iterations=40000... time=0.754273 sec
      iterations=80000... time=1.53365 sec
      result: 0.114603 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*39^3 grid points, 1*949104 bytes):
      iterations=1... time=0.0001009 sec
      iterations=10... time=0.0014732 sec
      iterations=100... time=0.0144667 sec
      iterations=1000... time=0.219906 sec
      iterations=5000... time=1.03277 sec
      result: 0.287185 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*133^3 grid points, 1*37642192 bytes):
      iterations=1... time=0.0487513 sec
      iterations=10... time=0.682743 sec
      iterations=20... time=1.36252 sec
      result: 0.0345335 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00161025 sec
      iterations=10000000... time=0.0224441 sec
      iterations=100000000... time=0.212845 sec
      iterations=500000000... time=1.07632 sec
      iterations=500000000... time=1.17594 sec
      result: -10.0379 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00360591 sec
      iterations=10000000... time=0.0533381 sec
      iterations=100000000... time=0.498227 sec
      iterations=200000000... time=0.967247 sec
      iterations=400000000... time=1.96825 sec
      result: 6.50323 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00227055 sec
      iterations=10000000... time=0.0303071 sec
      iterations=100000000... time=0.293922 sec
      iterations=400000000... time=1.06504 sec
      result: 6.00916 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*36864 bytes):
      iterations=1000... time=0.0002025 sec
      iterations=10000... time=0.00604166 sec
      iterations=100000... time=0.0242307 sec
      iterations=1000000... time=0.266539 sec
      iterations=4000000... time=1.07036 sec
      result: 2.6759 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*983040 bytes):
      iterations=1000... time=0.000591951 sec
      iterations=10000... time=0.00585601 sec
      iterations=100000... time=0.0890378 sec
      iterations=1000000... time=0.784704 sec
      iterations=2000000... time=1.59621 sec
      result: 7.98105 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*37748736 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*36864 bytes):
      iterations=1... time=9.5e-07 sec
      iterations=10... time=5.75e-06 sec
      iterations=100... time=5.44e-05 sec
      iterations=1000... time=0.000540701 sec
      iterations=10000... time=0.00942307 sec
      iterations=100000... time=0.0803295 sec
      iterations=1000000... time=0.730707 sec
      iterations=2000000... time=1.45412 sec
      result: 50.7028 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*983040 bytes):
      iterations=1... time=3.25e-05 sec
      iterations=10... time=0.00023205 sec
      iterations=100... time=0.002249 sec
      iterations=1000... time=0.0340712 sec
      iterations=10000... time=0.305435 sec
      iterations=40000... time=0.986283 sec
      iterations=80000... time=1.81301 sec
      result: 43.3772 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*37748736 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*36864 bytes):
      iterations=1000... time=4e-06 sec
      iterations=10000... time=3.28e-05 sec
      iterations=100000... time=0.000321501 sec
      iterations=1000000... time=0.00322685 sec
      iterations=10000000... time=0.0323945 sec
      iterations=100000000... time=0.325764 sec
      iterations=300000000... time=0.974286 sec
      iterations=600000000... time=1.9407 sec
      result: 0.404313 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*983040 bytes):
      iterations=1000... time=2.40505e-05 sec
      iterations=10000... time=0.0001863 sec
      iterations=100000... time=0.00182375 sec
      iterations=1000000... time=0.0183201 sec
      iterations=10000000... time=0.182765 sec
      iterations=60000000... time=1.09975 sec
      result: 2.29115 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*37748736 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*36864 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=2.8e-06 sec
      iterations=100... time=2.46e-05 sec
      iterations=1000... time=0.0002423 sec
      iterations=10000... time=0.00242225 sec
      iterations=100000... time=0.0242852 sec
      iterations=1000000... time=0.24428 sec
      iterations=5000000... time=1.22573 sec
      result: 150.375 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*983040 bytes):
      iterations=1... time=2.985e-05 sec
      iterations=10... time=0.0002379 sec
      iterations=100... time=0.00217365 sec
      iterations=1000... time=0.0217405 sec
      iterations=10000... time=0.224008 sec
      iterations=50000... time=1.09421 sec
      result: 44.9199 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*37748736 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*10^3 grid points, 2*16000 bytes):
      iterations=1... time=1.41e-05 sec
      iterations=10... time=0.000131201 sec
      iterations=100... time=0.00124675 sec
      iterations=1000... time=0.0127181 sec
      iterations=10000... time=0.126666 sec
      iterations=90000... time=1.13969 sec
      result: 0.0789691 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*31^3 grid points, 2*476656 bytes):
      iterations=1... time=0.000604951 sec
      iterations=10... time=0.00289755 sec
      iterations=100... time=0.0291566 sec
      iterations=1000... time=0.293088 sec
      iterations=4000... time=1.16582 sec
      result: 0.102214 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*133^3 grid points, 1*37642192 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 1600 nsec
    MPI bandwidth: 5.8018 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Mon Jul 25 17:48:15 UTC 2022
+ echo Done.
Done.
  Elapsed time: 53.8 s
