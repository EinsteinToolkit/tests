/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1251-73
+ date
Wed May 15 22:40:40 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1715812840
+ CACTUS_STARTTIME=1715812840
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      May 15 2024 (22:12:52)
Run date:          May 15 2024 (22:40:41+0000)
Run host:          fv-az1251-73.04bx5wyvw5tenjekzxp54pa3vd.cx.internal.cloudapp.net (pid=140307)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az1251-73
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364604KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=0a98116e-d943-3743-a5d5-fb803c13eb63, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1021-azure, OSVersion="#22~22.04.1-Ubuntu SMP Tue Apr 30 16:08:18 UTC 2024", HostName=fv-az1251-73, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364604KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2-3} P#{2-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.0012417 sec
      iterations=10000000... time=0.0124539 sec
      iterations=100000000... time=0.124006 sec
      iterations=900000000... time=1.11556 sec
      iterations=900000000... time=0.835743 sec
      result: 6.43281 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196921 sec
      iterations=10000000... time=0.0197535 sec
      iterations=100000000... time=0.197363 sec
      iterations=600000000... time=1.18412 sec
      result: 16.2146 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186652 sec
      iterations=10000000... time=0.0185856 sec
      iterations=100000000... time=0.185722 sec
      iterations=600000000... time=1.11572 sec
      result: 8.60428 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000127258 sec
      iterations=10000... time=0.00123727 sec
      iterations=100000... time=0.0123814 sec
      iterations=1000000... time=0.12366 sec
      iterations=9000000... time=1.1131 sec
      result: 1.23678 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000515041 sec
      iterations=10000... time=0.00467728 sec
      iterations=100000... time=0.0465882 sec
      iterations=1000000... time=0.466584 sec
      iterations=2000000... time=0.934972 sec
      iterations=4000000... time=1.86976 sec
      result: 4.67441 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.7e-07 sec
      iterations=10... time=4.568e-06 sec
      iterations=100... time=3.2441e-05 sec
      iterations=1000... time=0.000275183 sec
      iterations=10000... time=0.00246178 sec
      iterations=100000... time=0.0242829 sec
      iterations=1000000... time=0.242268 sec
      iterations=5000000... time=1.21234 sec
      result: 101.358 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.674e-06 sec
      iterations=10... time=6.1996e-05 sec
      iterations=100... time=0.00050908 sec
      iterations=1000... time=0.00521713 sec
      iterations=10000... time=0.0516576 sec
      iterations=100000... time=0.517379 sec
      iterations=200000... time=1.03253 sec
      result: 76.1654 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.416e-06 sec
      iterations=10000... time=3.4875e-05 sec
      iterations=100000... time=0.000255878 sec
      iterations=1000000... time=0.00249527 sec
      iterations=10000000... time=0.0247641 sec
      iterations=100000000... time=0.247525 sec
      iterations=400000000... time=0.99207 sec
      iterations=800000000... time=1.98222 sec
      result: 0.309721 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.3284e-05 sec
      iterations=10000... time=0.000114934 sec
      iterations=100000... time=0.000978106 sec
      iterations=1000000... time=0.00969532 sec
      iterations=10000000... time=0.0952464 sec
      iterations=100000000... time=0.943317 sec
      iterations=200000000... time=1.88882 sec
      result: 1.18051 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.51e-07 sec
      iterations=10... time=4.619e-06 sec
      iterations=100... time=4.0655e-05 sec
      iterations=1000... time=0.000290723 sec
      iterations=10000... time=0.00278547 sec
      iterations=100000... time=0.0277453 sec
      iterations=1000000... time=0.277011 sec
      iterations=4000000... time=1.11345 sec
      result: 88.2878 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=8.296e-06 sec
      iterations=10... time=7.0211e-05 sec
      iterations=100... time=0.000504332 sec
      iterations=1000... time=0.00470938 sec
      iterations=10000... time=0.0469583 sec
      iterations=100000... time=0.470637 sec
      iterations=200000... time=0.9429 sec
      iterations=400000... time=1.8907 sec
      result: 83.1894 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.4035e-05 sec
      iterations=10... time=0.000323995 sec
      iterations=100... time=0.00317177 sec
      iterations=1000... time=0.0315973 sec
      iterations=10000... time=0.320946 sec
      iterations=30000... time=0.962082 sec
      iterations=60000... time=1.91489 sec
      result: 0.054144 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000156432 sec
      iterations=10... time=0.00157072 sec
      iterations=100... time=0.0162488 sec
      iterations=1000... time=0.159577 sec
      iterations=7000... time=1.10689 sec
      result: 0.154237 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00398313 sec
      iterations=10... time=0.0394466 sec
      iterations=100... time=0.394893 sec
      iterations=300... time=1.18739 sec
      result: 0.394369 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00124549 sec
      iterations=10000000... time=0.0123939 sec
      iterations=100000000... time=0.123857 sec
      iterations=900000000... time=1.11509 sec
      iterations=900000000... time=0.835581 sec
      result: 6.4398 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197772 sec
      iterations=10000000... time=0.0197256 sec
      iterations=100000000... time=0.197317 sec
      iterations=600000000... time=1.1839 sec
      result: 16.2176 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187878 sec
      iterations=10000000... time=0.0185805 sec
      iterations=100000000... time=0.185651 sec
      iterations=600000000... time=1.11473 sec
      result: 8.61191 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000129312 sec
      iterations=10000... time=0.00124981 sec
      iterations=100000... time=0.0123818 sec
      iterations=1000000... time=0.123777 sec
      iterations=9000000... time=1.11338 sec
      result: 1.23709 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.0005437 sec
      iterations=10000... time=0.00507621 sec
      iterations=100000... time=0.0499299 sec
      iterations=1000000... time=0.500099 sec
      iterations=2000000... time=1.00121 sec
      result: 5.00604 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.305e-07 sec
      iterations=10... time=3.552e-06 sec
      iterations=100... time=3.5567e-05 sec
      iterations=1000... time=0.000261122 sec
      iterations=10000... time=0.00245811 sec
      iterations=100000... time=0.0242965 sec
      iterations=1000000... time=0.242122 sec
      iterations=5000000... time=1.21309 sec
      result: 101.295 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.1582e-05 sec
      iterations=10... time=9.376e-05 sec
      iterations=100... time=0.000625372 sec
      iterations=1000... time=0.00588415 sec
      iterations=10000... time=0.0523615 sec
      iterations=100000... time=0.511446 sec
      iterations=200000... time=1.02736 sec
      result: 76.5488 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.331e-06 sec
      iterations=10000... time=3.17245e-05 sec
      iterations=100000... time=0.000259715 sec
      iterations=1000000... time=0.00247743 sec
      iterations=10000000... time=0.0247414 sec
      iterations=100000000... time=0.248376 sec
      iterations=400000000... time=0.990262 sec
      iterations=800000000... time=1.981 sec
      result: 0.309532 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=3.19295e-05 sec
      iterations=10000... time=0.000164321 sec
      iterations=100000... time=0.00106016 sec
      iterations=1000000... time=0.00976958 sec
      iterations=10000000... time=0.095741 sec
      iterations=100000000... time=0.955078 sec
      iterations=200000000... time=1.90398 sec
      result: 1.18999 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=5.06e-07 sec
      iterations=10... time=4.5035e-06 sec
      iterations=100... time=4.03805e-05 sec
      iterations=1000... time=0.000306401 sec
      iterations=10000... time=0.00277688 sec
      iterations=100000... time=0.0277407 sec
      iterations=1000000... time=0.278136 sec
      iterations=4000000... time=1.11292 sec
      result: 88.3296 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.3936e-05 sec
      iterations=10... time=9.1981e-05 sec
      iterations=100... time=0.000612908 sec
      iterations=1000... time=0.00575229 sec
      iterations=10000... time=0.04935 sec
      iterations=100000... time=0.483427 sec
      iterations=200000... time=0.968107 sec
      iterations=400000... time=1.93765 sec
      result: 81.1737 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 646 nsec
    MPI bandwidth: 9.49089 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed May 15 22:41:32 UTC 2024
+ echo Done.
Done.
  Elapsed time: 52.3 s
