/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az137-872
+ date
Sat Apr 24 19:47:42 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1619293662
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Apr 24 2021 (19:39:16)
Run date:          Apr 24 2021 (19:47:43+0000)
Run host:          fv-az137-872.aripajfx3awelhgv3otau1goqd.bx.internal.cloudapp.net (pid=101005)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az137-872
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7121240KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=49bac4f1-c6da-9144-b335-8ce9139300c3, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.4.0-1046-azure, OSVersion="#48-Ubuntu SMP Tue Apr 13 07:18:42 UTC 2021", HostName=fv-az137-872, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7121240KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00301282 sec
      iterations=10000000... time=0.0314995 sec
      iterations=100000000... time=0.320411 sec
      iterations=300000000... time=0.891514 sec
      iterations=600000000... time=1.85995 sec
      iterations=600000000... time=1.39493 sec
      result: 2.58054 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00354062 sec
      iterations=10000000... time=0.0322521 sec
      iterations=100000000... time=0.326519 sec
      iterations=300000000... time=0.978816 sec
      iterations=600000000... time=1.93803 sec
      result: 9.90695 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00199621 sec
      iterations=10000000... time=0.0201031 sec
      iterations=100000000... time=0.210877 sec
      iterations=500000000... time=1.0502 sec
      result: 7.61758 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000130301 sec
      iterations=10000... time=0.00130971 sec
      iterations=100000... time=0.0148869 sec
      iterations=1000000... time=0.148789 sec
      iterations=7000000... time=1.10307 sec
      result: 1.57582 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000548904 sec
      iterations=10000... time=0.00496173 sec
      iterations=100000... time=0.0521222 sec
      iterations=1000000... time=0.46399 sec
      iterations=2000000... time=0.937587 sec
      iterations=4000000... time=1.89627 sec
      result: 4.74069 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=5e-07 sec
      iterations=10... time=3e-06 sec
      iterations=100... time=2.68e-05 sec
      iterations=1000... time=0.000266202 sec
      iterations=10000... time=0.00372243 sec
      iterations=100000... time=0.030039 sec
      iterations=1000000... time=0.30579 sec
      iterations=4000000... time=1.25013 sec
      result: 78.6352 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=6.7e-06 sec
      iterations=10... time=4.33e-05 sec
      iterations=100... time=0.000453603 sec
      iterations=1000... time=0.00478693 sec
      iterations=10000... time=0.0535376 sec
      iterations=100000... time=0.467784 sec
      iterations=200000... time=0.917645 sec
      iterations=400000... time=1.86827 sec
      result: 42.0941 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.8e-06 sec
      iterations=10000... time=4.8e-05 sec
      iterations=100000... time=0.000291502 sec
      iterations=1000000... time=0.00275322 sec
      iterations=10000000... time=0.0299499 sec
      iterations=100000000... time=0.313913 sec
      iterations=400000000... time=1.25862 sec
      result: 0.39332 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.1201e-05 sec
      iterations=10000... time=0.000179201 sec
      iterations=100000... time=0.00192561 sec
      iterations=1000000... time=0.0185028 sec
      iterations=10000000... time=0.20198 sec
      iterations=50000000... time=0.957248 sec
      iterations=100000000... time=1.95943 sec
      result: 2.44929 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.3e-06 sec
      iterations=100... time=5.2201e-05 sec
      iterations=1000... time=0.000285502 sec
      iterations=10000... time=0.00320232 sec
      iterations=100000... time=0.0329388 sec
      iterations=1000000... time=0.340828 sec
      iterations=3000000... time=1.01837 sec
      result: 72.3979 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=9.401e-06 sec
      iterations=10... time=9.38e-05 sec
      iterations=100... time=0.000955607 sec
      iterations=1000... time=0.00977037 sec
      iterations=10000... time=0.0978687 sec
      iterations=100000... time=0.950405 sec
      iterations=200000... time=1.94646 sec
      result: 20.2016 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.86e-05 sec
      iterations=10... time=0.000273002 sec
      iterations=100... time=0.00286852 sec
      iterations=1000... time=0.0310194 sec
      iterations=10000... time=0.309419 sec
      iterations=40000... time=1.25921 sec
      result: 0.0548915 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=3.01e-05 sec
      iterations=10... time=0.00110171 sec
      iterations=100... time=0.0103242 sec
      iterations=1000... time=0.103362 sec
      iterations=10000... time=1.03424 sec
      result: 0.117642 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00733975 sec
      iterations=10... time=0.0696156 sec
      iterations=100... time=0.704554 sec
      iterations=200... time=1.4215 sec
      result: 0.346165 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00323622 sec
      iterations=10000000... time=0.0323682 sec
      iterations=100000000... time=0.321655 sec
      iterations=300000000... time=0.954519 sec
      iterations=600000000... time=1.94343 sec
      iterations=600000000... time=1.46258 sec
      result: 2.49559 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00333942 sec
      iterations=10000000... time=0.0346312 sec
      iterations=100000000... time=0.342409 sec
      iterations=300000000... time=1.01624 sec
      result: 9.4466 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00216401 sec
      iterations=10000000... time=0.0226983 sec
      iterations=100000000... time=0.221375 sec
      iterations=500000000... time=1.10333 sec
      result: 7.25081 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000188851 sec
      iterations=10000... time=0.00170181 sec
      iterations=100000... time=0.0171017 sec
      iterations=1000000... time=0.166075 sec
      iterations=7000000... time=1.12693 sec
      result: 1.60989 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000474504 sec
      iterations=10000... time=0.00602729 sec
      iterations=100000... time=0.0486477 sec
      iterations=1000000... time=0.487298 sec
      iterations=2000000... time=0.961584 sec
      iterations=4000000... time=1.90867 sec
      result: 4.77167 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7.5e-07 sec
      iterations=10... time=3.4e-06 sec
      iterations=100... time=3.005e-05 sec
      iterations=1000... time=0.000315552 sec
      iterations=10000... time=0.00310012 sec
      iterations=100000... time=0.0297635 sec
      iterations=1000000... time=0.308716 sec
      iterations=4000000... time=1.22485 sec
      result: 80.2577 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=2.54e-05 sec
      iterations=10... time=4.225e-05 sec
      iterations=100... time=0.000541303 sec
      iterations=1000... time=0.00477983 sec
      iterations=10000... time=0.044512 sec
      iterations=100000... time=0.465303 sec
      iterations=200000... time=0.930106 sec
      iterations=400000... time=1.83664 sec
      result: 42.8191 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=4.35e-06 sec
      iterations=10000... time=3.92505e-05 sec
      iterations=100000... time=0.000317152 sec
      iterations=1000000... time=0.00330062 sec
      iterations=10000000... time=0.032699 sec
      iterations=100000000... time=0.34706 sec
      iterations=300000000... time=0.958713 sec
      iterations=600000000... time=1.89694 sec
      result: 0.395196 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.195e-05 sec
      iterations=10000... time=0.000214252 sec
      iterations=100000... time=0.00212887 sec
      iterations=1000000... time=0.0197022 sec
      iterations=10000000... time=0.195398 sec
      iterations=60000000... time=1.17673 sec
      result: 2.45151 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8.5e-07 sec
      iterations=10... time=3.5e-06 sec
      iterations=100... time=2.8851e-05 sec
      iterations=1000... time=0.000301002 sec
      iterations=10000... time=0.00282057 sec
      iterations=100000... time=0.0303314 sec
      iterations=1000000... time=0.32379 sec
      iterations=3000000... time=0.967783 sec
      iterations=6000000... time=1.939 sec
      result: 76.0474 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=9.3e-06 sec
      iterations=10... time=0.000112451 sec
      iterations=100... time=0.00101511 sec
      iterations=1000... time=0.010324 sec
      iterations=10000... time=0.0983616 sec
      iterations=100000... time=0.976079 sec
      iterations=200000... time=2.01344 sec
      result: 19.5295 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=7.1e-06 sec
      iterations=10... time=3.72e-05 sec
      iterations=100... time=0.000327802 sec
      iterations=1000... time=0.00333492 sec
      iterations=10000... time=0.039786 sec
      iterations=100000... time=0.353925 sec
      iterations=300000... time=1.05792 sec
      result: 0.206726 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=2.68505e-05 sec
      iterations=10... time=0.000166601 sec
      iterations=100... time=0.00165686 sec
      iterations=1000... time=0.0169862 sec
      iterations=10000... time=0.175692 sec
      iterations=60000... time=1.0686 sec
      result: 0.327456 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00164806 sec
      iterations=10... time=0.0236018 sec
      iterations=100... time=0.237676 sec
      iterations=500... time=1.15835 sec
      result: 1.06202 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Sat Apr 24 19:48:53 UTC 2021
+ echo Done.
Done.
  Elapsed time: 70.1 s
