/home/mojam/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/mojam/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl/output-0000-active
+ hostname
PC-0ne
+ date
Thu Oct  8 11:00:51 EDT 2020
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1602169251
+ [ 2 = 1 ]
+ mpirun -np 2 /home/mojam/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/mojam/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
--------------------------------------------------------------------------
WARNING: Linux kernel CMA support was requested via the
btl_vader_single_copy_mechanism MCA variable, but CMA support is
not available due to restrictive ptrace settings.

The vader shared memory BTL will fall back on another single-copy
mechanism if one is available. This may result in lower performance.

  Local host: PC-0ne
--------------------------------------------------------------------------
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.8.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.8.0
Compile date:      Oct 08 2020 (10:14:36)
Run date:          Oct 08 2020 (11:00:53-0400)
Run host:          PC-0ne.localdomain (pid=11524)
Working directory: /home/mojam/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Executable:        /home/mojam/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/mojam/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->CycleClock Fortran hwloc MPI IOUtil InitBase LoopControl Carpet CarpetLib CarpetReduce Boundary CartGrid3D CoordBase SymBase MoL NaNChecker Time ADMBase ADMCoupling ADMMacros CoordGauge StaticConformal GenericFD ML_BSSN ML_BSSN_Helper TmunuBase CarpetIOBasic CarpetIOASCII <---
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMCoupling...Success -> active implementation ADMCoupling
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::lc_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          ADMBase::ADMBase_CartesianMinkowski: Set the metric and extrinsic curvature to cartesian minkowski values
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::lc_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::lc_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::lc_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::lc_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 2.58 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.322996 ns per clock tick (3.09601 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 1.11.9, API version 0x10b06
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 2 threads, this is thread 0
INFO (Carpet): There are 4 threads in total
INFO (Carpet): There are 2 threads per process
INFO (Carpet): This process runs on host PC-0ne, pid=11524
INFO (Carpet): This process runs on 8 cores: 0-7
INFO (Carpet): Thread 0 runs on 8 cores: 0-7
INFO (Carpet): Thread 1 runs on 8 cores: 0-7
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent: [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent: [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   base_spacing   : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent   : [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent   : [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   spacing           : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [35,35,35]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 780 grid functions in 52 groups
INFO (Carpet):    There are 72 grid scalars in 24 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::alp
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
WARNING[L1,P1] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 235. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 235. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 235. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 235. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 235. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 235. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 235. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
[1mWARNING[L1,P0] (ML_BSSN_Helper):[0m Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
WARNING[L1,P0] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e-02  dy=>3.3333333e-02  dz=>3.3333333e-02
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.067, 1.067]  y=>[-0.067, 1.067]  z=>[-0.067, 1.067]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,34]  y=>[0,34]  z=>[0,34]
INFO (Time): Timestep set to 0.0133333 (courant_static)
Memory statistics from CarpetLib:
   Current number of objects: 263
   Current allocated memory:  39.6 MB
   Maximum number of objects: 265
   Maximum allocated memory:  39.9 MB
   Current administrative memory: 0.375 MB
   Total allocated used system memory: 52.8 MB
   Total allocated free system memory: 1.38 MB
   gh::allmemory:    22608
   dh::allmemory:    268800
   th::allmemory:    6168
   ggf::allmemory:   61744
   gdata::allmemory: 15280
-----------------------------------------------
Iteration      Time |              ADMBASE::alp
                    |      minimum      maximum
-----------------------------------------------
        0     0.000 |    1.0000000    1.0000000
Memory statistics from CarpetLib:
   Current number of objects: 263
   Current allocated memory:  39.6 MB
   Maximum number of objects: 289
   Maximum allocated memory:  44.8 MB
   Current administrative memory: 0.375 MB
   Total allocated used system memory: 52.9 MB
   Total allocated free system memory: 11.8 MB
   gh::allmemory:    22608
   dh::allmemory:    268832
   th::allmemory:    6168
   ggf::allmemory:   62096
   gdata::allmemory: 15280
       10     0.133 |    1.0000000    1.0000000
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00204200 |       0.00000000 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10016300 |       0.15625000 |   0.00004358 |        0.00004358 |        0.00000000 |        0.00004358 |        0.00004358 
LoopControl     | Set up LoopControl                      |          0.00002400 |       0.00000000 |   0.00001479 |        0.00001479 |        0.00000000 |        0.00001479 |        0.00001479 
ML_BSSN_Helper  | Set checkpointing and prolongation group|          0.00008500 |       0.00000000 |   0.00008395 |        0.00008395 |        0.00000000 |        0.00008395 |        0.00008395 
CarpetReduce    | Startup routine                         |          0.00011400 |       0.00000000 |   0.00011361 |        0.00011361 |        0.00000000 |        0.00011361 |        0.00011361 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00001000 |       0.00000000 |   0.00000914 |        0.00000914 |        0.00000000 |        0.00000914 |        0.00000914 
CoordBase       | Register a GH extension to store the coo|          0.00000900 |       0.00000000 |   0.00001002 |        0.00001002 |        0.00000000 |        0.00001002 |        0.00001002 
Timers          | Prepare hierarchical timers             |          0.00006700 |       0.00000000 |   0.00006712 |        0.00006712 |        0.00000000 |        0.00006712 |        0.00006712 
Carpet          | Startup routine                         |          0.00001100 |       0.00000000 |   0.00001112 |        0.00001112 |        0.00000000 |        0.00001112 |        0.00001112 
IOUtil          | Startup routine                         |          0.00002100 |       0.00000000 |   0.00002224 |        0.00002224 |        0.00000000 |        0.00002224 |        0.00002224 
ML_BSSN         | create banner                           |          0.00001000 |       0.00000000 |   0.00000881 |        0.00000881 |        0.00000000 |        0.00000881 |        0.00000881 
ML_BSSN_Helper  | Register slicing                        |          0.00000800 |       0.00000000 |   0.00000767 |        0.00000767 |        0.00000000 |        0.00000767 |        0.00000767 
CarpetIOASCII   | Startup routine                         |          0.00014200 |       0.00000000 |   0.00014147 |        0.00014147 |        0.00000000 |        0.00014147 |        0.00014147 
MoL             | Startup banner                          |          0.00000900 |       0.00000000 |   0.00001009 |        0.00001009 |        0.00000000 |        0.00001009 |        0.00001009 
SymBase         | Register GH Extension for SymBase       |          0.00001500 |       0.00000000 |   0.00001457 |        0.00001457 |        0.00000000 |        0.00001457 |        0.00001457 
CarpetIOBasic   | Startup routine                         |          0.00001800 |       0.00000000 |   0.00001714 |        0.00001714 |        0.00000000 |        0.00001714 |        0.00001714 
Vectors         | Print startup message                   |          0.00004900 |       0.00000000 |   0.00005013 |        0.00005013 |        0.00000000 |        0.00005013 |        0.00005013 
hwloc           | Output hwloc version                    |          0.00003500 |       0.00000000 |   0.00003496 |        0.00003496 |        0.00000000 |        0.00003496 |        0.00003496 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10283200 |       0.15625000 |   0.00066043 |        0.00066043 |        0.00000000 |        0.00066043 |        0.00066043 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00013500 |       0.00000000 |   0.00013442 |        0.00013442 |        0.00000000 |        0.00013442 |        0.00013442 
Boundary        | Register boundary conditions that this t|          0.00006800 |       0.00000000 |   0.00006827 |        0.00006827 |        0.00000000 |        0.00006827 |        0.00006827 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00021100 |       0.00000000 |   0.00021037 |        0.00021037 |        0.00000000 |        0.00021037 |        0.00021037 
CoordGauge      | Initialize slicing, setup priorities for|          0.00006300 |       0.00000000 |   0.00006296 |        0.00006296 |        0.00000000 |        0.00006296 |        0.00006296 
CoordGauge      | Identify the slicing for the next iterat|          0.00005600 |       0.00000000 |   0.00005610 |        0.00005610 |        0.00000000 |        0.00005610 |        0.00005610 
ML_BSSN_Helper  | Handle parameter backward compatibility |          0.00015900 |       0.00000000 |   0.00015886 |        0.00015886 |        0.00000000 |        0.00015886 |        0.00015886 
MoL             | Set up the MoL bookkeeping index arrays |          0.00011300 |       0.00000000 |   0.00011317 |        0.00011317 |        0.00000000 |        0.00011317 |        0.00011317 
MoL             | Set the flag so it is ok to register wit|          0.00006900 |       0.00000000 |   0.00006886 |        0.00006886 |        0.00000000 |        0.00006886 |        0.00006886 
TmunuBase       | Set the stress_energy_state variable    |          0.00034300 |       0.00000000 |   0.00034266 |        0.00034266 |        0.00000000 |        0.00034266 |        0.00034266 
ML_BSSN         | Register Variables for MoL              |          0.00026700 |       0.00000000 |   0.00026651 |        0.00026651 |        0.00000000 |        0.00026651 |        0.00026651 
ML_BSSN_Helper  | Register ADMBase variables as constraine|          0.00017400 |       0.00000000 |   0.00017331 |        0.00017331 |        0.00000000 |        0.00017331 |        0.00017331 
CartGrid3D      | Register symmetry boundaries            |          0.00013800 |       0.00000000 |   0.00013757 |        0.00013757 |        0.00000000 |        0.00013757 |        0.00013757 
ML_BSSN         | register symmetries                     |          0.00018900 |       0.00000000 |   0.00018842 |        0.00018842 |        0.00000000 |        0.00018842 |        0.00018842 
SymBase         | Print symmetry boundary face description|          0.00005900 |       0.00000000 |   0.00005800 |        0.00005800 |        0.00000000 |        0.00005800 |        0.00005800 
MoL             | Report how many of each type of variable|          0.00031600 |       0.00000000 |   0.00031618 |        0.00031618 |        0.00000000 |        0.00031618 |        0.00031618 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00236000 |       0.00000000 |   0.00235566 |        0.00235566 |        0.00000000 |        0.00235566 |        0.00235566 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00008100 |       0.00000000 |   0.00008026 |        0.00008026 |        0.00000000 |        0.00008026 |        0.00008026 
Boundary        | Check dimension of grid variables       |          0.00004600 |       0.00000000 |   0.00004607 |        0.00004607 |        0.00000000 |        0.00004607 |        0.00004607 
Carpet          | Parameter checking routine              |          0.00007400 |       0.00000000 |   0.00007385 |        0.00007385 |        0.00000000 |        0.00007385 |        0.00007385 
CarpetLib       | Test prolongation operators             |          0.00008200 |       0.00000000 |   0.00008252 |        0.00008252 |        0.00000000 |        0.00008252 |        0.00008252 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00005100 |       0.00000000 |   0.00005018 |        0.00005018 |        0.00000000 |        0.00005018 |        0.00005018 
Fortran         | Test whether Fortran parameters work cor|          0.00006000 |       0.00000000 |   0.00006043 |        0.00006043 |        0.00000000 |        0.00006043 |        0.00006043 
ML_BSSN_Helper  | Check parameters                        |          0.00021600 |       0.00000000 |   0.00021523 |        0.00021523 |        0.00000000 |        0.00021523 |        0.00021523 
MoL             | Basic parameter checking                |          0.00005200 |       0.00000000 |   0.00005200 |        0.00005200 |        0.00000000 |        0.00005200 |        0.00005200 
Vectors         | Run correctness tests.                  |          0.00066100 |       0.00000000 |   0.00066384 |        0.00066384 |        0.00000000 |        0.00066384 |        0.00066384 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00132300 |       0.00000000 |   0.00132439 |        0.00132439 |        0.00000000 |        0.00132439 |        0.00132439 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00023300 |       0.00000000 |   0.00023330 |        0.00023330 |        0.00000000 |        0.00023330 |        0.00023330 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00021800 |       0.00000000 |   0.00021822 |        0.00021822 |        0.00000000 |        0.00021822 |        0.00021822 
ADMBase         | Set the dtshift_state variable to 1     |          0.00018800 |       0.00000000 |   0.00018758 |        0.00018758 |        0.00000000 |        0.00018758 |        0.00018758 
ADMMacros       | Initialize the local_spatial_order      |          0.00019200 |       0.00000000 |   0.00019050 |        0.00019050 |        0.00000000 |        0.00019050 |        0.00019050 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00045400 |       0.00000000 |   0.00045371 |        0.00045371 |        0.00000000 |        0.00045371 |        0.00045371 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00132600 |       0.00000000 |   0.00132593 |        0.00132593 |        0.00000000 |        0.00132593 |        0.00132593 
CarpetReduce    | Allocate the weight function            |          0.00038400 |       0.00000000 |   0.00038284 |        0.00038284 |        0.00000000 |        0.00038284 |        0.00038284 
CarpetReduce    | Initialise the weight function          |          0.00396100 |       0.00000000 |   0.00396126 |        0.00396126 |        0.00000000 |        0.00396126 |        0.00396126 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00748500 |       0.03125000 |   0.00748474 |        0.00748474 |        0.00000000 |        0.00748474 |        0.00748474 
CarpetReduce    | Set up the weight function for the restr|          0.00031800 |       0.00000000 |   0.00031676 |        0.00031676 |        0.00000000 |        0.00031676 |        0.00031676 
CarpetReduce    | Set the weight function                 |          0.00407300 |       0.00000000 |   0.00407296 |        0.00407296 |        0.00000000 |        0.00407296 |        0.00407296 
CarpetReduce    | Test the weight function                |          0.00073600 |       0.00000000 |   0.00073534 |        0.00073534 |        0.00000000 |        0.00073534 |        0.00073534 
ML_BSSN         | check boundaries treatment              |          0.00017900 |       0.00000000 |   0.00017880 |        0.00017880 |        0.00000000 |        0.00017880 |        0.00017880 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00009700 |       0.00000000 |   0.00009696 |        0.00009696 |        0.00000000 |        0.00009696 |        0.00009696 
SymBase         | Check whether the driver set up the grid|          0.00014200 |       0.00000000 |   0.00014141 |        0.00014141 |        0.00000000 |        0.00014141 |        0.00014141 
Time            | Initialise Time variables               |          0.00008900 |       0.00000000 |   0.00008955 |        0.00008955 |        0.00000000 |        0.00008955 |        0.00008955 
Time            | Set timestep based on Courant condition |          0.00019300 |       0.00000000 |   0.00019430 |        0.00019430 |        0.00000000 |        0.00019430 |        0.00019430 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.02026800 |       0.03125000 |   0.02026418 |        0.02026418 |        0.00000000 |        0.02026418 |        0.02026418 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00020100 |       0.00000000 |   0.00019873 |        0.00019873 |        0.00000000 |        0.00019873 |        0.00019873 
ADMBase         | Set the metric and extrinsic curvature t|          0.00149600 |       0.00000000 |   0.00149558 |        0.00149558 |        0.00000000 |        0.00149558 |        0.00149558 
ADMBase         | Set the lapse to 1 at all points        |          0.00026400 |       0.00000000 |   0.00026384 |        0.00026384 |        0.00000000 |        0.00026384 |        0.00026384 
ADMBase         | Set the shift to 0 at all points        |          0.00043100 |       0.00000000 |   0.00042995 |        0.00042995 |        0.00000000 |        0.00042995 |        0.00042995 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00022100 |       0.00000000 |   0.00022075 |        0.00022075 |        0.00000000 |        0.00022075 |        0.00022075 
ADMBase         | Set the dtshift to 0 at all points      |          0.00045100 |       0.03125000 |   0.00045038 |        0.00045038 |        0.00000000 |        0.00045038 |        0.00045038 
CarpetIOASCII   | Initialisation routine                  |          0.00010100 |       0.00000000 |   0.00010149 |        0.00010149 |        0.00000000 |        0.00010149 |        0.00010149 
CarpetIOBasic   | Initialisation routine                  |          0.00008900 |       0.00000000 |   0.00008846 |        0.00008846 |        0.00000000 |        0.00008846 |        0.00008846 
ML_BSSN         | ML_BSSN_InitialADMBase1Everywhere       |          0.00408000 |       0.00000000 |   0.00408175 |        0.00408175 |        0.00000000 |        0.00408175 |        0.00408175 
ML_BSSN         | ML_BSSN_InitialADMBase2BoundaryScalar   |          0.00833900 |       0.00000000 |   0.00834003 |        0.00834003 |        0.00000000 |        0.00834003 |        0.00834003 
MoL             | Initialise the step size control        |          0.00007500 |       0.00000000 |   0.00007381 |        0.00007381 |        0.00000000 |        0.00007381 |        0.00007381 
ML_BSSN         | ML_BSSN_InitialADMBase2Interior         |          0.00770100 |       0.03125000 |   0.00769975 |        0.00769975 |        0.00000000 |        0.00769975 |        0.00769975 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.02344900 |       0.06250000 |   0.02344455 |        0.02344455 |        0.00000000 |        0.02344455 |        0.02344455 
==================================================================================================================================================================================================
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.00337600 |       0.00000000 |   0.00337516 |        0.00337516 |        0.00000000 |        0.00337516 |        0.00337516 
ADMBase         | Select ADMBase boundary conditions - may|          0.00472600 |       0.00000000 |   0.00472629 |        0.00472629 |        0.00000000 |        0.00472629 |        0.00472629 
Boundary        | Apply all requested local physical bound|          0.00267700 |       0.00000000 |   0.00267576 |        0.00053515 |        0.00073505 |        0.00016641 |        0.00102685 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00075900 |       0.00000000 |   0.00075952 |        0.00015190 |        0.00006341 |        0.00012792 |        0.00020293 
Boundary        | Unselect all grid variables for boundary|          0.00026100 |       0.00000000 |   0.00025795 |        0.00005159 |        0.00002872 |        0.00004278 |        0.00007627 
ML_BSSN         | select boundary conditions              |          0.00328900 |       0.01562500 |   0.00328142 |        0.00328142 |        0.00000000 |        0.00328142 |        0.00328142 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.00480200 |       0.00000000 |   0.00480305 |        0.00480305 |        0.00000000 |        0.00480305 |        0.00480305 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.01163500 |       0.03125000 |   0.01163364 |        0.01163364 |        0.00000000 |        0.01163364 |        0.01163364 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.00412200 |       0.00000000 |   0.00411843 |        0.00411843 |        0.00000000 |        0.00411843 |        0.00411843 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00009900 |       0.00000000 |   0.00009779 |        0.00009779 |        0.00000000 |        0.00009779 |        0.00009779 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00180300 |       0.00000000 |   0.00180411 |        0.00180411 |        0.00000000 |        0.00180411 |        0.00180411 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00046500 |       0.00000000 |   0.00046510 |        0.00046510 |        0.00000000 |        0.00046510 |        0.00046510 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.00931100 |       0.03125000 |   0.00930711 |        0.00930711 |        0.00000000 |        0.00930711 |        0.00930711 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00057400 |       0.00000000 |   0.00057443 |        0.00057443 |        0.00000000 |        0.00057443 |        0.00057443 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.04789900 |       0.07812500 |   0.04787977 |        0.04492519 |        0.00082718 |        0.04452365 |        0.04549259 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00167900 |       0.03125000 |   0.00167137 |        0.00016714 |        0.00010740 |        0.00010363 |        0.00021920 
LoopControl     | Update LoopControl algorithm preferences|          0.00213400 |       0.00000000 |   0.00213385 |        0.00021338 |        0.00010704 |        0.00017505 |        0.00026963 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00109900 |       0.00000000 |   0.00110234 |        0.00011023 |        0.00005413 |        0.00008403 |        0.00013937 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00491200 |       0.03125000 |   0.00490755 |        0.00049076 |        0.00026856 |        0.00036270 |        0.00062820 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00063300 |       0.00000000 |   0.00062014 |        0.00006201 |        0.00006164 |        0.00004313 |        0.00010865 
MoL             | Set the counter for the ODE method to lo|          0.00060600 |       0.00000000 |   0.00060624 |        0.00006062 |        0.00005936 |        0.00004291 |        0.00011062 
MoL             | Ensure the correct time and timestep are|          0.00054300 |       0.00000000 |   0.00054356 |        0.00005436 |        0.00004543 |        0.00003712 |        0.00009019 
MoL             | Allocate storage for scratch levels     |          0.00143900 |       0.00000000 |   0.00143545 |        0.00014354 |        0.00028311 |        0.00008786 |        0.00040453 
MoL             | Allocate sufficient space for array scra|          0.00170100 |       0.00000000 |   0.00170178 |        0.00017018 |        0.00009644 |        0.00012553 |        0.00021474 
MoL             | Ensure the data is in the correct timele|          0.02427700 |       0.03125000 |   0.02427575 |        0.00242758 |        0.00110298 |        0.00187880 |        0.00297502 
MoL             | Initialise the RHS functions            |          0.04219200 |       0.09375000 |   0.04218301 |        0.00105458 |        0.00120044 |        0.00083074 |        0.00197616 
ML_BSSN         | ML_BSSN_EvolutionBoundaryScalar         |          0.35762900 |       0.73437500 |   0.35762226 |        0.00894056 |        0.00891545 |        0.00703860 |        0.01233090 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy1       |          0.26561700 |       0.56250000 |   0.26558684 |        0.00663967 |        0.00726817 |        0.00450437 |        0.00868381 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy2       |          0.42896800 |       0.78125000 |   0.42896657 |        0.01072416 |        0.01029071 |        0.00691327 |        0.01384755 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy3       |          0.50421500 |       0.98437500 |   0.50420955 |        0.01260524 |        0.01207855 |        0.00849175 |        0.01576643 
MoL             | Updates calculated with the efficient Ru|          0.14683800 |       0.31250000 |   0.14683087 |        0.00367077 |        0.00848420 |        0.00251308 |        0.01106671 
MoL             | Alter the counter number                |          0.00228500 |       0.00000000 |   0.00228112 |        0.00005703 |        0.00005489 |        0.00003578 |        0.00007551 
MoL             | If necessary, change the time           |          0.00202600 |       0.00000000 |   0.00202067 |        0.00005052 |        0.00003846 |        0.00003562 |        0.00006609 
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.11745900 |       0.12500000 |   0.11745972 |        0.00293649 |        0.00215762 |        0.00228456 |        0.00379622 
ADMBase         | Select ADMBase boundary conditions - may|          0.22979800 |       0.40625000 |   0.22980273 |        0.00574507 |        0.04983882 |        0.00095307 |        0.02233878 
Boundary        | Apply all requested local physical bound|          0.07085800 |       0.12500000 |   0.07088667 |        0.00050633 |        0.00441216 |        0.00012488 |        0.00164839 
CartGrid3D      | Apply symmetry boundary conditions      |          0.02469300 |       0.01562500 |   0.02469867 |        0.00017642 |        0.00043498 |        0.00010050 |        0.00028466 
Boundary        | Unselect all grid variables for boundary|          0.00762600 |       0.00000000 |   0.00762341 |        0.00005445 |        0.00015448 |        0.00002686 |        0.00013007 
ML_BSSN         | select boundary conditions              |          0.10062700 |       0.23437500 |   0.10063837 |        0.00251596 |        0.01268960 |        0.00087108 |        0.00775959 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.20766900 |       0.32812500 |   0.20765694 |        0.00519142 |        0.00652120 |        0.00336108 |        0.00932600 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.36348200 |       0.75000000 |   0.36349245 |        0.00908731 |        0.00904648 |        0.00708992 |        0.01122562 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.15874600 |       0.29687500 |   0.15872183 |        0.00396805 |        0.00343691 |        0.00265800 |        0.00555430 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00402000 |       0.03125000 |   0.00402445 |        0.00010061 |        0.00010044 |        0.00006922 |        0.00013468 
MoL             | If necessary, change the timestep       |          0.00242300 |       0.00000000 |   0.00243524 |        0.00006088 |        0.00013632 |        0.00004294 |        0.00016478 
MoL             | Control the step size                   |          0.00060300 |       0.00000000 |   0.00060042 |        0.00006004 |        0.00005894 |        0.00004217 |        0.00010811 
MoL             | Restoring the Save and Restore variables|          0.00183300 |       0.00000000 |   0.00183618 |        0.00018362 |        0.00013323 |        0.00012615 |        0.00024225 
MoL             | Free storage for scratch levels         |          0.00118900 |       0.00000000 |   0.00118810 |        0.00011881 |        0.00006928 |        0.00008396 |        0.00014849 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.01708000 |       0.03125000 |   0.01707891 |        0.00170789 |        0.00069334 |        0.00130397 |        0.00195853 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00522000 |       0.03125000 |   0.00522158 |        0.00052216 |        0.00048087 |        0.00033192 |        0.00087078 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.10430600 |       0.21875000 |   0.10429619 |        0.01042962 |        0.00468384 |        0.00808934 |        0.01227754 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00959400 |       0.03125000 |   0.00959439 |        0.00095944 |        0.00250820 |        0.00057800 |        0.00331690 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |          3.20619500 |       6.12500000 |   3.20614006 |        0.09098539 |        0.14753653 |        0.06071616 |        0.14900260 
==================================================================================================================================================================================================
NaNChecker      | Prepare data structures to check for NaN|          0.00062800 |       0.00000000 |   0.00061695 |        0.00005609 |        0.00003824 |        0.00004342 |        0.00007961 
NaNChecker      | Check for NaNs                          |          0.00173500 |       0.00000000 |   0.00173717 |        0.00015792 |        0.00010088 |        0.00011979 |        0.00020187 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00058500 |       0.00000000 |   0.00058697 |        0.00005336 |        0.00003114 |        0.00004177 |        0.00006816 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00172200 |       0.00000000 |   0.00172325 |        0.00015666 |        0.00011171 |        0.00012326 |        0.00021605 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00467000 |       0.00000000 |   0.00466434 |        0.00042403 |        0.00028198 |        0.00032824 |        0.00056569 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00128100 |       0.00000000 |   0.00128420 |        0.00011675 |        0.00009406 |        0.00008212 |        0.00018444 
CarpetLib       | Print memory statistics if desired      |          0.00876600 |       0.01562500 |   0.00876320 |        0.00079665 |        0.00538625 |        0.00008089 |        0.00553634 
LoopControl     | Output LoopControl statistics           |          0.00211900 |       0.00000000 |   0.00211749 |        0.00019250 |        0.00010315 |        0.00015201 |        0.00025412 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.01216600 |       0.01562500 |   0.01216489 |        0.00110590 |        0.00558345 |        0.00031503 |        0.00597490 
==================================================================================================================================================================================================
LoopControl     | Output LoopControl statistics           |          0.00030300 |       0.00000000 |   0.00030269 |        0.00030269 |        0.00000000 |        0.00030269 |        0.00030269 
MoL             | Free the MoL bookkeeping index arrays   |          0.00023800 |       0.00000000 |   0.00023713 |        0.00023713 |        0.00000000 |        0.00023713 |        0.00023713 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00054100 |       0.00000000 |   0.00053982 |        0.00053982 |        0.00000000 |        0.00053982 |        0.00053982 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00042800 |       0.00000000 |   0.00042868 |        0.00042868 |        0.00000000 |        0.00042868 |        0.00042868 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00042800 |       0.00000000 |   0.00042868 |        0.00042868 |        0.00000000 |        0.00042868 |        0.00042868 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          3.57986200 |       6.56250000 |   3.57984779 |        3.57984779 |        0.00000000 |        3.57984779 |        3.57984779 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
[PC-0ne:11519] 1 more process has sent help message help-btl-vader.txt / cma-permission-denied
[PC-0ne:11519] Set MCA parameter "orte_base_help_aggregate" to 0 to see all help / error messages
+ echo Stopping:
Stopping:
+ date
Thu Oct  8 11:00:57 EDT 2020
+ echo Done.
Done.
  Elapsed time: 6.1 s
