/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az137-527
+ date
Thu May 27 16:12:16 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1622131936
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      May 27 2021 (15:46:23)
Run date:          May 27 2021 (16:12:17+0000)
Run host:          fv-az137-527.aripajfx3awelhgv3otau1goqd.bx.internal.cloudapp.net (pid=107252)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az137-527
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7121232KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=b8681334-c193-8a46-83bd-424e04d19188, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.4.0-1047-azure, OSVersion="#49-Ubuntu SMP Thu Apr 22 14:30:37 UTC 2021", HostName=fv-az137-527, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7121232KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=85, CPUModel="Intel(R) Xeon(R) Platinum 8171M CPU @ 2.60GHz", CPUStepping=4)
    L3Cache L#0: (P#-1, size=36608KB, linesize=64, ways=11, Inclusive=0)
      L2Cache L#0: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 16 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 37486592 linesize 64 associativity 11 stride 3407872, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00154561 sec
      iterations=10000000... time=0.0155125 sec
      iterations=100000000... time=0.153198 sec
      iterations=700000000... time=1.08017 sec
      iterations=700000000... time=1.07948 sec
      result: 2031.06 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00352776 sec
      iterations=10000000... time=0.0332042 sec
      iterations=100000000... time=0.344667 sec
      iterations=300000000... time=1.02515 sec
      result: 9.36453 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00203525 sec
      iterations=10000000... time=0.0225715 sec
      iterations=100000000... time=0.230855 sec
      iterations=500000000... time=1.13664 sec
      result: 7.03828 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000161812 sec
      iterations=10000... time=0.00154032 sec
      iterations=100000... time=0.0148468 sec
      iterations=1000000... time=0.153772 sec
      iterations=7000000... time=1.0758 sec
      result: 1.53686 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000842763 sec
      iterations=10000... time=0.00759387 sec
      iterations=100000... time=0.0766426 sec
      iterations=1000000... time=0.760816 sec
      iterations=2000000... time=1.54011 sec
      result: 7.70057 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=8e-07 sec
      iterations=10... time=3.301e-06 sec
      iterations=100... time=3.4402e-05 sec
      iterations=1000... time=0.000340525 sec
      iterations=10000... time=0.00313583 sec
      iterations=100000... time=0.0341638 sec
      iterations=1000000... time=0.348686 sec
      iterations=3000000... time=1.03749 sec
      result: 71.0642 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.0202e-05 sec
      iterations=10... time=0.000207415 sec
      iterations=100... time=0.00195164 sec
      iterations=1000... time=0.0193992 sec
      iterations=10000... time=0.192703 sec
      iterations=60000... time=1.18499 sec
      result: 39.8197 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.9e-06 sec
      iterations=10000... time=3.2703e-05 sec
      iterations=100000... time=0.000318023 sec
      iterations=1000000... time=0.00304953 sec
      iterations=10000000... time=0.0296537 sec
      iterations=100000000... time=0.305481 sec
      iterations=400000000... time=1.20199 sec
      result: 0.375622 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=3.3303e-05 sec
      iterations=10000... time=0.000169613 sec
      iterations=100000... time=0.00183404 sec
      iterations=1000000... time=0.0180523 sec
      iterations=10000000... time=0.181334 sec
      iterations=60000000... time=1.13446 sec
      result: 2.36346 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=2.2e-06 sec
      iterations=100... time=1.8201e-05 sec
      iterations=1000... time=0.000204615 sec
      iterations=10000... time=0.00182934 sec
      iterations=100000... time=0.0181768 sec
      iterations=1000000... time=0.181247 sec
      iterations=6000000... time=1.09515 sec
      result: 134.644 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.4303e-05 sec
      iterations=10... time=0.000335825 sec
      iterations=100... time=0.00331715 sec
      iterations=1000... time=0.0329416 sec
      iterations=10000... time=0.287846 sec
      iterations=40000... time=0.820554 sec
      iterations=80000... time=1.87394 sec
      result: 33.5735 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=3.2802e-05 sec
      iterations=10... time=0.000240518 sec
      iterations=100... time=0.00243218 sec
      iterations=1000... time=0.024359 sec
      iterations=10000... time=0.24332 sec
      iterations=50000... time=1.22908 sec
      result: 0.0702962 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000200915 sec
      iterations=10... time=0.00194084 sec
      iterations=100... time=0.0194605 sec
      iterations=1000... time=0.197385 sec
      iterations=6000... time=1.18482 sec
      result: 0.256511 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00440873 sec
      iterations=10... time=0.0438731 sec
      iterations=100... time=0.44511 sec
      iterations=200... time=0.892764 sec
      iterations=400... time=1.80738 sec
      result: 0.392072 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00147666 sec
      iterations=10000000... time=0.0151553 sec
      iterations=100000000... time=0.151258 sec
      iterations=700000000... time=1.05768 sec
      iterations=700000000... time=1.07197 sec
      result: -97.9949 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00334305 sec
      iterations=10000000... time=0.032901 sec
      iterations=100000000... time=0.340136 sec
      iterations=300000000... time=1.03174 sec
      result: 9.30464 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00228982 sec
      iterations=10000000... time=0.0232519 sec
      iterations=100000000... time=0.233398 sec
      iterations=500000000... time=1.16138 sec
      result: 6.88834 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.00013011 sec
      iterations=10000... time=0.00157892 sec
      iterations=100000... time=0.0149235 sec
      iterations=1000000... time=0.153282 sec
      iterations=7000000... time=1.07639 sec
      result: 1.5377 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000763707 sec
      iterations=10000... time=0.00743465 sec
      iterations=100000... time=0.07551 sec
      iterations=1000000... time=0.750325 sec
      iterations=2000000... time=1.50382 sec
      result: 7.51908 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7.5e-07 sec
      iterations=10... time=4.05e-06 sec
      iterations=100... time=3.7153e-05 sec
      iterations=1000... time=0.000367927 sec
      iterations=10000... time=0.00368142 sec
      iterations=100000... time=0.0352126 sec
      iterations=1000000... time=0.355312 sec
      iterations=3000000... time=1.075 sec
      result: 68.5843 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=2.71525e-05 sec
      iterations=10... time=0.000203166 sec
      iterations=100... time=0.002019 sec
      iterations=1000... time=0.0189336 sec
      iterations=10000... time=0.193536 sec
      iterations=60000... time=1.17258 sec
      result: 40.2412 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.551e-06 sec
      iterations=10000... time=3.0052e-05 sec
      iterations=100000... time=0.000334775 sec
      iterations=1000000... time=0.00321119 sec
      iterations=10000000... time=0.0321653 sec
      iterations=100000000... time=0.318996 sec
      iterations=300000000... time=0.943133 sec
      iterations=600000000... time=1.85926 sec
      result: 0.387347 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=4.1353e-05 sec
      iterations=10000... time=0.000157712 sec
      iterations=100000... time=0.00164907 sec
      iterations=1000000... time=0.0171214 sec
      iterations=10000000... time=0.176771 sec
      iterations=60000000... time=1.05867 sec
      result: 2.20556 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=5.5e-07 sec
      iterations=10... time=1.8e-06 sec
      iterations=100... time=1.4851e-05 sec
      iterations=1000... time=0.000145761 sec
      iterations=10000... time=0.00161257 sec
      iterations=100000... time=0.0166969 sec
      iterations=1000000... time=0.173742 sec
      iterations=6000000... time=1.04791 sec
      result: 140.714 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=3.3502e-05 sec
      iterations=10... time=0.000331425 sec
      iterations=100... time=0.00326879 sec
      iterations=1000... time=0.0326729 sec
      iterations=10000... time=0.245821 sec
      iterations=40000... time=0.752557 sec
      iterations=80000... time=1.5183 sec
      result: 41.4376 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=1.0001e-05 sec
      iterations=10... time=9.2307e-05 sec
      iterations=100... time=0.00093167 sec
      iterations=1000... time=0.00926239 sec
      iterations=10000... time=0.0941774 sec
      iterations=100000... time=0.948298 sec
      iterations=200000... time=1.89567 sec
      result: 0.0769121 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*29^3 grid points, 2*390224 bytes):
      iterations=1... time=0.000141311 sec
      iterations=10... time=0.00120079 sec
      iterations=100... time=0.0120158 sec
      iterations=1000... time=0.119513 sec
      iterations=9000... time=1.0756 sec
      result: 0.204073 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 1050 nsec
    MPI bandwidth: 5.03462 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu May 27 16:13:06 UTC 2021
+ echo Done.
Done.
  Elapsed time: 50.1 s
