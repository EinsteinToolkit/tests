/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1766-572
+ date
Fri Dec 27 23:38:26 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1735342706
+ CACTUS_STARTTIME=1735342706
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Dec 27 2024 (23:31:58)
Run date:          Dec 27 2024 (23:38:27+0000)
Run host:          fv-az1766-572.lyuwioyq51hutffh0ei52p4blg.dx.internal.cloudapp.net (pid=130301)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az1766-572
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364592KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=f83e3d4a-c9ff-5745-a531-846f3951977a, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1025-azure, OSVersion="#26~22.04.1-Ubuntu SMP Thu Jul 11 22:33:04 UTC 2024", HostName=fv-az1766-572, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364592KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00124656 sec
      iterations=10000000... time=0.0125605 sec
      iterations=100000000... time=0.123848 sec
      iterations=900000000... time=1.1145 sec
      iterations=900000000... time=0.835395 sec
      result: 6.44913 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196201 sec
      iterations=10000000... time=0.0197126 sec
      iterations=100000000... time=0.197236 sec
      iterations=600000000... time=1.18408 sec
      result: 16.2151 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00188204 sec
      iterations=10000000... time=0.018581 sec
      iterations=100000000... time=0.185463 sec
      iterations=600000000... time=1.11349 sec
      result: 8.62152 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000124113 sec
      iterations=10000... time=0.00124632 sec
      iterations=100000... time=0.0123604 sec
      iterations=1000000... time=0.123984 sec
      iterations=9000000... time=1.113 sec
      result: 1.23666 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000334939 sec
      iterations=10000... time=0.00301277 sec
      iterations=100000... time=0.0298896 sec
      iterations=1000000... time=0.297257 sec
      iterations=4000000... time=1.18798 sec
      result: 2.96995 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.11e-07 sec
      iterations=10... time=3.186e-06 sec
      iterations=100... time=2.9004e-05 sec
      iterations=1000... time=0.000247365 sec
      iterations=10000... time=0.00244647 sec
      iterations=100000... time=0.024392 sec
      iterations=1000000... time=0.243622 sec
      iterations=5000000... time=1.21827 sec
      result: 100.864 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.244e-06 sec
      iterations=10... time=5.3941e-05 sec
      iterations=100... time=0.000502263 sec
      iterations=1000... time=0.00493621 sec
      iterations=10000... time=0.0488056 sec
      iterations=100000... time=0.487553 sec
      iterations=200000... time=0.973661 sec
      iterations=400000... time=1.95191 sec
      result: 80.5807 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.066e-06 sec
      iterations=10000... time=3.0367e-05 sec
      iterations=100000... time=0.00025057 sec
      iterations=1000000... time=0.00250971 sec
      iterations=10000000... time=0.0247602 sec
      iterations=100000000... time=0.248656 sec
      iterations=400000000... time=0.991908 sec
      iterations=800000000... time=1.98267 sec
      result: 0.309792 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.079e-05 sec
      iterations=10000... time=9.5098e-05 sec
      iterations=100000... time=0.000936117 sec
      iterations=1000000... time=0.00930457 sec
      iterations=10000000... time=0.0935801 sec
      iterations=100000000... time=0.93058 sec
      iterations=200000000... time=1.91985 sec
      result: 1.19991 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.51e-07 sec
      iterations=10... time=3.526e-06 sec
      iterations=100... time=3.6018e-05 sec
      iterations=1000... time=0.000284323 sec
      iterations=10000... time=0.00277635 sec
      iterations=100000... time=0.0276973 sec
      iterations=1000000... time=0.276867 sec
      iterations=4000000... time=1.10728 sec
      result: 88.7794 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.344e-06 sec
      iterations=10... time=5.5705e-05 sec
      iterations=100... time=0.000493867 sec
      iterations=1000... time=0.00471269 sec
      iterations=10000... time=0.0472891 sec
      iterations=100000... time=0.47441 sec
      iterations=200000... time=0.947467 sec
      iterations=400000... time=1.89647 sec
      result: 82.9365 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.9287e-05 sec
      iterations=10... time=0.000306395 sec
      iterations=100... time=0.0030254 sec
      iterations=1000... time=0.0299408 sec
      iterations=10000... time=0.301404 sec
      iterations=40000... time=1.20652 sec
      result: 0.0572887 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000143499 sec
      iterations=10... time=0.0015103 sec
      iterations=100... time=0.0149956 sec
      iterations=1000... time=0.149336 sec
      iterations=7000... time=1.04459 sec
      result: 0.163436 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.0037596 sec
      iterations=10... time=0.0372438 sec
      iterations=100... time=0.359256 sec
      iterations=300... time=1.12929 sec
      result: 0.414657 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.0012957 sec
      iterations=10000000... time=0.0124093 sec
      iterations=100000000... time=0.124365 sec
      iterations=900000000... time=1.12273 sec
      iterations=900000000... time=0.835716 sec
      result: 6.27156 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197416 sec
      iterations=10000000... time=0.0197376 sec
      iterations=100000000... time=0.197282 sec
      iterations=600000000... time=1.18376 sec
      result: 16.2195 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187703 sec
      iterations=10000000... time=0.0185542 sec
      iterations=100000000... time=0.185811 sec
      iterations=600000000... time=1.11477 sec
      result: 8.61164 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124263 sec
      iterations=10000... time=0.00123422 sec
      iterations=100000... time=0.0123668 sec
      iterations=1000000... time=0.123678 sec
      iterations=9000000... time=1.11411 sec
      result: 1.2379 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000488252 sec
      iterations=10000... time=0.00449617 sec
      iterations=100000... time=0.0450804 sec
      iterations=1000000... time=0.451625 sec
      iterations=2000000... time=0.903235 sec
      iterations=4000000... time=1.80427 sec
      result: 4.51066 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=3.805e-07 sec
      iterations=10... time=3.0105e-06 sec
      iterations=100... time=2.97565e-05 sec
      iterations=1000... time=0.000276996 sec
      iterations=10000... time=0.00251736 sec
      iterations=100000... time=0.0244261 sec
      iterations=1000000... time=0.243846 sec
      iterations=5000000... time=1.21933 sec
      result: 100.776 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=7.98e-06 sec
      iterations=10... time=5.74935e-05 sec
      iterations=100... time=0.000535576 sec
      iterations=1000... time=0.00551296 sec
      iterations=10000... time=0.0509292 sec
      iterations=100000... time=0.497578 sec
      iterations=200000... time=0.993144 sec
      iterations=400000... time=2.02363 sec
      result: 77.7248 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.181e-06 sec
      iterations=10000... time=3.12185e-05 sec
      iterations=100000... time=0.000280396 sec
      iterations=1000000... time=0.00248004 sec
      iterations=10000000... time=0.0247384 sec
      iterations=100000000... time=0.247604 sec
      iterations=400000000... time=0.992091 sec
      iterations=800000000... time=1.98129 sec
      result: 0.309576 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=9.879e-06 sec
      iterations=10000... time=9.12005e-05 sec
      iterations=100000... time=0.000889771 sec
      iterations=1000000... time=0.00888498 sec
      iterations=10000000... time=0.0885037 sec
      iterations=100000000... time=0.888727 sec
      iterations=200000000... time=1.80156 sec
      result: 1.12598 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.36e-07 sec
      iterations=10... time=3.4615e-06 sec
      iterations=100... time=3.48205e-05 sec
      iterations=1000... time=0.000306591 sec
      iterations=10000... time=0.00276829 sec
      iterations=100000... time=0.0268747 sec
      iterations=1000000... time=0.268934 sec
      iterations=4000000... time=1.07619 sec
      result: 91.3446 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=8.2805e-06 sec
      iterations=10... time=7.95795e-05 sec
      iterations=100... time=0.000547227 sec
      iterations=1000... time=0.00515664 sec
      iterations=10000... time=0.0500084 sec
      iterations=100000... time=0.484452 sec
      iterations=200000... time=0.981811 sec
      iterations=400000... time=1.93664 sec
      result: 81.2159 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=4.7945e-06 sec
      iterations=10... time=8.4684e-05 sec
      iterations=100... time=0.000845036 sec
      iterations=1000... time=0.0085768 sec
      iterations=10000... time=0.0830366 sec
      iterations=100000... time=0.830423 sec
      iterations=200000... time=1.73487 sec
      result: 0.199208 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=3.8808e-05 sec
      iterations=10... time=0.000389106 sec
      iterations=100... time=0.00388655 sec
      iterations=1000... time=0.0391508 sec
      iterations=10000... time=0.383735 sec
      iterations=30000... time=1.15956 sec
      result: 0.63099 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000895296 sec
      iterations=10... time=0.0103304 sec
      iterations=100... time=0.103591 sec
      iterations=1000... time=1.04759 sec
      result: 1.48998 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri Dec 27 23:39:31 UTC 2024
+ echo Done.
Done.
  Elapsed time: 64.8 s
