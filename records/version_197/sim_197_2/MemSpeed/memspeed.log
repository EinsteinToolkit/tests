/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az136-584
+ date
Fri Dec 10 18:22:52 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1639160572
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.11.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.11.0
Compile date:      Dec 10 2021 (17:56:09)
Run date:          Dec 10 2021 (18:22:52+0000)
Run host:          fv-az136-584.tx1wn0pmd2buhh0jqmoeauzz0d.cx.internal.cloudapp.net (pid=106686)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az136-584
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7118764KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=526c3dc1-a33d-5e43-bceb-5409e7deb01e, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.11.0-1021-azure, OSVersion="#22~20.04.1-Ubuntu SMP Fri Oct 29 01:11:25 UTC 2021", HostName=fv-az136-584, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7118764KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=85, CPUModel="Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz", CPUStepping=7)
    L3Cache L#0: (P#-1, size=36608KB, linesize=64, ways=11, Inclusive=0)
      L2Cache L#0: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 16 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 37486592 linesize 64 associativity 11 stride 3407872, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00133692 sec
      iterations=10000000... time=0.0135117 sec
      iterations=100000000... time=0.134212 sec
      iterations=800000000... time=1.07938 sec
      iterations=800000000... time=1.07374 sec
      result: 283.428 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00297674 sec
      iterations=10000000... time=0.0299119 sec
      iterations=100000000... time=0.299447 sec
      iterations=400000000... time=1.19696 sec
      result: 10.6938 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00185023 sec
      iterations=10000000... time=0.0184542 sec
      iterations=100000000... time=0.184597 sec
      iterations=600000000... time=1.11302 sec
      result: 8.62515 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000135002 sec
      iterations=10000... time=0.00146622 sec
      iterations=100000... time=0.0134074 sec
      iterations=1000000... time=0.1342 sec
      iterations=8000000... time=1.07659 sec
      result: 1.34573 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000817112 sec
      iterations=10000... time=0.0072904 sec
      iterations=100000... time=0.0725727 sec
      iterations=1000000... time=0.721615 sec
      iterations=2000000... time=1.44282 sec
      result: 7.2141 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.4e-06 sec
      iterations=100... time=3.09e-05 sec
      iterations=1000... time=0.000305304 sec
      iterations=10000... time=0.00305684 sec
      iterations=100000... time=0.0307714 sec
      iterations=1000000... time=0.30642 sec
      iterations=4000000... time=1.23215 sec
      result: 79.7823 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.69e-05 sec
      iterations=10... time=0.000181903 sec
      iterations=100... time=0.00173262 sec
      iterations=1000... time=0.0173612 sec
      iterations=10000... time=0.173708 sec
      iterations=60000... time=1.04825 sec
      result: 45.014 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.3e-06 sec
      iterations=10000... time=2.71e-05 sec
      iterations=100000... time=0.000267903 sec
      iterations=1000000... time=0.00268414 sec
      iterations=10000000... time=0.0268115 sec
      iterations=100000000... time=0.269214 sec
      iterations=400000000... time=1.07611 sec
      result: 0.336284 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=3.22e-05 sec
      iterations=10000... time=0.000172903 sec
      iterations=100000... time=0.00166872 sec
      iterations=1000000... time=0.0165816 sec
      iterations=10000000... time=0.166145 sec
      iterations=70000000... time=1.33141 sec
      result: 2.37751 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=2e-06 sec
      iterations=100... time=1.59e-05 sec
      iterations=1000... time=0.000150502 sec
      iterations=10000... time=0.00151112 sec
      iterations=100000... time=0.0150197 sec
      iterations=1000000... time=0.244169 sec
      iterations=5000000... time=1.00106 sec
      result: 122.75 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.23e-05 sec
      iterations=10... time=0.000307604 sec
      iterations=100... time=0.00305384 sec
      iterations=1000... time=0.0282591 sec
      iterations=10000... time=0.313793 sec
      iterations=40000... time=0.980266 sec
      iterations=80000... time=2.05347 sec
      result: 30.6382 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=3.03e-05 sec
      iterations=10... time=0.00822862 sec
      iterations=100... time=0.00226023 sec
      iterations=1000... time=0.0447357 sec
      iterations=10000... time=0.301863 sec
      iterations=40000... time=1.28906 sec
      result: 0.0536206 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000198803 sec
      iterations=10... time=0.00184533 sec
      iterations=100... time=0.0178641 sec
      iterations=1000... time=0.231106 sec
      iterations=5000... time=1.16806 sec
      result: 0.216826 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00413816 sec
      iterations=10... time=0.0534776 sec
      iterations=100... time=0.576689 sec
      iterations=200... time=1.14 sec
      result: 0.310801 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00134667 sec
      iterations=10000000... time=0.0146013 sec
      iterations=100000000... time=0.186312 sec
      iterations=600000000... time=1.09284 sec
      iterations=600000000... time=1.06809 sec
      result: 48.4786 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00298939 sec
      iterations=10000000... time=0.0399711 sec
      iterations=100000000... time=0.403894 sec
      iterations=300000000... time=1.20424 sec
      result: 7.97186 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00585673 sec
      iterations=10000000... time=0.0224364 sec
      iterations=100000000... time=0.240186 sec
      iterations=500000000... time=1.23652 sec
      result: 6.46978 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000134352 sec
      iterations=10000... time=0.00133782 sec
      iterations=100000... time=0.0194861 sec
      iterations=1000000... time=0.174145 sec
      iterations=6000000... time=1.08503 sec
      result: 1.80838 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000748861 sec
      iterations=10000... time=0.0102041 sec
      iterations=100000... time=0.0937082 sec
      iterations=1000000... time=0.890346 sec
      iterations=2000000... time=1.78206 sec
      result: 8.91032 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.35e-06 sec
      iterations=100... time=3.075e-05 sec
      iterations=1000... time=0.000305404 sec
      iterations=10000... time=0.00737051 sec
      iterations=100000... time=0.0424549 sec
      iterations=1000000... time=0.412148 sec
      iterations=3000000... time=1.22067 sec
      result: 60.3997 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=1.965e-05 sec
      iterations=10... time=0.000176102 sec
      iterations=100... time=0.00166377 sec
      iterations=1000... time=0.0244949 sec
      iterations=10000... time=0.218766 sec
      iterations=50000... time=1.09351 sec
      result: 35.9591 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.5e-06 sec
      iterations=10000... time=2.715e-05 sec
      iterations=100000... time=0.000268004 sec
      iterations=1000000... time=0.00269229 sec
      iterations=10000000... time=0.0412032 sec
      iterations=100000000... time=0.358548 sec
      iterations=300000000... time=1.08571 sec
      result: 0.452377 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=3.115e-05 sec
      iterations=10000... time=0.000160452 sec
      iterations=100000... time=0.00557298 sec
      iterations=1000000... time=0.0234781 sec
      iterations=10000000... time=0.195385 sec
      iterations=60000000... time=1.22868 sec
      result: 2.55976 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=6.5e-07 sec
      iterations=10... time=2.15e-06 sec
      iterations=100... time=1.585e-05 sec
      iterations=1000... time=0.000154852 sec
      iterations=10000... time=0.00154517 sec
      iterations=100000... time=0.0235278 sec
      iterations=1000000... time=0.202165 sec
      iterations=5000000... time=1.02379 sec
      result: 120.025 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=3.075e-05 sec
      iterations=10... time=0.000304554 sec
      iterations=100... time=0.00303479 sec
      iterations=1000... time=0.0437674 sec
      iterations=10000... time=0.305155 sec
      iterations=40000... time=1.12966 sec
      result: 27.8467 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=9.1e-06 sec
      iterations=10... time=8.5651e-05 sec
      iterations=100... time=0.000866962 sec
      iterations=1000... time=0.00995319 sec
      iterations=10000... time=0.12213 sec
      iterations=90000... time=1.05296 sec
      result: 0.06231 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*29^3 grid points, 2*390224 bytes):
      iterations=1... time=0.000116752 sec
      iterations=10... time=0.00109907 sec
      iterations=100... time=0.0160367 sec
      iterations=1000... time=0.142 sec
      iterations=8000... time=1.03216 sec
      result: 0.189033 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 1650 nsec
    MPI bandwidth: 4.62004 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri Dec 10 18:23:38 UTC 2021
+ echo Done.
Done.
  Elapsed time: 46.7 s
