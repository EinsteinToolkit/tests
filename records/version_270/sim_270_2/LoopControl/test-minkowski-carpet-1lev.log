/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl/output-0000-active
+ hostname
fv-az200-833
+ date
Wed Jul 20 18:07:58 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ sort
+ env
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1658340478
+ CACTUS_STARTTIME=1658340478
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.12.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.12.0
Compile date:      Jul 20 2022 (17:34:15)
Run date:          Jul 20 2022 (18:07:59+0000)
Run host:          fv-az200-833.swdxaxenvgxe1kqentp15g1mgd.jx.internal.cloudapp.net (pid=109769)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->CycleClock Fortran hwloc MPI IOUtil InitBase LoopControl Carpet CarpetLib CarpetReduce Boundary CartGrid3D CoordBase SymBase MoL NaNChecker Time ADMBase ADMMacros CoordGauge StaticConformal GenericFD ML_BSSN ML_BSSN_Helper TmunuBase CarpetIOBasic CarpetIOASCII<---
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          ADMBase::ADMBase_CartesianMinkowski: Set the metric and extrinsic curvature to cartesian minkowski values
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 1.96 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.417618 ns per clock tick (2.39454 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az200-833, pid=109769
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent: [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent: [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   base_spacing   : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent   : [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent   : [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   spacing           : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [35,35,35]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 770 grid functions in 49 groups
INFO (Carpet):    There are 71 grid scalars in 23 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::alp
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 224. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 224. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 224. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 224. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 224. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
WARNING[L1,P0] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
[1mWARNING[L1,P0] (ML_BSSN_Helper):[0m Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
WARNING[L1,P1] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e-02  dy=>3.3333333e-02  dz=>3.3333333e-02
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.067, 1.067]  y=>[-0.067, 1.067]  z=>[-0.067, 1.067]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,34]  y=>[0,34]  z=>[0,34]
INFO (Time): Timestep set to 0.0133333 (courant_static)
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 264
   Maximum allocated memory:  39.9 MB
   Current administrative memory: 0.364 MB
   Total allocated used system memory: 9.99 MB
   Total allocated free system memory: 0.338 MB
   gh::allmemory:    21856
   dh::allmemory:    259992
   th::allmemory:    5964
   ggf::allmemory:   61380
   gdata::allmemory: 15224
-----------------------------------------------
Iteration      Time |              ADMBASE::alp
                    |      minimum      maximum
-----------------------------------------------
        0     0.000 |    1.0000000    1.0000000
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 288
   Maximum allocated memory:  44.8 MB
   Current administrative memory: 0.365 MB
   Total allocated used system memory: 11.6 MB
   Total allocated free system memory: 9.26 MB
   gh::allmemory:    21856
   dh::allmemory:    260024
   th::allmemory:    5964
   ggf::allmemory:   61732
   gdata::allmemory: 15224
       10     0.133 |    1.0000000    1.0000000
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00139100 |       0.00108000 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10018200 |       0.09945400 |   0.00000673 |        0.00000673 |        0.00000000 |        0.00000673 |        0.00000673 
LoopControl     | Set up LoopControl                      |          0.00000300 |       0.00000300 |   0.00000215 |        0.00000215 |        0.00000000 |        0.00000215 |        0.00000215 
ML_BSSN_Helper  | Set checkpointing and prolongation group|          0.00004000 |       0.00003900 |   0.00004032 |        0.00004032 |        0.00000000 |        0.00004032 |        0.00004032 
CarpetReduce    | Startup routine                         |          0.00003100 |       0.00003000 |   0.00003172 |        0.00003172 |        0.00000000 |        0.00003172 |        0.00003172 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000200 |       0.00000200 |   0.00000197 |        0.00000197 |        0.00000000 |        0.00000197 |        0.00000197 
CoordBase       | Register a GH extension to store the coo|          0.00000200 |       0.00000100 |   0.00000183 |        0.00000183 |        0.00000000 |        0.00000183 |        0.00000183 
Timers          | Prepare hierarchical timers             |          0.00000800 |       0.00000800 |   0.00000784 |        0.00000784 |        0.00000000 |        0.00000784 |        0.00000784 
Carpet          | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000285 |        0.00000285 |        0.00000000 |        0.00000285 |        0.00000285 
IOUtil          | Startup routine                         |          0.00000300 |       0.00000200 |   0.00000277 |        0.00000277 |        0.00000000 |        0.00000277 |        0.00000277 
ML_BSSN         | create banner                           |          0.00000200 |       0.00000200 |   0.00000178 |        0.00000178 |        0.00000000 |        0.00000178 |        0.00000178 
ML_BSSN_Helper  | Register slicing                        |          0.00000200 |       0.00000200 |   0.00000173 |        0.00000173 |        0.00000000 |        0.00000173 |        0.00000173 
CarpetIOASCII   | Startup routine                         |          0.00004000 |       0.00003900 |   0.00004071 |        0.00004071 |        0.00000000 |        0.00004071 |        0.00004071 
MoL             | Startup banner                          |          0.00000100 |       0.00000200 |   0.00000189 |        0.00000189 |        0.00000000 |        0.00000189 |        0.00000189 
SymBase         | Register GH Extension for SymBase       |          0.00000300 |       0.00000200 |   0.00000234 |        0.00000234 |        0.00000000 |        0.00000234 |        0.00000234 
CarpetIOBasic   | Startup routine                         |          0.00000700 |       0.00000700 |   0.00000698 |        0.00000698 |        0.00000000 |        0.00000698 |        0.00000698 
Vectors         | Print startup message                   |          0.00005800 |       0.00001400 |   0.00006017 |        0.00006017 |        0.00000000 |        0.00006017 |        0.00006017 
hwloc           | Output hwloc version                    |          0.00004600 |       0.00001200 |   0.00004716 |        0.00004716 |        0.00000000 |        0.00004716 |        0.00004716 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10182400 |       0.10070200 |   0.00026094 |        0.00026094 |        0.00000000 |        0.00026094 |        0.00026094 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00004400 |       0.00004500 |   0.00004454 |        0.00004454 |        0.00000000 |        0.00004454 |        0.00004454 
Boundary        | Register boundary conditions that this t|          0.00002100 |       0.00002200 |   0.00002136 |        0.00002136 |        0.00000000 |        0.00002136 |        0.00002136 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00007000 |       0.00007000 |   0.00006956 |        0.00006956 |        0.00000000 |        0.00006956 |        0.00006956 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001800 |       0.00001800 |   0.00001758 |        0.00001758 |        0.00000000 |        0.00001758 |        0.00001758 
CoordGauge      | Identify the slicing for the next iterat|          0.00001400 |       0.00001300 |   0.00001347 |        0.00001347 |        0.00000000 |        0.00001347 |        0.00001347 
ML_BSSN_Helper  | Handle parameter backward compatibility |          0.00004200 |       0.00004200 |   0.00004196 |        0.00004196 |        0.00000000 |        0.00004196 |        0.00004196 
MoL             | Set up the MoL bookkeeping index arrays |          0.00008600 |       0.00003500 |   0.00008557 |        0.00008557 |        0.00000000 |        0.00008557 |        0.00008557 
MoL             | Set the flag so it is ok to register wit|          0.00001600 |       0.00001600 |   0.00001562 |        0.00001562 |        0.00000000 |        0.00001562 |        0.00001562 
TmunuBase       | Set the stress_energy_state variable    |          0.00007900 |       0.00007900 |   0.00007870 |        0.00007870 |        0.00000000 |        0.00007870 |        0.00007870 
ML_BSSN         | Register Variables for MoL              |          0.00009000 |       0.00009000 |   0.00009014 |        0.00009014 |        0.00000000 |        0.00009014 |        0.00009014 
ML_BSSN_Helper  | Register ADMBase variables as constraine|          0.00004200 |       0.00004200 |   0.00004164 |        0.00004164 |        0.00000000 |        0.00004164 |        0.00004164 
CartGrid3D      | Register symmetry boundaries            |          0.00004100 |       0.00004100 |   0.00004030 |        0.00004030 |        0.00000000 |        0.00004030 |        0.00004030 
ML_BSSN         | register symmetries                     |          0.00006600 |       0.00006600 |   0.00006530 |        0.00006530 |        0.00000000 |        0.00006530 |        0.00006530 
SymBase         | Print symmetry boundary face description|          0.00001600 |       0.00001600 |   0.00001516 |        0.00001516 |        0.00000000 |        0.00001516 |        0.00001516 
MoL             | Report how many of each type of variable|          0.00036700 |       0.00011800 |   0.00036713 |        0.00036713 |        0.00000000 |        0.00036713 |        0.00036713 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00101200 |       0.00071300 |   0.00100803 |        0.00100803 |        0.00000000 |        0.00100803 |        0.00100803 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001900 |       0.00001800 |   0.00001847 |        0.00001847 |        0.00000000 |        0.00001847 |        0.00001847 
Boundary        | Check dimension of grid variables       |          0.00001300 |       0.00001300 |   0.00001314 |        0.00001314 |        0.00000000 |        0.00001314 |        0.00001314 
Carpet          | Parameter checking routine              |          0.00002400 |       0.00002400 |   0.00002356 |        0.00002356 |        0.00000000 |        0.00002356 |        0.00002356 
CarpetLib       | Test prolongation operators             |          0.00002900 |       0.00003000 |   0.00002930 |        0.00002930 |        0.00000000 |        0.00002930 |        0.00002930 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00001800 |       0.00001700 |   0.00001739 |        0.00001739 |        0.00000000 |        0.00001739 |        0.00001739 
Fortran         | Test whether Fortran parameters work cor|          0.00001400 |       0.00001400 |   0.00001388 |        0.00001388 |        0.00000000 |        0.00001388 |        0.00001388 
ML_BSSN_Helper  | Check parameters                        |          0.00023800 |       0.00009700 |   0.00023804 |        0.00023804 |        0.00000000 |        0.00023804 |        0.00023804 
MoL             | Basic parameter checking                |          0.00001800 |       0.00001700 |   0.00001682 |        0.00001682 |        0.00000000 |        0.00001682 |        0.00001682 
TmunuBase       | Check that no deprecated parameters are |          0.00001900 |       0.00001900 |   0.00001908 |        0.00001908 |        0.00000000 |        0.00001908 |        0.00001908 
Vectors         | Run correctness tests.                  |          0.00023500 |       0.00014500 |   0.00023532 |        0.00023532 |        0.00000000 |        0.00023532 |        0.00023532 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00062700 |       0.00039400 |   0.00062501 |        0.00062501 |        0.00000000 |        0.00062501 |        0.00062501 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00005800 |       0.00005700 |   0.00005718 |        0.00005718 |        0.00000000 |        0.00005718 |        0.00005718 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00004500 |       0.00004400 |   0.00004387 |        0.00004387 |        0.00000000 |        0.00004387 |        0.00004387 
ADMBase         | Set the dtshift_state variable to 1     |          0.00004200 |       0.00004100 |   0.00004159 |        0.00004159 |        0.00000000 |        0.00004159 |        0.00004159 
ADMMacros       | Initialize the local_spatial_order      |          0.00004100 |       0.00003900 |   0.00004155 |        0.00004155 |        0.00000000 |        0.00004155 |        0.00004155 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00051300 |       0.00017100 |   0.00051263 |        0.00051263 |        0.00000000 |        0.00051263 |        0.00051263 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00066900 |       0.00063800 |   0.00066895 |        0.00066895 |        0.00000000 |        0.00066895 |        0.00066895 
CarpetReduce    | Allocate the weight function            |          0.00011300 |       0.00010800 |   0.00011268 |        0.00011268 |        0.00000000 |        0.00011268 |        0.00011268 
CarpetReduce    | Initialise the weight function          |          0.00195800 |       0.00185000 |   0.00195775 |        0.00195775 |        0.00000000 |        0.00195775 |        0.00195775 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00297300 |       0.00004200 |   0.00297240 |        0.00297240 |        0.00000000 |        0.00297240 |        0.00297240 
CarpetReduce    | Set up the weight function for the restr|          0.00007900 |       0.00000000 |   0.00007803 |        0.00007803 |        0.00000000 |        0.00007803 |        0.00007803 
CarpetReduce    | Set the weight function                 |          0.00234500 |       0.00162900 |   0.00234464 |        0.00234464 |        0.00000000 |        0.00234464 |        0.00234464 
CarpetReduce    | Test the weight function                |          0.03113300 |       0.03046800 |   0.03113247 |        0.03113247 |        0.00000000 |        0.03113247 |        0.03113247 
ML_BSSN         | check boundaries treatment              |          0.00009800 |       0.00009300 |   0.00009729 |        0.00009729 |        0.00000000 |        0.00009729 |        0.00009729 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00003100 |       0.00002900 |   0.00002999 |        0.00002999 |        0.00000000 |        0.00002999 |        0.00002999 
SymBase         | Check whether the driver set up the grid|          0.00008300 |       0.00007900 |   0.00008305 |        0.00008305 |        0.00000000 |        0.00008305 |        0.00008305 
Time            | Initialise Time variables               |          0.00002900 |       0.00002700 |   0.00002834 |        0.00002834 |        0.00000000 |        0.00002834 |        0.00002834 
Time            | Set timestep based on Courant condition |          0.00015800 |       0.00005200 |   0.00015817 |        0.00015817 |        0.00000000 |        0.00015817 |        0.00015817 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.04036800 |       0.03536700 |   0.04036057 |        0.04036057 |        0.00000000 |        0.04036057 |        0.04036057 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00005800 |       0.00005500 |   0.00005758 |        0.00005758 |        0.00000000 |        0.00005758 |        0.00005758 
ADMBase         | Set the metric and extrinsic curvature t|          0.00245900 |       0.00230900 |   0.00245839 |        0.00245839 |        0.00000000 |        0.00245839 |        0.00245839 
ADMBase         | Set the lapse to 1 at all points        |          0.00015000 |       0.00014300 |   0.00014993 |        0.00014993 |        0.00000000 |        0.00014993 |        0.00014993 
ADMBase         | Set the shift to 0 at all points        |          0.00041700 |       0.00039600 |   0.00041623 |        0.00041623 |        0.00000000 |        0.00041623 |        0.00041623 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00016300 |       0.00015400 |   0.00016197 |        0.00016197 |        0.00000000 |        0.00016197 |        0.00016197 
ADMBase         | Set the dtshift to 0 at all points      |          0.00039500 |       0.00037500 |   0.00039426 |        0.00039426 |        0.00000000 |        0.00039426 |        0.00039426 
CarpetIOASCII   | Initialisation routine                  |          0.00003600 |       0.00003300 |   0.00003485 |        0.00003485 |        0.00000000 |        0.00003485 |        0.00003485 
CarpetIOBasic   | Initialisation routine                  |          0.00002700 |       0.00002500 |   0.00002656 |        0.00002656 |        0.00000000 |        0.00002656 |        0.00002656 
ML_BSSN         | ML_BSSN_InitialADMBase1Everywhere       |          0.00415800 |       0.00414500 |   0.00415798 |        0.00415798 |        0.00000000 |        0.00415798 |        0.00415798 
ML_BSSN         | ML_BSSN_InitialADMBase2BoundaryScalar   |          0.00953100 |       0.00552200 |   0.00953012 |        0.00953012 |        0.00000000 |        0.00953012 |        0.00953012 
MoL             | Initialise the step size control        |          0.00002100 |       0.00001900 |   0.00001965 |        0.00001965 |        0.00000000 |        0.00001965 |        0.00001965 
ML_BSSN         | ML_BSSN_InitialADMBase2Interior         |          0.01374600 |       0.01358200 |   0.01374522 |        0.01374522 |        0.00000000 |        0.01374522 |        0.01374522 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.03116100 |       0.02675800 |   0.03115273 |        0.03115273 |        0.00000000 |        0.03115273 |        0.03115273 
==================================================================================================================================================================================================
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.00249200 |       0.00213000 |   0.00249096 |        0.00249096 |        0.00000000 |        0.00249096 |        0.00249096 
ADMBase         | Select ADMBase boundary conditions - may|          0.01069300 |       0.01065600 |   0.01069192 |        0.01069192 |        0.00000000 |        0.01069192 |        0.01069192 
Boundary        | Apply all requested local physical bound|          0.00136000 |       0.00129900 |   0.00136017 |        0.00027203 |        0.00046369 |        0.00005411 |        0.00059331 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00022600 |       0.00022100 |   0.00022578 |        0.00004516 |        0.00000789 |        0.00004118 |        0.00005156 
Boundary        | Unselect all grid variables for boundary|          0.00006400 |       0.00005900 |   0.00006226 |        0.00001245 |        0.00000328 |        0.00001133 |        0.00001534 
ML_BSSN         | select boundary conditions              |          0.00151000 |       0.00150900 |   0.00150931 |        0.00150931 |        0.00000000 |        0.00150931 |        0.00150931 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.00634500 |       0.00251900 |   0.00634360 |        0.00634360 |        0.00000000 |        0.00634360 |        0.00634360 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.00962700 |       0.00949800 |   0.00962532 |        0.00962532 |        0.00000000 |        0.00962532 |        0.00962532 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.00397000 |       0.00396500 |   0.00396894 |        0.00396894 |        0.00000000 |        0.00396894 |        0.00396894 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00004000 |       0.00003800 |   0.00003962 |        0.00003962 |        0.00000000 |        0.00003962 |        0.00003962 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00119200 |       0.00112700 |   0.00119188 |        0.00119188 |        0.00000000 |        0.00119188 |        0.00119188 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00833600 |       0.00795100 |   0.00833325 |        0.00833325 |        0.00000000 |        0.00833325 |        0.00833325 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.01280700 |       0.00838400 |   0.01280594 |        0.01280594 |        0.00000000 |        0.01280594 |        0.01280594 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00039000 |       0.00036900 |   0.00038929 |        0.00038929 |        0.00000000 |        0.00038929 |        0.00038929 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.05905200 |       0.04972500 |   0.05903821 |        0.05771965 |        0.00047486 |        0.05749663 |        0.05805022 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00051800 |       0.00051500 |   0.00050972 |        0.00005097 |        0.00001667 |        0.00004367 |        0.00006436 
LoopControl     | Update LoopControl algorithm preferences|          0.00082800 |       0.00081400 |   0.00082941 |        0.00008294 |        0.00004188 |        0.00006081 |        0.00011672 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00024700 |       0.00024900 |   0.00024813 |        0.00002481 |        0.00000681 |        0.00002133 |        0.00002990 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00159300 |       0.00157800 |   0.00158727 |        0.00015873 |        0.00006536 |        0.00012581 |        0.00021098 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00013900 |       0.00013800 |   0.00013676 |        0.00001368 |        0.00000983 |        0.00001100 |        0.00002277 
MoL             | Set the counter for the ODE method to lo|          0.00015800 |       0.00015800 |   0.00015621 |        0.00001562 |        0.00000484 |        0.00001316 |        0.00001877 
MoL             | Ensure the correct time and timestep are|          0.00012200 |       0.00012300 |   0.00013402 |        0.00001340 |        0.00001283 |        0.00001037 |        0.00002506 
MoL             | Allocate storage for scratch levels     |          0.00204100 |       0.00204300 |   0.00204351 |        0.00020435 |        0.00147228 |        0.00004415 |        0.00160105 
MoL             | Allocate sufficient space for array scra|          0.00053900 |       0.00053800 |   0.00053714 |        0.00005371 |        0.00005902 |        0.00004020 |        0.00010117 
MoL             | Ensure the data is in the correct timele|          0.06442100 |       0.02427000 |   0.06442015 |        0.00644202 |        0.01378413 |        0.00183425 |        0.01235625 
MoL             | Initialise the RHS functions            |          0.06287200 |       0.03358400 |   0.06287895 |        0.00157197 |        0.01440199 |        0.00047697 |        0.01084111 
ML_BSSN         | ML_BSSN_EvolutionBoundaryScalar         |          0.22512000 |       0.17937400 |   0.22510795 |        0.00562770 |        0.02035000 |        0.00392930 |        0.01880102 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy1       |          0.33588600 |       0.21979700 |   0.33587465 |        0.00839687 |        0.03386038 |        0.00450932 |        0.02561790 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy2       |          0.51031600 |       0.34528600 |   0.50999366 |        0.01274984 |        0.03772451 |        0.00775940 |        0.02631936 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy3       |          0.58830600 |       0.40687500 |   0.58828776 |        0.01470719 |        0.03718047 |        0.00924848 |        0.03499604 
MoL             | Updates calculated with the efficient Ru|          0.16212900 |       0.09367600 |   0.16211798 |        0.00405295 |        0.02236358 |        0.00214453 |        0.01389614 
MoL             | Alter the counter number                |          0.00064200 |       0.00060700 |   0.00064336 |        0.00001608 |        0.00001545 |        0.00001321 |        0.00002694 
MoL             | If necessary, change the time           |          0.00050800 |       0.00048200 |   0.00050655 |        0.00001266 |        0.00000775 |        0.00000928 |        0.00001779 
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.11238300 |       0.07594800 |   0.11237696 |        0.00280942 |        0.01614530 |        0.00173988 |        0.01266691 
ADMBase         | Select ADMBase boundary conditions - may|          0.68923400 |       0.60311800 |   0.68921077 |        0.01723027 |        0.11225840 |        0.00071364 |        0.05156985 
Boundary        | Apply all requested local physical bound|          0.05523800 |       0.02894300 |   0.05524038 |        0.00039457 |        0.01566791 |        0.00004682 |        0.01244431 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00638400 |       0.00611100 |   0.00639276 |        0.00004566 |        0.00007780 |        0.00003555 |        0.00009162 
Boundary        | Unselect all grid variables for boundary|          0.00165600 |       0.00159100 |   0.00165535 |        0.00001182 |        0.00001601 |        0.00000877 |        0.00002353 
ML_BSSN         | select boundary conditions              |          0.07767800 |       0.05804400 |   0.07767619 |        0.00194190 |        0.01494737 |        0.00065878 |        0.00968092 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.20952700 |       0.15479100 |   0.20951793 |        0.00523795 |        0.01657636 |        0.00350144 |        0.01330074 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.42871600 |       0.30993300 |   0.42870449 |        0.01071761 |        0.02582731 |        0.00386826 |        0.02301461 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.23100800 |       0.16541400 |   0.23099457 |        0.00577486 |        0.02339286 |        0.00374469 |        0.02188311 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00145400 |       0.00144600 |   0.00145216 |        0.00003630 |        0.00002698 |        0.00003128 |        0.00005919 
MoL             | If necessary, change the timestep       |          0.00053400 |       0.00051700 |   0.00053402 |        0.00001335 |        0.00000832 |        0.00001121 |        0.00001979 
MoL             | Control the step size                   |          0.00013100 |       0.00011700 |   0.00013025 |        0.00001303 |        0.00001235 |        0.00001129 |        0.00002470 
MoL             | Restoring the Save and Restore variables|          0.00045200 |       0.00040300 |   0.00045153 |        0.00004515 |        0.00001041 |        0.00004285 |        0.00005456 
MoL             | Free storage for scratch levels         |          0.00038500 |       0.00034500 |   0.00038508 |        0.00003851 |        0.00001975 |        0.00003497 |        0.00005681 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.01162200 |       0.01038700 |   0.01161823 |        0.00116182 |        0.00019444 |        0.00109483 |        0.00127005 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00824500 |       0.00801800 |   0.00824399 |        0.00082440 |        0.00617809 |        0.00014635 |        0.00668488 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.17239700 |       0.08645100 |   0.17238788 |        0.01723879 |        0.02526291 |        0.00742118 |        0.02823798 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.02378600 |       0.02370600 |   0.02378424 |        0.00237842 |        0.00981757 |        0.00029831 |        0.00795288 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |          3.98402900 |       2.84223400 |   3.98359541 |        0.11979191 |        0.44768718 |        0.05345374 |        0.33367782 
==================================================================================================================================================================================================
NaNChecker      | Prepare data structures to check for NaN|          0.00018200 |       0.00017300 |   0.00017422 |        0.00001584 |        0.00001817 |        0.00001178 |        0.00002821 
NaNChecker      | Check for NaNs                          |          0.00047800 |       0.00047800 |   0.00048064 |        0.00004369 |        0.00002703 |        0.00003549 |        0.00006770 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00014300 |       0.00014000 |   0.00014197 |        0.00001291 |        0.00001344 |        0.00000945 |        0.00002407 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00041400 |       0.00040800 |   0.00041250 |        0.00003750 |        0.00001050 |        0.00003132 |        0.00004315 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00121700 |       0.00119900 |   0.00120933 |        0.00010994 |        0.00006914 |        0.00008804 |        0.00016314 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00029100 |       0.00028400 |   0.00028901 |        0.00002627 |        0.00001761 |        0.00002059 |        0.00003774 
CarpetLib       | Print memory statistics if desired      |          0.00821000 |       0.00118200 |   0.00821187 |        0.00074653 |        0.00670771 |        0.00001938 |        0.00709206 
LoopControl     | Output LoopControl statistics           |          0.00068000 |       0.00067600 |   0.00067965 |        0.00006179 |        0.00010245 |        0.00004216 |        0.00015626 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.00918100 |       0.00214200 |   0.00918053 |        0.00083459 |        0.00682778 |        0.00008212 |        0.00728606 
==================================================================================================================================================================================================
LoopControl     | Output LoopControl statistics           |          0.00008300 |       0.00008300 |   0.00008218 |        0.00008218 |        0.00000000 |        0.00008218 |        0.00008218 
MoL             | Free the MoL bookkeeping index arrays   |          0.00005400 |       0.00005400 |   0.00005379 |        0.00005379 |        0.00000000 |        0.00005379 |        0.00005379 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00013700 |       0.00013700 |   0.00013597 |        0.00013597 |        0.00000000 |        0.00013597 |        0.00013597 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00017500 |       0.00017600 |   0.00017553 |        0.00017553 |        0.00000000 |        0.00017553 |        0.00017553 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00017500 |       0.00017600 |   0.00017553 |        0.00017553 |        0.00000000 |        0.00017553 |        0.00017553 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          4.26603100 |       3.06176700 |   4.26585804 |        4.26585804 |        0.00000000 |        4.26585804 |        4.26585804 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Jul 20 18:08:04 UTC 2022
+ echo Done.
Done.
  Elapsed time: 5.6 s
