/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl/output-0000-active
+ hostname
fv-az853-634
+ date
Sat Dec 10 20:44:12 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1670705052
+ CACTUS_STARTTIME=1670705052
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.13.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.13.0
Compile date:      Dec 10 2022 (20:18:55)
Run date:          Dec 10 2022 (20:44:12+0000)
Run host:          fv-az853-634.zl5f5iitcmvuhptvsx15j3bjeg.cx.internal.cloudapp.net (pid=110688)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->CycleClock Fortran hwloc MPI IOUtil InitBase LoopControl Carpet CarpetLib CarpetReduce Boundary CartGrid3D CoordBase SymBase MoL NaNChecker Time ADMBase ADMMacros CoordGauge StaticConformal GenericFD ML_BSSN ML_BSSN_Helper TmunuBase CarpetIOBasic CarpetIOASCII<---
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          ADMBase::ADMBase_CartesianMinkowski: Set the metric and extrinsic curvature to cartesian minkowski values
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 0.915 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.357969 ns per clock tick (2.79354 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az853-634, pid=110688
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent: [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent: [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   base_spacing   : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent   : [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent   : [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   spacing           : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [35,35,35]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 770 grid functions in 49 groups
INFO (Carpet):    There are 71 grid scalars in 23 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::alp
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
WARNING[L1,P1] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (MoL): The maximum number of evolved variables is 224. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 224. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 224. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 224. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 224. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
WARNING[L1,P0] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
[1mWARNING[L1,P0] (ML_BSSN_Helper):[0m Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e-02  dy=>3.3333333e-02  dz=>3.3333333e-02
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.067, 1.067]  y=>[-0.067, 1.067]  z=>[-0.067, 1.067]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,34]  y=>[0,34]  z=>[0,34]
INFO (Time): Timestep set to 0.0133333 (courant_static)
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 264
   Maximum allocated memory:  39.9 MB
   Current administrative memory: 0.364 MB
   Total allocated used system memory: 10.1 MB
   Total allocated free system memory: 0.34 MB
   gh::allmemory:    21856
   dh::allmemory:    259992
   th::allmemory:    5964
   ggf::allmemory:   61380
   gdata::allmemory: 15224
-----------------------------------------------
Iteration      Time |              ADMBASE::alp
                    |      minimum      maximum
-----------------------------------------------
        0     0.000 |    1.0000000    1.0000000
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 288
   Maximum allocated memory:  44.8 MB
   Current administrative memory: 0.365 MB
   Total allocated used system memory: 11.6 MB
   Total allocated free system memory: 9.26 MB
   gh::allmemory:    21856
   dh::allmemory:    260024
   th::allmemory:    5964
   ggf::allmemory:   61732
   gdata::allmemory: 15224
       10     0.133 |    1.0000000    1.0000000
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00039800 |       0.00021100 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10006000 |       0.09998100 |   0.00000219 |        0.00000219 |        0.00000000 |        0.00000219 |        0.00000219 
LoopControl     | Set up LoopControl                      |          0.00000200 |       0.00000200 |   0.00000138 |        0.00000138 |        0.00000000 |        0.00000138 |        0.00000138 
ML_BSSN_Helper  | Set checkpointing and prolongation group|          0.00002500 |       0.00002500 |   0.00002516 |        0.00002516 |        0.00000000 |        0.00002516 |        0.00002516 
CarpetReduce    | Startup routine                         |          0.00002800 |       0.00002700 |   0.00002831 |        0.00002831 |        0.00000000 |        0.00002831 |        0.00002831 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000200 |       0.00000200 |   0.00000161 |        0.00000161 |        0.00000000 |        0.00000161 |        0.00000161 
CoordBase       | Register a GH extension to store the coo|          0.00000300 |       0.00000300 |   0.00000312 |        0.00000312 |        0.00000000 |        0.00000312 |        0.00000312 
Timers          | Prepare hierarchical timers             |          0.00000500 |       0.00000600 |   0.00000569 |        0.00000569 |        0.00000000 |        0.00000569 |        0.00000569 
Carpet          | Startup routine                         |          0.00000200 |       0.00000200 |   0.00000201 |        0.00000201 |        0.00000000 |        0.00000201 |        0.00000201 
IOUtil          | Startup routine                         |          0.00000200 |       0.00000200 |   0.00000192 |        0.00000192 |        0.00000000 |        0.00000192 |        0.00000192 
ML_BSSN         | create banner                           |          0.00000100 |       0.00000100 |   0.00000127 |        0.00000127 |        0.00000000 |        0.00000127 |        0.00000127 
ML_BSSN_Helper  | Register slicing                        |          0.00000100 |       0.00000100 |   0.00000133 |        0.00000133 |        0.00000000 |        0.00000133 |        0.00000133 
CarpetIOASCII   | Startup routine                         |          0.00002400 |       0.00002400 |   0.00002450 |        0.00002450 |        0.00000000 |        0.00002450 |        0.00002450 
MoL             | Startup banner                          |          0.00000200 |       0.00000100 |   0.00000133 |        0.00000133 |        0.00000000 |        0.00000133 |        0.00000133 
SymBase         | Register GH Extension for SymBase       |          0.00000200 |       0.00000200 |   0.00000164 |        0.00000164 |        0.00000000 |        0.00000164 |        0.00000164 
CarpetIOBasic   | Startup routine                         |          0.00000300 |       0.00000400 |   0.00000318 |        0.00000318 |        0.00000000 |        0.00000318 |        0.00000318 
Vectors         | Print startup message                   |          0.00002800 |       0.00000600 |   0.00002861 |        0.00002861 |        0.00000000 |        0.00002861 |        0.00002861 
hwloc           | Output hwloc version                    |          0.00002500 |       0.00000700 |   0.00002578 |        0.00002578 |        0.00000000 |        0.00002578 |        0.00002578 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10061300 |       0.10030700 |   0.00015903 |        0.00015903 |        0.00000000 |        0.00015903 |        0.00015903 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00002900 |       0.00003000 |   0.00002939 |        0.00002939 |        0.00000000 |        0.00002939 |        0.00002939 
Boundary        | Register boundary conditions that this t|          0.00001400 |       0.00001300 |   0.00001362 |        0.00001362 |        0.00000000 |        0.00001362 |        0.00001362 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00004800 |       0.00004800 |   0.00004783 |        0.00004783 |        0.00000000 |        0.00004783 |        0.00004783 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001200 |       0.00001200 |   0.00001238 |        0.00001238 |        0.00000000 |        0.00001238 |        0.00001238 
CoordGauge      | Identify the slicing for the next iterat|          0.00001000 |       0.00001000 |   0.00001021 |        0.00001021 |        0.00000000 |        0.00001021 |        0.00001021 
ML_BSSN_Helper  | Handle parameter backward compatibility |          0.00002900 |       0.00002900 |   0.00002908 |        0.00002908 |        0.00000000 |        0.00002908 |        0.00002908 
MoL             | Set up the MoL bookkeeping index arrays |          0.00005400 |       0.00002200 |   0.00005382 |        0.00005382 |        0.00000000 |        0.00005382 |        0.00005382 
MoL             | Set the flag so it is ok to register wit|          0.00001000 |       0.00001000 |   0.00001036 |        0.00001036 |        0.00000000 |        0.00001036 |        0.00001036 
TmunuBase       | Set the stress_energy_state variable    |          0.00006100 |       0.00006000 |   0.00006063 |        0.00006063 |        0.00000000 |        0.00006063 |        0.00006063 
ML_BSSN         | Register Variables for MoL              |          0.00010000 |       0.00006800 |   0.00010008 |        0.00010008 |        0.00000000 |        0.00010008 |        0.00010008 
ML_BSSN_Helper  | Register ADMBase variables as constraine|          0.00002800 |       0.00002800 |   0.00002835 |        0.00002835 |        0.00000000 |        0.00002835 |        0.00002835 
CartGrid3D      | Register symmetry boundaries            |          0.00002700 |       0.00002600 |   0.00002645 |        0.00002645 |        0.00000000 |        0.00002645 |        0.00002645 
ML_BSSN         | register symmetries                     |          0.00004500 |       0.00004500 |   0.00004493 |        0.00004493 |        0.00000000 |        0.00004493 |        0.00004493 
SymBase         | Print symmetry boundary face description|          0.00001100 |       0.00001100 |   0.00001050 |        0.00001050 |        0.00000000 |        0.00001050 |        0.00001050 
MoL             | Report how many of each type of variable|          0.00022300 |       0.00007300 |   0.00022297 |        0.00022297 |        0.00000000 |        0.00022297 |        0.00022297 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00070100 |       0.00048500 |   0.00070059 |        0.00070059 |        0.00000000 |        0.00070059 |        0.00070059 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001400 |       0.00001300 |   0.00001353 |        0.00001353 |        0.00000000 |        0.00001353 |        0.00001353 
Boundary        | Check dimension of grid variables       |          0.00000900 |       0.00001000 |   0.00000941 |        0.00000941 |        0.00000000 |        0.00000941 |        0.00000941 
Carpet          | Parameter checking routine              |          0.00001600 |       0.00001500 |   0.00001503 |        0.00001503 |        0.00000000 |        0.00001503 |        0.00001503 
CarpetLib       | Test prolongation operators             |          0.00002300 |       0.00002200 |   0.00002241 |        0.00002241 |        0.00000000 |        0.00002241 |        0.00002241 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00001300 |       0.00001200 |   0.00001245 |        0.00001245 |        0.00000000 |        0.00001245 |        0.00001245 
Fortran         | Test whether Fortran parameters work cor|          0.00001000 |       0.00001000 |   0.00000994 |        0.00000994 |        0.00000000 |        0.00000994 |        0.00000994 
ML_BSSN_Helper  | Check parameters                        |          0.00014300 |       0.00005800 |   0.00014297 |        0.00014297 |        0.00000000 |        0.00014297 |        0.00014297 
MoL             | Basic parameter checking                |          0.00001100 |       0.00001100 |   0.00001101 |        0.00001101 |        0.00000000 |        0.00001101 |        0.00001101 
TmunuBase       | Check that no deprecated parameters are |          0.00001200 |       0.00001200 |   0.00001212 |        0.00001212 |        0.00000000 |        0.00001212 |        0.00001212 
Vectors         | Run correctness tests.                  |          0.00013900 |       0.00010100 |   0.00013904 |        0.00013904 |        0.00000000 |        0.00013904 |        0.00013904 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00039000 |       0.00026400 |   0.00038793 |        0.00038793 |        0.00000000 |        0.00038793 |        0.00038793 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00003400 |       0.00000000 |   0.00003361 |        0.00003361 |        0.00000000 |        0.00003361 |        0.00003361 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00002700 |       0.00000000 |   0.00002650 |        0.00002650 |        0.00000000 |        0.00002650 |        0.00002650 
ADMBase         | Set the dtshift_state variable to 1     |          0.00002600 |       0.00000000 |   0.00002601 |        0.00002601 |        0.00000000 |        0.00002601 |        0.00002601 
ADMMacros       | Initialize the local_spatial_order      |          0.00002600 |       0.00000000 |   0.00002640 |        0.00002640 |        0.00000000 |        0.00002640 |        0.00002640 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00027200 |       0.00000000 |   0.00027270 |        0.00027270 |        0.00000000 |        0.00027270 |        0.00027270 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00036400 |       0.00000000 |   0.00036415 |        0.00036415 |        0.00000000 |        0.00036415 |        0.00036415 
CarpetReduce    | Allocate the weight function            |          0.00007400 |       0.00000000 |   0.00007314 |        0.00007314 |        0.00000000 |        0.00007314 |        0.00007314 
CarpetReduce    | Initialise the weight function          |          0.00103200 |       0.00000000 |   0.00103205 |        0.00103205 |        0.00000000 |        0.00103205 |        0.00103205 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00215600 |       0.00036400 |   0.00215620 |        0.00215620 |        0.00000000 |        0.00215620 |        0.00215620 
CarpetReduce    | Set up the weight function for the restr|          0.00004900 |       0.00004600 |   0.00004900 |        0.00004900 |        0.00000000 |        0.00004900 |        0.00004900 
CarpetReduce    | Set the weight function                 |          0.00117400 |       0.00111400 |   0.00117435 |        0.00117435 |        0.00000000 |        0.00117435 |        0.00117435 
CarpetReduce    | Test the weight function                |          0.00017100 |       0.00016200 |   0.00017095 |        0.00017095 |        0.00000000 |        0.00017095 |        0.00017095 
ML_BSSN         | check boundaries treatment              |          0.00004400 |       0.00004200 |   0.00004463 |        0.00004463 |        0.00000000 |        0.00004463 |        0.00004463 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00001800 |       0.00001800 |   0.00001824 |        0.00001824 |        0.00000000 |        0.00001824 |        0.00001824 
SymBase         | Check whether the driver set up the grid|          0.00003000 |       0.00002900 |   0.00003042 |        0.00003042 |        0.00000000 |        0.00003042 |        0.00003042 
Time            | Initialise Time variables               |          0.00001900 |       0.00001800 |   0.00001866 |        0.00001866 |        0.00000000 |        0.00001866 |        0.00001866 
Time            | Set timestep based on Courant condition |          0.00007200 |       0.00002800 |   0.00007279 |        0.00007279 |        0.00000000 |        0.00007279 |        0.00007279 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.00558800 |       0.00182100 |   0.00558980 |        0.00558980 |        0.00000000 |        0.00558980 |        0.00558980 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00003600 |       0.00003400 |   0.00003575 |        0.00003575 |        0.00000000 |        0.00003575 |        0.00003575 
ADMBase         | Set the metric and extrinsic curvature t|          0.00090900 |       0.00086200 |   0.00090949 |        0.00090949 |        0.00000000 |        0.00090949 |        0.00090949 
ADMBase         | Set the lapse to 1 at all points        |          0.00009900 |       0.00009400 |   0.00009926 |        0.00009926 |        0.00000000 |        0.00009926 |        0.00009926 
ADMBase         | Set the shift to 0 at all points        |          0.00022100 |       0.00020900 |   0.00022094 |        0.00022094 |        0.00000000 |        0.00022094 |        0.00022094 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00009600 |       0.00009100 |   0.00009602 |        0.00009602 |        0.00000000 |        0.00009602 |        0.00009602 
ADMBase         | Set the dtshift to 0 at all points      |          0.00022000 |       0.00020900 |   0.00022055 |        0.00022055 |        0.00000000 |        0.00022055 |        0.00022055 
CarpetIOASCII   | Initialisation routine                  |          0.00002200 |       0.00002100 |   0.00002120 |        0.00002120 |        0.00000000 |        0.00002120 |        0.00002120 
CarpetIOBasic   | Initialisation routine                  |          0.00001800 |       0.00001700 |   0.00001796 |        0.00001796 |        0.00000000 |        0.00001796 |        0.00001796 
ML_BSSN         | ML_BSSN_InitialADMBase1Everywhere       |          0.00310800 |       0.00310700 |   0.00310869 |        0.00310869 |        0.00000000 |        0.00310869 |        0.00310869 
ML_BSSN         | ML_BSSN_InitialADMBase2BoundaryScalar   |          0.00293100 |       0.00293200 |   0.00293176 |        0.00293176 |        0.00000000 |        0.00293176 |        0.00293176 
MoL             | Initialise the step size control        |          0.00001200 |       0.00001200 |   0.00001164 |        0.00001164 |        0.00000000 |        0.00001164 |        0.00001164 
ML_BSSN         | ML_BSSN_InitialADMBase2Interior         |          0.00310900 |       0.00310900 |   0.00310823 |        0.00310823 |        0.00000000 |        0.00310823 |        0.00310823 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.01078100 |       0.01069700 |   0.01078149 |        0.01078149 |        0.00000000 |        0.01078149 |        0.01078149 
==================================================================================================================================================================================================
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.00128300 |       0.00128300 |   0.00128224 |        0.00128224 |        0.00000000 |        0.00128224 |        0.00128224 
ADMBase         | Select ADMBase boundary conditions - may|          0.00107700 |       0.00107700 |   0.00107696 |        0.00107696 |        0.00000000 |        0.00107696 |        0.00107696 
Boundary        | Apply all requested local physical bound|          0.00102400 |       0.00095500 |   0.00102208 |        0.00020442 |        0.00040898 |        0.00003613 |        0.00052704 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00014600 |       0.00014800 |   0.00014659 |        0.00002932 |        0.00000626 |        0.00002616 |        0.00003364 
Boundary        | Unselect all grid variables for boundary|          0.00004200 |       0.00004100 |   0.00004209 |        0.00000842 |        0.00000267 |        0.00000755 |        0.00001077 
ML_BSSN         | select boundary conditions              |          0.00125900 |       0.00125900 |   0.00125927 |        0.00125927 |        0.00000000 |        0.00125927 |        0.00125927 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.00232900 |       0.00232900 |   0.00232849 |        0.00232849 |        0.00000000 |        0.00232849 |        0.00232849 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.00294000 |       0.00294000 |   0.00293988 |        0.00293988 |        0.00000000 |        0.00293988 |        0.00293988 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.00224000 |       0.00224000 |   0.00223974 |        0.00223974 |        0.00000000 |        0.00223974 |        0.00223974 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00003800 |       0.00003900 |   0.00003808 |        0.00003808 |        0.00000000 |        0.00003808 |        0.00003808 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00068400 |       0.00068400 |   0.00068333 |        0.00068333 |        0.00000000 |        0.00068333 |        0.00068333 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00010200 |       0.00010200 |   0.00010165 |        0.00010165 |        0.00000000 |        0.00010165 |        0.00010165 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.00609000 |       0.00608800 |   0.00608978 |        0.00608978 |        0.00000000 |        0.00608978 |        0.00608978 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00020100 |       0.00019100 |   0.00020053 |        0.00020053 |        0.00000000 |        0.00020053 |        0.00020053 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.01945500 |       0.01937600 |   0.01945071 |        0.01848210 |        0.00041790 |        0.01830979 |        0.01881141 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00029400 |       0.00029300 |   0.00029164 |        0.00002916 |        0.00000974 |        0.00002766 |        0.00003835 
LoopControl     | Update LoopControl algorithm preferences|          0.00049800 |       0.00049800 |   0.00049881 |        0.00004988 |        0.00000701 |        0.00004383 |        0.00005221 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00017000 |       0.00015100 |   0.00016997 |        0.00001700 |        0.00001292 |        0.00001504 |        0.00002871 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00096200 |       0.00094200 |   0.00096042 |        0.00009604 |        0.00002967 |        0.00008653 |        0.00011927 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00009100 |       0.00008200 |   0.00008964 |        0.00000896 |        0.00000900 |        0.00000780 |        0.00001749 
MoL             | Set the counter for the ODE method to lo|          0.00010400 |       0.00009500 |   0.00010262 |        0.00001026 |        0.00000263 |        0.00000969 |        0.00001269 
MoL             | Ensure the correct time and timestep are|          0.00008000 |       0.00007400 |   0.00008045 |        0.00000804 |        0.00000267 |        0.00000765 |        0.00001056 
MoL             | Allocate storage for scratch levels     |          0.00143400 |       0.00027500 |   0.00143561 |        0.00014356 |        0.00107218 |        0.00002875 |        0.00116072 
MoL             | Allocate sufficient space for array scra|          0.00026200 |       0.00020000 |   0.00026231 |        0.00002623 |        0.00001061 |        0.00002467 |        0.00003627 
MoL             | Ensure the data is in the correct timele|          0.01267000 |       0.01014600 |   0.01267190 |        0.00126719 |        0.00005587 |        0.00123913 |        0.00129737 
MoL             | Initialise the RHS functions            |          0.01796300 |       0.01694700 |   0.01795908 |        0.00044898 |        0.00027978 |        0.00037386 |        0.00053368 
ML_BSSN         | ML_BSSN_EvolutionBoundaryScalar         |          0.13617500 |       0.13316300 |   0.13617188 |        0.00340430 |        0.00042685 |        0.00331651 |        0.00363211 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy1       |          0.13843300 |       0.13835400 |   0.13843071 |        0.00346077 |        0.00068325 |        0.00332099 |        0.00367735 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy2       |          0.23707000 |       0.23680100 |   0.23706291 |        0.00592657 |        0.00061685 |        0.00580014 |        0.00615697 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy3       |          0.29758400 |       0.29713500 |   0.29757722 |        0.00743943 |        0.00041800 |        0.00734444 |        0.00767317 
MoL             | Updates calculated with the efficient Ru|          0.05849100 |       0.05837500 |   0.05849112 |        0.00146228 |        0.00085226 |        0.00130090 |        0.00191098 
MoL             | Alter the counter number                |          0.00038200 |       0.00038300 |   0.00038377 |        0.00000959 |        0.00000645 |        0.00000863 |        0.00001466 
MoL             | If necessary, change the time           |          0.00033600 |       0.00033300 |   0.00033486 |        0.00000837 |        0.00000351 |        0.00000785 |        0.00001152 
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.04987600 |       0.04944900 |   0.04987256 |        0.00124681 |        0.00035104 |        0.00121934 |        0.00157613 
ADMBase         | Select ADMBase boundary conditions - may|          0.01843100 |       0.01798000 |   0.01843153 |        0.00046079 |        0.00015234 |        0.00041558 |        0.00051672 
Boundary        | Apply all requested local physical bound|          0.02038100 |       0.01981800 |   0.02038140 |        0.00014558 |        0.00162339 |        0.00003521 |        0.00045530 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00397300 |       0.00382900 |   0.00397707 |        0.00002841 |        0.00001773 |        0.00002590 |        0.00003732 
Boundary        | Unselect all grid variables for boundary|          0.00110100 |       0.00105300 |   0.00109566 |        0.00000783 |        0.00000375 |        0.00000738 |        0.00001051 
ML_BSSN         | select boundary conditions              |          0.02522300 |       0.02452200 |   0.02522282 |        0.00063057 |        0.00203763 |        0.00042056 |        0.00129390 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.09538400 |       0.09037800 |   0.09538438 |        0.00238461 |        0.00047750 |        0.00228701 |        0.00272204 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.11732100 |       0.11491200 |   0.11732129 |        0.00293303 |        0.00062042 |        0.00284408 |        0.00324930 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.11070600 |       0.10773100 |   0.11070192 |        0.00276755 |        0.00037071 |        0.00268591 |        0.00299864 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00109900 |       0.00107000 |   0.00109568 |        0.00002739 |        0.00000979 |        0.00002487 |        0.00003462 
MoL             | If necessary, change the timestep       |          0.00035200 |       0.00034500 |   0.00034575 |        0.00000864 |        0.00000540 |        0.00000789 |        0.00001356 
MoL             | Control the step size                   |          0.00008700 |       0.00007900 |   0.00008571 |        0.00000857 |        0.00000775 |        0.00000752 |        0.00001590 
MoL             | Restoring the Save and Restore variables|          0.00028200 |       0.00025800 |   0.00028328 |        0.00002833 |        0.00000542 |        0.00002750 |        0.00003343 
MoL             | Free storage for scratch levels         |          0.00027300 |       0.00024300 |   0.00027215 |        0.00002722 |        0.00000347 |        0.00002493 |        0.00002905 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00668100 |       0.00602800 |   0.00667945 |        0.00066795 |        0.00004060 |        0.00064845 |        0.00068510 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00097200 |       0.00087600 |   0.00097144 |        0.00009714 |        0.00001060 |        0.00009355 |        0.00010435 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.06079200 |       0.06072300 |   0.06079491 |        0.00607949 |        0.00005055 |        0.00605607 |        0.00611187 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00189100 |       0.00188500 |   0.00189144 |        0.00018914 |        0.00002258 |        0.00018251 |        0.00020860 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |          1.41590000 |       1.39354200 |   1.41586252 |        0.04136359 |        0.01025057 |        0.03980525 |        0.04624188 
==================================================================================================================================================================================================
NaNChecker      | Prepare data structures to check for NaN|          0.00011400 |       0.00011300 |   0.00011285 |        0.00001026 |        0.00001596 |        0.00000782 |        0.00002170 
NaNChecker      | Check for NaNs                          |          0.00028300 |       0.00028600 |   0.00028428 |        0.00002584 |        0.00001145 |        0.00002409 |        0.00003340 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00008700 |       0.00008500 |   0.00008769 |        0.00000797 |        0.00000437 |        0.00000727 |        0.00001095 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00027200 |       0.00027300 |   0.00027359 |        0.00002487 |        0.00000476 |        0.00002381 |        0.00002791 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00075600 |       0.00075700 |   0.00075842 |        0.00006895 |        0.00003654 |        0.00006299 |        0.00009396 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00019700 |       0.00019800 |   0.00019782 |        0.00001798 |        0.00001746 |        0.00001525 |        0.00003011 
CarpetLib       | Print memory statistics if desired      |          0.00206000 |       0.00076500 |   0.00206021 |        0.00018729 |        0.00130093 |        0.00001483 |        0.00129915 
LoopControl     | Output LoopControl statistics           |          0.00037800 |       0.00037700 |   0.00037708 |        0.00003428 |        0.00001961 |        0.00002997 |        0.00004601 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.00263500 |       0.00134000 |   0.00263511 |        0.00023956 |        0.00133800 |        0.00006005 |        0.00137528 
==================================================================================================================================================================================================
LoopControl     | Output LoopControl statistics           |          0.00005500 |       0.00004600 |   0.00004629 |        0.00004629 |        0.00000000 |        0.00004629 |        0.00004629 
MoL             | Free the MoL bookkeeping index arrays   |          0.00003400 |       0.00003300 |   0.00003403 |        0.00003403 |        0.00000000 |        0.00003403 |        0.00003403 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00008900 |       0.00007900 |   0.00008032 |        0.00008032 |        0.00000000 |        0.00008032 |        0.00008032 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00015000 |       0.00014600 |   0.00014997 |        0.00014997 |        0.00000000 |        0.00014997 |        0.00014997 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00015000 |       0.00014600 |   0.00014997 |        0.00014997 |        0.00000000 |        0.00014997 |        0.00014997 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          1.51181900 |       1.47515200 |   1.51178705 |        1.51178705 |        0.00000000 |        1.51178705 |        1.51178705 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Sat Dec 10 20:44:14 UTC 2022
+ echo Done.
Done.
  Elapsed time: 2.4 s
