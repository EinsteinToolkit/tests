/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az208-805
+ date
Thu Apr  1 20:35:46 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1617309346
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Apr 01 2021 (20:28:25)
Run date:          Apr 01 2021 (20:35:46+0000)
Run host:          fv-az208-805.sy1d2q5ovqpunjmzl4xnddw5td.cx.internal.cloudapp.net (pid=101855)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az208-805
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7121240KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=709d603c-c17b-5148-bca6-f012d93c49fd, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.4.0-1043-azure, OSVersion="#45-Ubuntu SMP Fri Mar 19 17:33:38 UTC 2021", HostName=fv-az208-805, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7121240KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=63, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v3 @ 2.40GHz", CPUStepping=2)
    L3Cache L#0: (P#-1, size=30720KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 31457280 linesize 64 associativity 20 stride 1572864, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00283052 sec
      iterations=10000000... time=0.0276533 sec
      iterations=100000000... time=0.28153 sec
      iterations=400000000... time=1.13671 sec
      iterations=400000000... time=0.870195 sec
      result: 3.00173 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00327804 sec
      iterations=10000000... time=0.0319031 sec
      iterations=100000000... time=0.302864 sec
      iterations=400000000... time=1.23848 sec
      result: 10.3353 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00205239 sec
      iterations=10000000... time=0.0207184 sec
      iterations=100000000... time=0.197906 sec
      iterations=600000000... time=1.15036 sec
      result: 8.34519 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000149107 sec
      iterations=10000... time=0.00142956 sec
      iterations=100000... time=0.0145813 sec
      iterations=1000000... time=0.147714 sec
      iterations=7000000... time=0.995996 sec
      iterations=14000000... time=1.99978 sec
      result: 1.42841 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000494621 sec
      iterations=10000... time=0.00449179 sec
      iterations=100000... time=0.0478999 sec
      iterations=1000000... time=0.471386 sec
      iterations=2000000... time=0.980433 sec
      iterations=4000000... time=1.96148 sec
      result: 4.9037 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=3.1e-06 sec
      iterations=100... time=2.7601e-05 sec
      iterations=1000... time=0.000271712 sec
      iterations=10000... time=0.00281812 sec
      iterations=100000... time=0.0272606 sec
      iterations=1000000... time=0.280542 sec
      iterations=4000000... time=1.11702 sec
      result: 88.0057 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=6.5e-06 sec
      iterations=10... time=5.1502e-05 sec
      iterations=100... time=0.000513522 sec
      iterations=1000... time=0.00497361 sec
      iterations=10000... time=0.0522575 sec
      iterations=100000... time=0.509352 sec
      iterations=200000... time=1.0135 sec
      result: 38.7978 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.2e-06 sec
      iterations=10000... time=2.6701e-05 sec
      iterations=100000... time=0.000258611 sec
      iterations=1000000... time=0.00279502 sec
      iterations=10000000... time=0.0301312 sec
      iterations=100000000... time=0.2922 sec
      iterations=400000000... time=1.14086 sec
      result: 0.356517 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.3701e-05 sec
      iterations=10000... time=0.000245511 sec
      iterations=100000... time=0.0024331 sec
      iterations=1000000... time=0.0232799 sec
      iterations=10000000... time=0.23863 sec
      iterations=50000000... time=1.17087 sec
      result: 2.92718 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=5.6e-06 sec
      iterations=100... time=5.4303e-05 sec
      iterations=1000... time=0.000546523 sec
      iterations=10000... time=0.00535233 sec
      iterations=100000... time=0.0554134 sec
      iterations=1000000... time=0.554637 sec
      iterations=2000000... time=1.10744 sec
      result: 44.3835 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=7.901e-06 sec
      iterations=10... time=7.8903e-05 sec
      iterations=100... time=0.000815435 sec
      iterations=1000... time=0.00869617 sec
      iterations=10000... time=0.0805055 sec
      iterations=100000... time=0.788721 sec
      iterations=200000... time=1.60677 sec
      result: 24.4724 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.8402e-05 sec
      iterations=10... time=0.000212209 sec
      iterations=100... time=0.00272252 sec
      iterations=1000... time=0.0230397 sec
      iterations=10000... time=0.22829 sec
      iterations=50000... time=1.14552 sec
      result: 0.0754245 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=0.000125006 sec
      iterations=10... time=0.000771433 sec
      iterations=100... time=0.00882398 sec
      iterations=1000... time=0.080584 sec
      iterations=10000... time=0.800667 sec
      iterations=20000... time=1.61159 sec
      result: 0.150994 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*114^3 grid points, 1*23704704 bytes):
      iterations=1... time=0.00375756 sec
      iterations=10... time=0.0438673 sec
      iterations=100... time=0.407967 sec
      iterations=300... time=1.27952 sec
      result: 0.347368 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00309408 sec
      iterations=10000000... time=0.0307373 sec
      iterations=100000000... time=0.300959 sec
      iterations=400000000... time=1.21566 sec
      iterations=400000000... time=0.916381 sec
      result: 2.67311 GHz
    CPU floating point performance:
      iterations=1000000... time=0.0034182 sec
      iterations=10000000... time=0.0326777 sec
      iterations=100000000... time=0.320054 sec
      iterations=300000000... time=0.975134 sec
      iterations=600000000... time=1.95281 sec
      result: 9.83199 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00192858 sec
      iterations=10000000... time=0.0197611 sec
      iterations=100000000... time=0.228975 sec
      iterations=500000000... time=1.02224 sec
      result: 7.82598 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000160707 sec
      iterations=10000... time=0.00162877 sec
      iterations=100000... time=0.0158519 sec
      iterations=1000000... time=0.149637 sec
      iterations=7000000... time=1.04882 sec
      result: 1.49831 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000555374 sec
      iterations=10000... time=0.00555694 sec
      iterations=100000... time=0.0509379 sec
      iterations=1000000... time=0.52124 sec
      iterations=2000000... time=1.02793 sec
      result: 5.13963 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=6.5e-07 sec
      iterations=10... time=3e-06 sec
      iterations=100... time=2.7551e-05 sec
      iterations=1000... time=0.000287213 sec
      iterations=10000... time=0.00275017 sec
      iterations=100000... time=0.0280057 sec
      iterations=1000000... time=0.293635 sec
      iterations=4000000... time=1.16906 sec
      result: 84.0881 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=5.65e-06 sec
      iterations=10... time=4.67525e-05 sec
      iterations=100... time=0.000522572 sec
      iterations=1000... time=0.00498346 sec
      iterations=10000... time=0.0480169 sec
      iterations=100000... time=0.504772 sec
      iterations=200000... time=1.01371 sec
      result: 38.7898 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.95e-06 sec
      iterations=10000... time=3.0051e-05 sec
      iterations=100000... time=0.000309914 sec
      iterations=1000000... time=0.00332914 sec
      iterations=10000000... time=0.0301762 sec
      iterations=100000000... time=0.302664 sec
      iterations=400000000... time=1.20832 sec
      result: 0.377599 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.1551e-05 sec
      iterations=10000... time=0.000204608 sec
      iterations=100000... time=0.00199703 sec
      iterations=1000000... time=0.0209512 sec
      iterations=10000000... time=0.223051 sec
      iterations=50000000... time=1.0516 sec
      result: 2.62899 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=4.05e-06 sec
      iterations=100... time=3.8852e-05 sec
      iterations=1000... time=0.000442869 sec
      iterations=10000... time=0.00425748 sec
      iterations=100000... time=0.0428067 sec
      iterations=1000000... time=0.433298 sec
      iterations=3000000... time=1.29681 sec
      result: 56.8533 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=8.051e-06 sec
      iterations=10... time=8.8954e-05 sec
      iterations=100... time=0.000866587 sec
      iterations=1000... time=0.00843261 sec
      iterations=10000... time=0.0800095 sec
      iterations=100000... time=0.833709 sec
      iterations=200000... time=1.62628 sec
      result: 24.1788 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=2.7505e-06 sec
      iterations=10... time=3.55015e-05 sec
      iterations=100... time=0.000256111 sec
      iterations=1000... time=0.00286227 sec
      iterations=10000... time=0.0261641 sec
      iterations=100000... time=0.265145 sec
      iterations=400000... time=1.07713 sec
      result: 0.270719 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=1.2201e-05 sec
      iterations=10... time=0.000141256 sec
      iterations=100... time=0.0012577 sec
      iterations=1000... time=0.0147386 sec
      iterations=10000... time=0.132959 sec
      iterations=80000... time=1.03338 sec
      result: 0.45149 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*114^3 grid points, 1*23704704 bytes):
      iterations=1... time=0.00100184 sec
      iterations=10... time=0.0105493 sec
      iterations=100... time=0.112284 sec
      iterations=1000... time=1.0876 sec
      result: 1.36221 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Apr  1 20:36:43 UTC 2021
+ echo Done.
Done.
  Elapsed time: 57.0 s
