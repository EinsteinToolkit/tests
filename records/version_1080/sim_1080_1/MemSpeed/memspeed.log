/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az2031-111
+ date
Mon Dec 23 21:26:31 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1734989191
+ CACTUS_STARTTIME=1734989191
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Dec 23 2024 (21:19:57)
Run date:          Dec 23 2024 (21:26:32+0000)
Run host:          fv-az2031-111.rag0t2s20xiu3oejmeweyzhkrf.bx.internal.cloudapp.net (pid=131327)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az2031-111
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364592KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=671614bd-3bae-d648-b161-3c5c88679683, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1025-azure, OSVersion="#26~22.04.1-Ubuntu SMP Thu Jul 11 22:33:04 UTC 2024", HostName=fv-az2031-111, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364592KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00129135 sec
      iterations=10000000... time=0.0124141 sec
      iterations=100000000... time=0.12403 sec
      iterations=900000000... time=1.11615 sec
      iterations=900000000... time=0.835381 sec
      result: 6.41104 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197711 sec
      iterations=10000000... time=0.0197422 sec
      iterations=100000000... time=0.197318 sec
      iterations=600000000... time=1.18367 sec
      result: 16.2207 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186472 sec
      iterations=10000000... time=0.0185455 sec
      iterations=100000000... time=0.185607 sec
      iterations=600000000... time=1.11389 sec
      result: 8.61848 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000125283 sec
      iterations=10000... time=0.0012375 sec
      iterations=100000... time=0.0123632 sec
      iterations=1000000... time=0.123679 sec
      iterations=9000000... time=1.11288 sec
      result: 1.23654 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000616408 sec
      iterations=10000... time=0.00537317 sec
      iterations=100000... time=0.0534973 sec
      iterations=1000000... time=0.531488 sec
      iterations=2000000... time=1.07319 sec
      result: 5.36594 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.72e-07 sec
      iterations=10... time=5.68e-06 sec
      iterations=100... time=4.0045e-05 sec
      iterations=1000... time=0.000336106 sec
      iterations=10000... time=0.00260955 sec
      iterations=100000... time=0.0243926 sec
      iterations=1000000... time=0.243667 sec
      iterations=5000000... time=1.21908 sec
      result: 100.797 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=9.829e-06 sec
      iterations=10... time=5.6725e-05 sec
      iterations=100... time=0.000487949 sec
      iterations=1000... time=0.0048654 sec
      iterations=10000... time=0.0511663 sec
      iterations=100000... time=0.482848 sec
      iterations=200000... time=0.963434 sec
      iterations=400000... time=1.9251 sec
      result: 81.703 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.066e-06 sec
      iterations=10000... time=3.1668e-05 sec
      iterations=100000... time=0.000253422 sec
      iterations=1000000... time=0.00248268 sec
      iterations=10000000... time=0.0247302 sec
      iterations=100000000... time=0.247266 sec
      iterations=400000000... time=0.989386 sec
      iterations=800000000... time=1.97959 sec
      result: 0.30931 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.2633e-05 sec
      iterations=10000... time=0.000106378 sec
      iterations=100000... time=0.00098326 sec
      iterations=1000000... time=0.00972321 sec
      iterations=10000000... time=0.0974961 sec
      iterations=100000000... time=0.96356 sec
      iterations=200000000... time=1.92648 sec
      result: 1.20405 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.71e-07 sec
      iterations=10... time=3.787e-06 sec
      iterations=100... time=3.6468e-05 sec
      iterations=1000... time=0.00028455 sec
      iterations=10000... time=0.00278528 sec
      iterations=100000... time=0.0276785 sec
      iterations=1000000... time=0.276907 sec
      iterations=4000000... time=1.10877 sec
      result: 88.6605 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=1.1371e-05 sec
      iterations=10... time=7.8796e-05 sec
      iterations=100... time=0.000816951 sec
      iterations=1000... time=0.00459685 sec
      iterations=10000... time=0.0443482 sec
      iterations=100000... time=0.444839 sec
      iterations=200000... time=0.882373 sec
      iterations=400000... time=1.76837 sec
      result: 88.9445 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.2081e-05 sec
      iterations=10... time=0.00036012 sec
      iterations=100... time=0.0034133 sec
      iterations=1000... time=0.0371812 sec
      iterations=10000... time=0.362917 sec
      iterations=30000... time=1.06566 sec
      result: 0.048646 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000183843 sec
      iterations=10... time=0.00187367 sec
      iterations=100... time=0.0181519 sec
      iterations=1000... time=0.188618 sec
      iterations=6000... time=1.14594 sec
      result: 0.127698 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00457671 sec
      iterations=10... time=0.044044 sec
      iterations=100... time=0.472018 sec
      iterations=200... time=0.942395 sec
      iterations=400... time=1.89571 sec
      result: 0.329353 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00135542 sec
      iterations=10000000... time=0.0124134 sec
      iterations=100000000... time=0.123904 sec
      iterations=900000000... time=1.11738 sec
      iterations=900000000... time=0.835891 sec
      result: 6.39464 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196917 sec
      iterations=10000000... time=0.0197278 sec
      iterations=100000000... time=0.197361 sec
      iterations=600000000... time=1.18414 sec
      result: 16.2144 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186519 sec
      iterations=10000000... time=0.0185714 sec
      iterations=100000000... time=0.186456 sec
      iterations=600000000... time=1.11631 sec
      result: 8.59975 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124892 sec
      iterations=10000... time=0.00123433 sec
      iterations=100000... time=0.0123752 sec
      iterations=1000000... time=0.123669 sec
      iterations=9000000... time=1.11304 sec
      result: 1.23671 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000497651 sec
      iterations=10000... time=0.00436023 sec
      iterations=100000... time=0.0435304 sec
      iterations=1000000... time=0.43593 sec
      iterations=3000000... time=1.30601 sec
      result: 4.35335 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=5.56e-07 sec
      iterations=10... time=5.2795e-06 sec
      iterations=100... time=4.67065e-05 sec
      iterations=1000... time=0.000427872 sec
      iterations=10000... time=0.00284384 sec
      iterations=100000... time=0.0243293 sec
      iterations=1000000... time=0.24366 sec
      iterations=5000000... time=1.24341 sec
      result: 98.8248 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.0099e-05 sec
      iterations=10... time=7.54955e-05 sec
      iterations=100... time=0.000671701 sec
      iterations=1000... time=0.00508632 sec
      iterations=10000... time=0.0499056 sec
      iterations=100000... time=0.496352 sec
      iterations=200000... time=0.98742 sec
      iterations=400000... time=1.96737 sec
      result: 79.9475 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.181e-06 sec
      iterations=10000... time=3.30715e-05 sec
      iterations=100000... time=0.000283457 sec
      iterations=1000000... time=0.00261817 sec
      iterations=10000000... time=0.0247328 sec
      iterations=100000000... time=0.247558 sec
      iterations=400000000... time=0.990888 sec
      iterations=800000000... time=1.98755 sec
      result: 0.310555 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.1657e-05 sec
      iterations=10000... time=0.000113427 sec
      iterations=100000... time=0.00110797 sec
      iterations=1000000... time=0.0100228 sec
      iterations=10000000... time=0.100571 sec
      iterations=100000000... time=1.01732 sec
      result: 1.27165 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=5.805e-07 sec
      iterations=10... time=3.6365e-06 sec
      iterations=100... time=3.81865e-05 sec
      iterations=1000... time=0.000304682 sec
      iterations=10000... time=0.00268849 sec
      iterations=100000... time=0.0268958 sec
      iterations=1000000... time=0.269244 sec
      iterations=4000000... time=1.07836 sec
      result: 91.1603 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.2032e-05 sec
      iterations=10... time=8.7954e-05 sec
      iterations=100... time=0.000796307 sec
      iterations=1000... time=0.00503155 sec
      iterations=10000... time=0.0464131 sec
      iterations=100000... time=0.459917 sec
      iterations=200000... time=0.919931 sec
      iterations=400000... time=1.84308 sec
      result: 85.3389 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=5.896e-06 sec
      iterations=10... time=0.000101134 sec
      iterations=100... time=0.00104185 sec
      iterations=1000... time=0.0102101 sec
      iterations=10000... time=0.0972321 sec
      iterations=100000... time=0.963332 sec
      iterations=200000... time=1.94965 sec
      result: 0.177263 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=5.38155e-05 sec
      iterations=10... time=0.000497972 sec
      iterations=100... time=0.00490644 sec
      iterations=1000... time=0.0459294 sec
      iterations=10000... time=0.479296 sec
      iterations=20000... time=0.997549 sec
      iterations=40000... time=1.98195 sec
      result: 0.492222 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00107522 sec
      iterations=10... time=0.0125895 sec
      iterations=100... time=0.133285 sec
      iterations=800... time=1.04876 sec
      result: 1.19066 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Mon Dec 23 21:27:39 UTC 2024
+ echo Done.
Done.
  Elapsed time: 68.1 s
