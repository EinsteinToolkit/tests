/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az99-810
+ date
Tue Sep 28 22:33:50 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1632868430
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Sep 28 2021 (22:26:38)
Run date:          Sep 28 2021 (22:33:51+0000)
Run host:          fv-az99-810.euuzywwtp3iu5l5aj42nbmzodg.gx.internal.cloudapp.net (pid=100896)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az99-810
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120800KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=a7ed8416-1995-b747-a96d-0217f9ba0560, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1041-azure, OSVersion="#44~20.04.1-Ubuntu SMP Fri Aug 20 20:41:09 UTC 2021", HostName=fv-az99-810, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120800KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00301222 sec
      iterations=10000000... time=0.02612 sec
      iterations=100000000... time=0.259103 sec
      iterations=400000000... time=1.04102 sec
      iterations=400000000... time=0.784699 sec
      result: 3.12115 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00247792 sec
      iterations=10000000... time=0.0258478 sec
      iterations=100000000... time=0.281324 sec
      iterations=400000000... time=1.16788 sec
      result: 10.96 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186151 sec
      iterations=10000000... time=0.0176039 sec
      iterations=100000000... time=0.180694 sec
      iterations=600000000... time=1.07456 sec
      result: 8.93386 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000145201 sec
      iterations=10000... time=0.00174341 sec
      iterations=100000... time=0.0125733 sec
      iterations=1000000... time=0.13174 sec
      iterations=8000000... time=1.03085 sec
      result: 1.28856 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000476703 sec
      iterations=10000... time=0.00422843 sec
      iterations=100000... time=0.0394666 sec
      iterations=1000000... time=0.382735 sec
      iterations=3000000... time=1.19497 sec
      result: 3.98325 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=2.7e-06 sec
      iterations=100... time=2.44e-05 sec
      iterations=1000... time=0.000262202 sec
      iterations=10000... time=0.00254132 sec
      iterations=100000... time=0.0253772 sec
      iterations=1000000... time=0.265012 sec
      iterations=4000000... time=1.07707 sec
      result: 91.2699 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=5.5e-06 sec
      iterations=10... time=4.5e-05 sec
      iterations=100... time=0.000590904 sec
      iterations=1000... time=0.00544044 sec
      iterations=10000... time=0.049553 sec
      iterations=100000... time=0.447302 sec
      iterations=200000... time=0.906988 sec
      iterations=400000... time=1.73431 sec
      result: 45.3456 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.3e-06 sec
      iterations=10000... time=2.31e-05 sec
      iterations=100000... time=0.000223102 sec
      iterations=1000000... time=0.00223101 sec
      iterations=10000000... time=0.0238589 sec
      iterations=100000000... time=0.260254 sec
      iterations=400000000... time=1.12551 sec
      result: 0.351722 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.03e-05 sec
      iterations=10000... time=0.000497903 sec
      iterations=100000... time=0.00195271 sec
      iterations=1000000... time=0.0160321 sec
      iterations=10000000... time=0.161582 sec
      iterations=70000000... time=1.20242 sec
      result: 2.14719 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.3e-06 sec
      iterations=100... time=2.89e-05 sec
      iterations=1000... time=0.000423503 sec
      iterations=10000... time=0.00364223 sec
      iterations=100000... time=0.0320181 sec
      iterations=1000000... time=0.304512 sec
      iterations=4000000... time=1.08458 sec
      result: 90.6381 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=8.1e-06 sec
      iterations=10... time=8.1201e-05 sec
      iterations=100... time=0.000875806 sec
      iterations=1000... time=0.0106836 sec
      iterations=10000... time=0.0860058 sec
      iterations=100000... time=0.880156 sec
      iterations=200000... time=1.73595 sec
      result: 22.6514 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.42e-05 sec
      iterations=10... time=0.000212502 sec
      iterations=100... time=0.00229902 sec
      iterations=1000... time=0.023236 sec
      iterations=10000... time=0.23178 sec
      iterations=50000... time=1.16869 sec
      result: 0.0739289 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=4.42e-05 sec
      iterations=10... time=0.000799106 sec
      iterations=100... time=0.00931088 sec
      iterations=1000... time=0.0844368 sec
      iterations=10000... time=0.838995 sec
      iterations=20000... time=1.66912 sec
      result: 0.145789 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00685696 sec
      iterations=10... time=0.054635 sec
      iterations=100... time=0.60277 sec
      iterations=200... time=1.1662 sec
      result: 0.421948 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00299273 sec
      iterations=10000000... time=0.0271376 sec
      iterations=100000000... time=0.261807 sec
      iterations=400000000... time=1.07589 sec
      iterations=400000000... time=0.831318 sec
      result: 3.27104 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00309236 sec
      iterations=10000000... time=0.032039 sec
      iterations=100000000... time=0.308321 sec
      iterations=400000000... time=1.20097 sec
      result: 10.658 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00199474 sec
      iterations=10000000... time=0.019964 sec
      iterations=100000000... time=0.202886 sec
      iterations=500000000... time=0.936781 sec
      iterations=1000000000... time=1.81412 sec
      result: 8.8197 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000151501 sec
      iterations=10000... time=0.00147476 sec
      iterations=100000... time=0.0147933 sec
      iterations=1000000... time=0.132783 sec
      iterations=8000000... time=1.12026 sec
      result: 1.40032 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000469953 sec
      iterations=10000... time=0.00485634 sec
      iterations=100000... time=0.0534244 sec
      iterations=1000000... time=0.491812 sec
      iterations=2000000... time=0.925431 sec
      iterations=4000000... time=1.90046 sec
      result: 4.75115 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=2.85e-06 sec
      iterations=100... time=2.5351e-05 sec
      iterations=1000... time=0.000256356 sec
      iterations=10000... time=0.00246575 sec
      iterations=100000... time=0.0283323 sec
      iterations=1000000... time=0.269022 sec
      iterations=4000000... time=1.09058 sec
      result: 90.1388 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=5.8e-06 sec
      iterations=10... time=4.23e-05 sec
      iterations=100... time=0.000437754 sec
      iterations=1000... time=0.00419434 sec
      iterations=10000... time=0.0528018 sec
      iterations=100000... time=0.491041 sec
      iterations=200000... time=0.940284 sec
      iterations=400000... time=1.85249 sec
      result: 42.4526 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.45e-06 sec
      iterations=10000... time=2.415e-05 sec
      iterations=100000... time=0.000246852 sec
      iterations=1000000... time=0.00276057 sec
      iterations=10000000... time=0.0275228 sec
      iterations=100000000... time=0.270976 sec
      iterations=400000000... time=1.08999 sec
      result: 0.340623 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=1.76e-05 sec
      iterations=10000... time=0.000147004 sec
      iterations=100000... time=0.00149868 sec
      iterations=1000000... time=0.0153387 sec
      iterations=10000000... time=0.158565 sec
      iterations=70000000... time=1.25278 sec
      result: 2.23711 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=9e-07 sec
      iterations=10... time=3.1e-06 sec
      iterations=100... time=2.5101e-05 sec
      iterations=1000... time=0.000245055 sec
      iterations=10000... time=0.00266991 sec
      iterations=100000... time=0.0278551 sec
      iterations=1000000... time=0.29231 sec
      iterations=4000000... time=1.15152 sec
      result: 85.3692 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=8.1e-06 sec
      iterations=10... time=9.9651e-05 sec
      iterations=100... time=0.00089291 sec
      iterations=1000... time=0.00866819 sec
      iterations=10000... time=0.0881115 sec
      iterations=100000... time=0.852671 sec
      iterations=200000... time=1.75428 sec
      result: 22.4147 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=5.25e-06 sec
      iterations=10... time=2.935e-05 sec
      iterations=100... time=0.000305653 sec
      iterations=1000... time=0.00293163 sec
      iterations=10000... time=0.0283819 sec
      iterations=100000... time=0.281587 sec
      iterations=400000... time=1.12481 sec
      result: 0.259243 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=1.45505e-05 sec
      iterations=10... time=0.000136051 sec
      iterations=100... time=0.00131377 sec
      iterations=1000... time=0.0142365 sec
      iterations=10000... time=0.136597 sec
      iterations=80000... time=1.0943 sec
      result: 0.426355 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00131837 sec
      iterations=10... time=0.0189947 sec
      iterations=100... time=0.179513 sec
      iterations=600... time=1.10238 sec
      result: 1.33913 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Tue Sep 28 22:34:47 UTC 2021
+ echo Done.
Done.
  Elapsed time: 57.1 s
