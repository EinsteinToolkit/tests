/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
runnervmf4ws1
+ date
Tue Sep 16 00:01:38 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1757980898
+ CACTUS_STARTTIME=1757980898
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.18.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.18.0
Compile date:      Sep 15 2025 (23:53:38)
Run date:          Sep 16 2025 (00:01:39+0000)
Run host:          runnervmf4ws1.dfq2y00eh3terbab4gxgz0ankd.cx.internal.cloudapp.net (pid=131799)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.10.0, API version 0x20800
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: runnervmf4ws1
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16379468KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=f492cd84-f40f-3a48-9755-df00adcfe37d, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/hosted-compute-agent.service, OSName=Linux, OSRelease=6.11.0-1018-azure, OSVersion="#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025", HostName=runnervmf4ws1, Architecture=x86_64, hwlocVersion=2.10.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16379468KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00125899 sec
      iterations=10000000... time=0.0125112 sec
      iterations=100000000... time=0.124561 sec
      iterations=900000000... time=1.1216 sec
      iterations=900000000... time=0.840031 sec
      result: 6.39275 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00198413 sec
      iterations=10000000... time=0.0198373 sec
      iterations=100000000... time=0.198405 sec
      iterations=600000000... time=1.1903 sec
      result: 16.1304 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00157935 sec
      iterations=10000000... time=0.0155399 sec
      iterations=100000000... time=0.155609 sec
      iterations=700000000... time=1.08852 sec
      result: 10.2892 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000125785 sec
      iterations=10000... time=0.00124639 sec
      iterations=100000... time=0.012432 sec
      iterations=1000000... time=0.124358 sec
      iterations=9000000... time=1.11928 sec
      result: 1.24364 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000523487 sec
      iterations=10000... time=0.00421536 sec
      iterations=100000... time=0.0409825 sec
      iterations=1000000... time=0.386094 sec
      iterations=3000000... time=1.23023 sec
      result: 4.10077 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.91e-07 sec
      iterations=10... time=3.387e-06 sec
      iterations=100... time=5.4522e-05 sec
      iterations=1000... time=0.000297155 sec
      iterations=10000... time=0.00262905 sec
      iterations=100000... time=0.0246093 sec
      iterations=1000000... time=0.244957 sec
      iterations=4000000... time=0.981283 sec
      iterations=8000000... time=1.96107 sec
      result: 100.255 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=8.416e-06 sec
      iterations=10... time=5.5353e-05 sec
      iterations=100... time=0.000504542 sec
      iterations=1000... time=0.00508917 sec
      iterations=10000... time=0.0503099 sec
      iterations=100000... time=0.496935 sec
      iterations=200000... time=0.992977 sec
      iterations=400000... time=1.98874 sec
      result: 79.0885 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.186e-06 sec
      iterations=10000... time=3.0777e-05 sec
      iterations=100000... time=0.000253414 sec
      iterations=1000000... time=0.00249184 sec
      iterations=10000000... time=0.0248634 sec
      iterations=100000000... time=0.24881 sec
      iterations=400000000... time=0.995946 sec
      iterations=800000000... time=1.99107 sec
      result: 0.311105 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.069e-05 sec
      iterations=10000... time=9.8034e-05 sec
      iterations=100000... time=0.00100692 sec
      iterations=1000000... time=0.0103095 sec
      iterations=10000000... time=0.105295 sec
      iterations=100000000... time=1.06113 sec
      result: 1.32641 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.41e-07 sec
      iterations=10... time=4.629e-06 sec
      iterations=100... time=3.8322e-05 sec
      iterations=1000... time=0.000297696 sec
      iterations=10000... time=0.0027866 sec
      iterations=100000... time=0.027882 sec
      iterations=1000000... time=0.278552 sec
      iterations=4000000... time=1.11418 sec
      result: 88.23 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=1.7723e-05 sec
      iterations=10... time=7.3327e-05 sec
      iterations=100... time=0.00058391 sec
      iterations=1000... time=0.00480892 sec
      iterations=10000... time=0.0453853 sec
      iterations=100000... time=0.451972 sec
      iterations=200000... time=0.901821 sec
      iterations=400000... time=1.80466 sec
      result: 87.1555 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.149e-05 sec
      iterations=10... time=0.000309308 sec
      iterations=100... time=0.00340968 sec
      iterations=1000... time=0.0362528 sec
      iterations=10000... time=0.325895 sec
      iterations=30000... time=0.893174 sec
      iterations=60000... time=1.70592 sec
      result: 0.0607767 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000143128 sec
      iterations=10... time=0.00153468 sec
      iterations=100... time=0.0152004 sec
      iterations=1000... time=0.15081 sec
      iterations=7000... time=1.03163 sec
      result: 0.165489 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00393622 sec
      iterations=10... time=0.0390001 sec
      iterations=100... time=0.384297 sec
      iterations=300... time=1.17532 sec
      result: 0.398417 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00126997 sec
      iterations=10000000... time=0.0126261 sec
      iterations=100000000... time=0.124769 sec
      iterations=900000000... time=1.1241 sec
      iterations=900000000... time=0.840883 sec
      result: 6.35547 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00198994 sec
      iterations=10000000... time=0.0198443 sec
      iterations=100000000... time=0.198458 sec
      iterations=600000000... time=1.19056 sec
      result: 16.1269 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00157311 sec
      iterations=10000000... time=0.0155628 sec
      iterations=100000000... time=0.155566 sec
      iterations=700000000... time=1.09315 sec
      result: 10.2456 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000125845 sec
      iterations=10000... time=0.00124869 sec
      iterations=100000... time=0.0124509 sec
      iterations=1000000... time=0.124472 sec
      iterations=9000000... time=1.1202 sec
      result: 1.24467 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000440833 sec
      iterations=10000... time=0.00436226 sec
      iterations=100000... time=0.0437103 sec
      iterations=1000000... time=0.436887 sec
      iterations=3000000... time=1.30768 sec
      result: 4.35893 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.86e-07 sec
      iterations=10... time=3.497e-06 sec
      iterations=100... time=3.76355e-05 sec
      iterations=1000... time=0.000330372 sec
      iterations=10000... time=0.00268775 sec
      iterations=100000... time=0.0245888 sec
      iterations=1000000... time=0.245414 sec
      iterations=4000000... time=0.980987 sec
      iterations=8000000... time=1.96276 sec
      result: 100.169 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=9.4175e-06 sec
      iterations=10... time=5.1331e-05 sec
      iterations=100... time=0.000481959 sec
      iterations=1000... time=0.00485472 sec
      iterations=10000... time=0.0476151 sec
      iterations=100000... time=0.472766 sec
      iterations=200000... time=0.945339 sec
      iterations=400000... time=1.88837 sec
      result: 83.2921 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.196e-06 sec
      iterations=10000... time=3.182e-05 sec
      iterations=100000... time=0.000282728 sec
      iterations=1000000... time=0.00259518 sec
      iterations=10000000... time=0.0248642 sec
      iterations=100000000... time=0.248715 sec
      iterations=400000000... time=0.995505 sec
      iterations=800000000... time=1.9909 sec
      result: 0.311079 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=9.463e-06 sec
      iterations=10000... time=0.000108372 sec
      iterations=100000... time=0.00101229 sec
      iterations=1000000... time=0.0101089 sec
      iterations=10000000... time=0.0955701 sec
      iterations=100000000... time=0.952565 sec
      iterations=200000000... time=1.90289 sec
      result: 1.18931 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=6.315e-07 sec
      iterations=10... time=4.1575e-06 sec
      iterations=100... time=2.97805e-05 sec
      iterations=1000... time=0.000272393 sec
      iterations=10000... time=0.00272039 sec
      iterations=100000... time=0.0271811 sec
      iterations=1000000... time=0.270532 sec
      iterations=4000000... time=1.08191 sec
      result: 90.8612 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.1582e-05 sec
      iterations=10... time=8.4062e-05 sec
      iterations=100... time=0.000729653 sec
      iterations=1000... time=0.00476593 sec
      iterations=10000... time=0.0447114 sec
      iterations=100000... time=0.449923 sec
      iterations=200000... time=0.917398 sec
      iterations=400000... time=1.79415 sec
      result: 87.6662 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=8.461e-06 sec
      iterations=10... time=0.000123962 sec
      iterations=100... time=0.00107103 sec
      iterations=1000... time=0.00914985 sec
      iterations=10000... time=0.109136 sec
      iterations=100000... time=0.98166 sec
      iterations=200000... time=2.02351 sec
      result: 0.170793 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=5.105e-05 sec
      iterations=10... time=0.000559144 sec
      iterations=100... time=0.00489533 sec
      iterations=1000... time=0.0505075 sec
      iterations=10000... time=0.50974 sec
      iterations=20000... time=1.02192 sec
      result: 0.477317 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00120535 sec
      iterations=10... time=0.0160047 sec
      iterations=100... time=0.162238 sec
      iterations=700... time=1.09357 sec
      result: 0.999134 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):  10
INFO (PUGH):  1
INFO (PUGH): 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Tue Sep 16 00:02:46 UTC 2025
+ echo Done.
Done.
  Elapsed time: 67.8 s
