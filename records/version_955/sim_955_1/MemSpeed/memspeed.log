/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1200-432
+ date
Fri May 31 03:38:45 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1717126725
+ CACTUS_STARTTIME=1717126725
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      May 31 2024 (03:31:34)
Run date:          May 31 2024 (03:38:46+0000)
Run host:          fv-az1200-432.e1fplksw42iexmyiu2m33ibpoe.ex.internal.cloudapp.net (pid=130995)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az1200-432
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364604KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=f395e9fa-1542-fc4e-ba21-693014a3c3f7, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1021-azure, OSVersion="#22~22.04.1-Ubuntu SMP Tue Apr 30 16:08:18 UTC 2024", HostName=fv-az1200-432, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364604KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.0013083 sec
      iterations=10000000... time=0.0123988 sec
      iterations=100000000... time=0.124053 sec
      iterations=900000000... time=1.11424 sec
      iterations=900000000... time=0.836758 sec
      result: 6.48692 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196932 sec
      iterations=10000000... time=0.0197319 sec
      iterations=100000000... time=0.197303 sec
      iterations=600000000... time=1.18368 sec
      result: 16.2207 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187547 sec
      iterations=10000000... time=0.018544 sec
      iterations=100000000... time=0.185565 sec
      iterations=600000000... time=1.11473 sec
      result: 8.61198 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000124201 sec
      iterations=10000... time=0.00123314 sec
      iterations=100000... time=0.0123612 sec
      iterations=1000000... time=0.123647 sec
      iterations=9000000... time=1.11373 sec
      result: 1.23748 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000471298 sec
      iterations=10000... time=0.00460838 sec
      iterations=100000... time=0.0457823 sec
      iterations=1000000... time=0.458513 sec
      iterations=2000000... time=0.916208 sec
      iterations=4000000... time=1.8321 sec
      result: 4.58024 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.31e-07 sec
      iterations=10... time=2.545e-06 sec
      iterations=100... time=2.4255e-05 sec
      iterations=1000... time=0.000242492 sec
      iterations=10000... time=0.00243518 sec
      iterations=100000... time=0.0244043 sec
      iterations=1000000... time=0.24392 sec
      iterations=5000000... time=1.22022 sec
      result: 100.703 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=6.462e-06 sec
      iterations=10... time=4.849e-05 sec
      iterations=100... time=0.000464596 sec
      iterations=1000... time=0.00466628 sec
      iterations=10000... time=0.0462484 sec
      iterations=100000... time=0.462689 sec
      iterations=200000... time=0.926135 sec
      iterations=400000... time=1.85152 sec
      result: 84.9499 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=2.555e-06 sec
      iterations=10000... time=2.4776e-05 sec
      iterations=100000... time=0.00024671 sec
      iterations=1000000... time=0.00247771 sec
      iterations=10000000... time=0.024775 sec
      iterations=100000000... time=0.24735 sec
      iterations=400000000... time=0.990175 sec
      iterations=800000000... time=1.98703 sec
      result: 0.310473 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.064e-05 sec
      iterations=10000... time=9.2022e-05 sec
      iterations=100000... time=0.000942156 sec
      iterations=1000000... time=0.00931868 sec
      iterations=10000000... time=0.0929954 sec
      iterations=100000000... time=0.933157 sec
      iterations=200000000... time=1.86678 sec
      result: 1.16674 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=3.1e-07 sec
      iterations=10... time=2.845e-06 sec
      iterations=100... time=2.7612e-05 sec
      iterations=1000... time=0.000275984 sec
      iterations=10000... time=0.00276904 sec
      iterations=100000... time=0.0277345 sec
      iterations=1000000... time=0.276944 sec
      iterations=4000000... time=1.1082 sec
      result: 88.7062 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=6.352e-06 sec
      iterations=10... time=4.4272e-05 sec
      iterations=100... time=0.000443537 sec
      iterations=1000... time=0.00431299 sec
      iterations=10000... time=0.0430542 sec
      iterations=100000... time=0.431472 sec
      iterations=300000... time=1.29633 sec
      result: 90.9988 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.1671e-05 sec
      iterations=10... time=0.000306412 sec
      iterations=100... time=0.00305986 sec
      iterations=1000... time=0.0299099 sec
      iterations=10000... time=0.299721 sec
      iterations=40000... time=1.20385 sec
      result: 0.0574158 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000148858 sec
      iterations=10... time=0.00148288 sec
      iterations=100... time=0.0148068 sec
      iterations=1000... time=0.14904 sec
      iterations=7000... time=1.04013 sec
      result: 0.164136 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00415104 sec
      iterations=10... time=0.0416817 sec
      iterations=100... time=0.4177 sec
      iterations=300... time=1.25417 sec
      result: 0.373371 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00134885 sec
      iterations=10000000... time=0.0123909 sec
      iterations=100000000... time=0.123817 sec
      iterations=900000000... time=1.11432 sec
      iterations=900000000... time=0.838508 sec
      result: 6.52608 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196951 sec
      iterations=10000000... time=0.0197219 sec
      iterations=100000000... time=0.197493 sec
      iterations=600000000... time=1.18395 sec
      result: 16.217 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186058 sec
      iterations=10000000... time=0.0185645 sec
      iterations=100000000... time=0.186661 sec
      iterations=600000000... time=1.11487 sec
      result: 8.6109 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124467 sec
      iterations=10000... time=0.00123537 sec
      iterations=100000... time=0.0123679 sec
      iterations=1000000... time=0.123687 sec
      iterations=9000000... time=1.11331 sec
      result: 1.23701 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000491436 sec
      iterations=10000... time=0.00457335 sec
      iterations=100000... time=0.0454365 sec
      iterations=1000000... time=0.454635 sec
      iterations=2000000... time=0.9069 sec
      iterations=4000000... time=1.81608 sec
      result: 4.5402 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.16e-07 sec
      iterations=10... time=3.0105e-06 sec
      iterations=100... time=2.936e-05 sec
      iterations=1000... time=0.000296172 sec
      iterations=10000... time=0.00248978 sec
      iterations=100000... time=0.0244419 sec
      iterations=1000000... time=0.244372 sec
      iterations=5000000... time=1.21916 sec
      result: 100.791 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=8.9965e-06 sec
      iterations=10... time=5.64855e-05 sec
      iterations=100... time=0.000512947 sec
      iterations=1000... time=0.0050558 sec
      iterations=10000... time=0.0502363 sec
      iterations=100000... time=0.500981 sec
      iterations=200000... time=1.0053 sec
      result: 78.2284 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.221e-06 sec
      iterations=10000... time=2.77115e-05 sec
      iterations=100000... time=0.000250101 sec
      iterations=1000000... time=0.00248327 sec
      iterations=10000000... time=0.0247444 sec
      iterations=100000000... time=0.248285 sec
      iterations=400000000... time=0.990903 sec
      iterations=800000000... time=1.98431 sec
      result: 0.310049 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=9.5425e-06 sec
      iterations=10000... time=9.37195e-05 sec
      iterations=100000... time=0.000890595 sec
      iterations=1000000... time=0.0089193 sec
      iterations=10000000... time=0.0896182 sec
      iterations=100000000... time=0.897228 sec
      iterations=200000000... time=1.79541 sec
      result: 1.12213 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.21e-07 sec
      iterations=10... time=3.2965e-06 sec
      iterations=100... time=2.95595e-05 sec
      iterations=1000... time=0.00029497 sec
      iterations=10000... time=0.00277971 sec
      iterations=100000... time=0.0269066 sec
      iterations=1000000... time=0.269202 sec
      iterations=4000000... time=1.07817 sec
      result: 91.1771 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.02085e-05 sec
      iterations=10... time=6.0313e-05 sec
      iterations=100... time=0.000508964 sec
      iterations=1000... time=0.00456992 sec
      iterations=10000... time=0.0449776 sec
      iterations=100000... time=0.451784 sec
      iterations=200000... time=0.899422 sec
      iterations=400000... time=1.8013 sec
      result: 87.3185 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=6.2465e-06 sec
      iterations=10... time=8.25285e-05 sec
      iterations=100... time=0.000816913 sec
      iterations=1000... time=0.0081301 sec
      iterations=10000... time=0.0816927 sec
      iterations=100000... time=0.817066 sec
      iterations=200000... time=1.63439 sec
      result: 0.211455 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=4.009e-05 sec
      iterations=10... time=0.000389015 sec
      iterations=100... time=0.00385045 sec
      iterations=1000... time=0.0386276 sec
      iterations=10000... time=0.387041 sec
      iterations=30000... time=1.16016 sec
      result: 0.630663 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000933946 sec
      iterations=10... time=0.0108149 sec
      iterations=100... time=0.108823 sec
      iterations=1000... time=1.07845 sec
      result: 1.44735 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri May 31 03:39:48 UTC 2024
+ echo Done.
Done.
  Elapsed time: 62.6 s
