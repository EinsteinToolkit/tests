/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl/output-0000-active
+ hostname
fv-az133-200
+ date
Thu Feb 16 23:42:32 UTC 2023
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1676590952
+ CACTUS_STARTTIME=1676590952
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.13.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.13.0
Compile date:      Feb 16 2023 (23:15:41)
Run date:          Feb 16 2023 (23:42:33+0000)
Run host:          fv-az133-200.yhipumr4050edinzmvad0xeera.cx.internal.cloudapp.net (pid=111517)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->CycleClock Fortran hwloc MPI IOUtil InitBase LoopControl Carpet CarpetLib CarpetReduce Boundary CartGrid3D CoordBase SymBase MoL NaNChecker Time ADMBase ADMMacros CoordGauge StaticConformal GenericFD ML_BSSN ML_BSSN_Helper TmunuBase CarpetIOBasic CarpetIOASCII<---
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          ADMBase::ADMBase_CartesianMinkowski: Set the metric and extrinsic curvature to cartesian minkowski values
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 1.6 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.385518 ns per clock tick (2.59391 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az133-200, pid=111517
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent: [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent: [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   base_spacing   : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent   : [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent   : [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   spacing           : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [35,35,35]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 770 grid functions in 49 groups
INFO (Carpet):    There are 71 grid scalars in 23 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::alp
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 224. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 224. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 224. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 224. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 224. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
[1mWARNING[L1,P0] (ML_BSSN_Helper):[0m Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
WARNING[L1,P1] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
WARNING[L1,P0] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e-02  dy=>3.3333333e-02  dz=>3.3333333e-02
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.067, 1.067]  y=>[-0.067, 1.067]  z=>[-0.067, 1.067]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,34]  y=>[0,34]  z=>[0,34]
INFO (Time): Timestep set to 0.0133333 (courant_static)
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 264
   Maximum allocated memory:  39.9 MB
   Current administrative memory: 0.364 MB
   Total allocated used system memory: 10.1 MB
   Total allocated free system memory: 0.338 MB
   gh::allmemory:    21856
   dh::allmemory:    259992
   th::allmemory:    5964
   ggf::allmemory:   61380
   gdata::allmemory: 15224
-----------------------------------------------
Iteration      Time |              ADMBASE::alp
                    |      minimum      maximum
-----------------------------------------------
        0     0.000 |    1.0000000    1.0000000
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 288
   Maximum allocated memory:  44.8 MB
   Current administrative memory: 0.365 MB
   Total allocated used system memory: 11.6 MB
   Total allocated free system memory: 9.26 MB
   gh::allmemory:    21856
   dh::allmemory:    260024
   th::allmemory:    5964
   ggf::allmemory:   61732
   gdata::allmemory: 15224
       10     0.133 |    1.0000000    1.0000000
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00044700 |       0.00023000 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10011200 |       0.09997300 |   0.00000489 |        0.00000489 |        0.00000000 |        0.00000489 |        0.00000489 
LoopControl     | Set up LoopControl                      |          0.00000200 |       0.00000200 |   0.00000170 |        0.00000170 |        0.00000000 |        0.00000170 |        0.00000170 
ML_BSSN_Helper  | Set checkpointing and prolongation group|          0.00003500 |       0.00003600 |   0.00003543 |        0.00003543 |        0.00000000 |        0.00003543 |        0.00003543 
CarpetReduce    | Startup routine                         |          0.00003000 |       0.00003000 |   0.00003026 |        0.00003026 |        0.00000000 |        0.00003026 |        0.00003026 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000100 |       0.00000200 |   0.00000149 |        0.00000149 |        0.00000000 |        0.00000149 |        0.00000149 
CoordBase       | Register a GH extension to store the coo|          0.00000100 |       0.00000200 |   0.00000137 |        0.00000137 |        0.00000000 |        0.00000137 |        0.00000137 
Timers          | Prepare hierarchical timers             |          0.00000600 |       0.00000600 |   0.00000617 |        0.00000617 |        0.00000000 |        0.00000617 |        0.00000617 
Carpet          | Startup routine                         |          0.00000200 |       0.00000300 |   0.00000252 |        0.00000252 |        0.00000000 |        0.00000252 |        0.00000252 
IOUtil          | Startup routine                         |          0.00000200 |       0.00000300 |   0.00000275 |        0.00000275 |        0.00000000 |        0.00000275 |        0.00000275 
ML_BSSN         | create banner                           |          0.00000100 |       0.00000100 |   0.00000119 |        0.00000119 |        0.00000000 |        0.00000119 |        0.00000119 
ML_BSSN_Helper  | Register slicing                        |          0.00000200 |       0.00000100 |   0.00000128 |        0.00000128 |        0.00000000 |        0.00000128 |        0.00000128 
CarpetIOASCII   | Startup routine                         |          0.00003300 |       0.00003300 |   0.00003276 |        0.00003276 |        0.00000000 |        0.00003276 |        0.00003276 
MoL             | Startup banner                          |          0.00000200 |       0.00000100 |   0.00000140 |        0.00000140 |        0.00000000 |        0.00000140 |        0.00000140 
SymBase         | Register GH Extension for SymBase       |          0.00000200 |       0.00000200 |   0.00000195 |        0.00000195 |        0.00000000 |        0.00000195 |        0.00000195 
CarpetIOBasic   | Startup routine                         |          0.00000600 |       0.00000500 |   0.00000557 |        0.00000557 |        0.00000000 |        0.00000557 |        0.00000557 
Vectors         | Print startup message                   |          0.00003500 |       0.00000900 |   0.00003536 |        0.00003536 |        0.00000000 |        0.00003536 |        0.00003536 
hwloc           | Output hwloc version                    |          0.00002800 |       0.00000800 |   0.00002914 |        0.00002914 |        0.00000000 |        0.00002914 |        0.00002914 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10074700 |       0.10034700 |   0.00019522 |        0.00019522 |        0.00000000 |        0.00019522 |        0.00019522 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00002900 |       0.00000000 |   0.00002867 |        0.00002867 |        0.00000000 |        0.00002867 |        0.00002867 
Boundary        | Register boundary conditions that this t|          0.00001400 |       0.00000000 |   0.00001383 |        0.00001383 |        0.00000000 |        0.00001383 |        0.00001383 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00005000 |       0.00000000 |   0.00005010 |        0.00005010 |        0.00000000 |        0.00005010 |        0.00005010 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001200 |       0.00000000 |   0.00001215 |        0.00001215 |        0.00000000 |        0.00001215 |        0.00001215 
CoordGauge      | Identify the slicing for the next iterat|          0.00001000 |       0.00000000 |   0.00000954 |        0.00000954 |        0.00000000 |        0.00000954 |        0.00000954 
ML_BSSN_Helper  | Handle parameter backward compatibility |          0.00002600 |       0.00000000 |   0.00002546 |        0.00002546 |        0.00000000 |        0.00002546 |        0.00002546 
MoL             | Set up the MoL bookkeeping index arrays |          0.00008100 |       0.00000000 |   0.00008129 |        0.00008129 |        0.00000000 |        0.00008129 |        0.00008129 
MoL             | Set the flag so it is ok to register wit|          0.00001000 |       0.00000000 |   0.00001023 |        0.00001023 |        0.00000000 |        0.00001023 |        0.00001023 
TmunuBase       | Set the stress_energy_state variable    |          0.00006300 |       0.00000000 |   0.00006319 |        0.00006319 |        0.00000000 |        0.00006319 |        0.00006319 
ML_BSSN         | Register Variables for MoL              |          0.00007200 |       0.00000000 |   0.00007238 |        0.00007238 |        0.00000000 |        0.00007238 |        0.00007238 
ML_BSSN_Helper  | Register ADMBase variables as constraine|          0.00002700 |       0.00000000 |   0.00002717 |        0.00002717 |        0.00000000 |        0.00002717 |        0.00002717 
CartGrid3D      | Register symmetry boundaries            |          0.00002700 |       0.00000000 |   0.00002720 |        0.00002720 |        0.00000000 |        0.00002720 |        0.00002720 
ML_BSSN         | register symmetries                     |          0.00005000 |       0.00000000 |   0.00004993 |        0.00004993 |        0.00000000 |        0.00004993 |        0.00004993 
SymBase         | Print symmetry boundary face description|          0.00001000 |       0.00000000 |   0.00001044 |        0.00001044 |        0.00000000 |        0.00001044 |        0.00001044 
MoL             | Report how many of each type of variable|          0.00006500 |       0.00000000 |   0.00006474 |        0.00006474 |        0.00000000 |        0.00006474 |        0.00006474 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00054600 |       0.00000000 |   0.00054632 |        0.00054632 |        0.00000000 |        0.00054632 |        0.00054632 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001400 |       0.00000000 |   0.00001325 |        0.00001325 |        0.00000000 |        0.00001325 |        0.00001325 
Boundary        | Check dimension of grid variables       |          0.00000900 |       0.00000000 |   0.00000909 |        0.00000909 |        0.00000000 |        0.00000909 |        0.00000909 
Carpet          | Parameter checking routine              |          0.00001900 |       0.00000000 |   0.00001927 |        0.00001927 |        0.00000000 |        0.00001927 |        0.00001927 
CarpetLib       | Test prolongation operators             |          0.00002600 |       0.00000000 |   0.00002596 |        0.00002596 |        0.00000000 |        0.00002596 |        0.00002596 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00001200 |       0.00000000 |   0.00001222 |        0.00001222 |        0.00000000 |        0.00001222 |        0.00001222 
Fortran         | Test whether Fortran parameters work cor|          0.00001000 |       0.00000000 |   0.00000984 |        0.00000984 |        0.00000000 |        0.00000984 |        0.00000984 
ML_BSSN_Helper  | Check parameters                        |          0.00004400 |       0.00000000 |   0.00004418 |        0.00004418 |        0.00000000 |        0.00004418 |        0.00004418 
MoL             | Basic parameter checking                |          0.00001100 |       0.00000000 |   0.00001023 |        0.00001023 |        0.00000000 |        0.00001023 |        0.00001023 
TmunuBase       | Check that no deprecated parameters are |          0.00001200 |       0.00000000 |   0.00001182 |        0.00001182 |        0.00000000 |        0.00001182 |        0.00001182 
Vectors         | Run correctness tests.                  |          0.00010800 |       0.00000000 |   0.00010736 |        0.00010736 |        0.00000000 |        0.00010736 |        0.00010736 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00026500 |       0.00000000 |   0.00026322 |        0.00026322 |        0.00000000 |        0.00026322 |        0.00026322 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00003500 |       0.00000000 |   0.00003484 |        0.00003484 |        0.00000000 |        0.00003484 |        0.00003484 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00002700 |       0.00000000 |   0.00002661 |        0.00002661 |        0.00000000 |        0.00002661 |        0.00002661 
ADMBase         | Set the dtshift_state variable to 1     |          0.00002600 |       0.00000000 |   0.00002598 |        0.00002598 |        0.00000000 |        0.00002598 |        0.00002598 
ADMMacros       | Initialize the local_spatial_order      |          0.00002700 |       0.00000000 |   0.00002623 |        0.00002623 |        0.00000000 |        0.00002623 |        0.00002623 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00031600 |       0.00000000 |   0.00031529 |        0.00031529 |        0.00000000 |        0.00031529 |        0.00031529 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00038400 |       0.00000000 |   0.00038311 |        0.00038311 |        0.00000000 |        0.00038311 |        0.00038311 
CarpetReduce    | Allocate the weight function            |          0.00008500 |       0.00003300 |   0.00008524 |        0.00008524 |        0.00000000 |        0.00008524 |        0.00008524 
CarpetReduce    | Initialise the weight function          |          0.00178200 |       0.00163600 |   0.00178183 |        0.00178183 |        0.00000000 |        0.00178183 |        0.00178183 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00324000 |       0.00323700 |   0.00323906 |        0.00323906 |        0.00000000 |        0.00323906 |        0.00323906 
CarpetReduce    | Set up the weight function for the restr|          0.00005000 |       0.00004900 |   0.00004933 |        0.00004933 |        0.00000000 |        0.00004933 |        0.00004933 
CarpetReduce    | Set the weight function                 |          0.00196600 |       0.00186400 |   0.00196532 |        0.00196532 |        0.00000000 |        0.00196532 |        0.00196532 
CarpetReduce    | Test the weight function                |          0.00020700 |       0.00019100 |   0.00020775 |        0.00020775 |        0.00000000 |        0.00020775 |        0.00020775 
ML_BSSN         | check boundaries treatment              |          0.00005200 |       0.00004700 |   0.00005176 |        0.00005176 |        0.00000000 |        0.00005176 |        0.00005176 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00001900 |       0.00001600 |   0.00001818 |        0.00001818 |        0.00000000 |        0.00001818 |        0.00001818 
SymBase         | Check whether the driver set up the grid|          0.00003400 |       0.00003200 |   0.00003412 |        0.00003412 |        0.00000000 |        0.00003412 |        0.00003412 
Time            | Initialise Time variables               |          0.00001800 |       0.00001600 |   0.00001774 |        0.00001774 |        0.00000000 |        0.00001774 |        0.00001774 
Time            | Set timestep based on Courant condition |          0.00007900 |       0.00002900 |   0.00007861 |        0.00007861 |        0.00000000 |        0.00007861 |        0.00007861 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.00834700 |       0.00715000 |   0.00834099 |        0.00834099 |        0.00000000 |        0.00834099 |        0.00834099 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00003600 |       0.00003300 |   0.00003633 |        0.00003633 |        0.00000000 |        0.00003633 |        0.00003633 
ADMBase         | Set the metric and extrinsic curvature t|          0.00189600 |       0.00189400 |   0.00189571 |        0.00189571 |        0.00000000 |        0.00189571 |        0.00189571 
ADMBase         | Set the lapse to 1 at all points        |          0.00011000 |       0.00011000 |   0.00011005 |        0.00011005 |        0.00000000 |        0.00011005 |        0.00011005 
ADMBase         | Set the shift to 0 at all points        |          0.00025800 |       0.00025800 |   0.00025776 |        0.00025776 |        0.00000000 |        0.00025776 |        0.00025776 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00010900 |       0.00011000 |   0.00010960 |        0.00010960 |        0.00000000 |        0.00010960 |        0.00010960 
ADMBase         | Set the dtshift to 0 at all points      |          0.00025600 |       0.00025700 |   0.00025641 |        0.00025641 |        0.00000000 |        0.00025641 |        0.00025641 
CarpetIOASCII   | Initialisation routine                  |          0.00002300 |       0.00002300 |   0.00002324 |        0.00002324 |        0.00000000 |        0.00002324 |        0.00002324 
CarpetIOBasic   | Initialisation routine                  |          0.00001800 |       0.00001700 |   0.00001761 |        0.00001761 |        0.00000000 |        0.00001761 |        0.00001761 
ML_BSSN         | ML_BSSN_InitialADMBase1Everywhere       |          0.00371400 |       0.00371400 |   0.00371434 |        0.00371434 |        0.00000000 |        0.00371434 |        0.00371434 
ML_BSSN         | ML_BSSN_InitialADMBase2BoundaryScalar   |          0.00429800 |       0.00429700 |   0.00429709 |        0.00429709 |        0.00000000 |        0.00429709 |        0.00429709 
MoL             | Initialise the step size control        |          0.00001300 |       0.00001200 |   0.00001262 |        0.00001262 |        0.00000000 |        0.00001262 |        0.00001262 
ML_BSSN         | ML_BSSN_InitialADMBase2Interior         |          0.00359500 |       0.00359500 |   0.00359523 |        0.00359523 |        0.00000000 |        0.00359523 |        0.00359523 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.01432600 |       0.01432000 |   0.01432600 |        0.01432600 |        0.00000000 |        0.01432600 |        0.01432600 
==================================================================================================================================================================================================
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.00168800 |       0.00168800 |   0.00168799 |        0.00168799 |        0.00000000 |        0.00168799 |        0.00168799 
ADMBase         | Select ADMBase boundary conditions - may|          0.00118700 |       0.00118800 |   0.00118736 |        0.00118736 |        0.00000000 |        0.00118736 |        0.00118736 
Boundary        | Apply all requested local physical bound|          0.00107200 |       0.00107200 |   0.00107270 |        0.00021454 |        0.00039660 |        0.00003829 |        0.00050668 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00014900 |       0.00014900 |   0.00014958 |        0.00002992 |        0.00000768 |        0.00002652 |        0.00003603 
Boundary        | Unselect all grid variables for boundary|          0.00004100 |       0.00004100 |   0.00004020 |        0.00000804 |        0.00000285 |        0.00000708 |        0.00001056 
ML_BSSN         | select boundary conditions              |          0.00133800 |       0.00133800 |   0.00133788 |        0.00133788 |        0.00000000 |        0.00133788 |        0.00133788 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.00297500 |       0.00297500 |   0.00297477 |        0.00297477 |        0.00000000 |        0.00297477 |        0.00297477 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.00424900 |       0.00424900 |   0.00424874 |        0.00424874 |        0.00000000 |        0.00424874 |        0.00424874 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.00290800 |       0.00290800 |   0.00290809 |        0.00290809 |        0.00000000 |        0.00290809 |        0.00290809 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00003600 |       0.00003600 |   0.00003600 |        0.00003600 |        0.00000000 |        0.00003600 |        0.00003600 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00102600 |       0.00102600 |   0.00102611 |        0.00102611 |        0.00000000 |        0.00102611 |        0.00102611 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00012900 |       0.00012900 |   0.00012899 |        0.00012899 |        0.00000000 |        0.00012899 |        0.00012899 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.00612500 |       0.00612500 |   0.00612493 |        0.00612493 |        0.00000000 |        0.00612493 |        0.00612493 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00023500 |       0.00023500 |   0.00023441 |        0.00023441 |        0.00000000 |        0.00023441 |        0.00023441 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.02315800 |       0.02315900 |   0.02315775 |        0.02214777 |        0.00040713 |        0.02196717 |        0.02244855 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00030200 |       0.00029600 |   0.00029943 |        0.00002994 |        0.00000980 |        0.00002849 |        0.00003921 
LoopControl     | Update LoopControl algorithm preferences|          0.00039800 |       0.00039300 |   0.00039511 |        0.00003951 |        0.00000582 |        0.00003671 |        0.00004326 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00015600 |       0.00015500 |   0.00015665 |        0.00001566 |        0.00000368 |        0.00001497 |        0.00001909 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00085600 |       0.00084400 |   0.00085119 |        0.00008512 |        0.00001930 |        0.00008017 |        0.00010155 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00010500 |       0.00008700 |   0.00010402 |        0.00001040 |        0.00001689 |        0.00000759 |        0.00002420 
MoL             | Set the counter for the ODE method to lo|          0.00009900 |       0.00009100 |   0.00009776 |        0.00000978 |        0.00000271 |        0.00000918 |        0.00001225 
MoL             | Ensure the correct time and timestep are|          0.00008300 |       0.00007300 |   0.00008276 |        0.00000828 |        0.00000227 |        0.00000775 |        0.00001036 
MoL             | Allocate storage for scratch levels     |          0.00140400 |       0.00136800 |   0.00140223 |        0.00014022 |        0.00100148 |        0.00003226 |        0.00109031 
MoL             | Allocate sufficient space for array scra|          0.00026000 |       0.00023500 |   0.00025894 |        0.00002589 |        0.00000455 |        0.00002505 |        0.00003017 
MoL             | Ensure the data is in the correct timele|          0.01554600 |       0.01392300 |   0.01554787 |        0.00155479 |        0.00016832 |        0.00149971 |        0.00169231 
MoL             | Initialise the RHS functions            |          0.02229100 |       0.02118900 |   0.02228638 |        0.00055716 |        0.00028025 |        0.00047099 |        0.00064404 
ML_BSSN         | ML_BSSN_EvolutionBoundaryScalar         |          0.19328900 |       0.19116800 |   0.19328402 |        0.00483210 |        0.00065480 |        0.00462724 |        0.00508789 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy1       |          0.15771600 |       0.15753500 |   0.15771677 |        0.00394292 |        0.00135563 |        0.00368991 |        0.00442801 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy2       |          0.25476700 |       0.25439800 |   0.25476407 |        0.00636910 |        0.00075945 |        0.00617270 |        0.00659133 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy3       |          0.29120100 |       0.29045600 |   0.29119916 |        0.00727998 |        0.00070136 |        0.00710718 |        0.00775543 
MoL             | Updates calculated with the efficient Ru|          0.07141300 |       0.07139400 |   0.07140936 |        0.00178523 |        0.00118940 |        0.00162834 |        0.00280226 
MoL             | Alter the counter number                |          0.00040400 |       0.00040100 |   0.00040070 |        0.00001002 |        0.00000780 |        0.00000895 |        0.00001505 
MoL             | If necessary, change the time           |          0.00034200 |       0.00034300 |   0.00034064 |        0.00000852 |        0.00000382 |        0.00000790 |        0.00001192 
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.06250400 |       0.06246400 |   0.06250707 |        0.00156268 |        0.00012679 |        0.00153695 |        0.00163665 
ADMBase         | Select ADMBase boundary conditions - may|          0.02366400 |       0.02312900 |   0.02366168 |        0.00059154 |        0.00056756 |        0.00054119 |        0.00114380 
Boundary        | Apply all requested local physical bound|          0.02406900 |       0.02292400 |   0.02407287 |        0.00017195 |        0.00199975 |        0.00003784 |        0.00070118 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00408900 |       0.00393800 |   0.00408442 |        0.00002917 |        0.00002535 |        0.00002622 |        0.00003825 
Boundary        | Unselect all grid variables for boundary|          0.00104300 |       0.00101200 |   0.00105121 |        0.00000751 |        0.00000721 |        0.00000694 |        0.00001321 
ML_BSSN         | select boundary conditions              |          0.02831300 |       0.02647500 |   0.02831551 |        0.00070789 |        0.00204902 |        0.00050734 |        0.00132197 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.11718900 |       0.11257200 |   0.11718681 |        0.00292967 |        0.00038826 |        0.00283490 |        0.00305629 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.17028100 |       0.16640000 |   0.17027534 |        0.00425688 |        0.00011439 |        0.00422803 |        0.00430245 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.12600200 |       0.12249100 |   0.12600248 |        0.00315006 |        0.00025222 |        0.00310141 |        0.00323316 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00110700 |       0.00106700 |   0.00109818 |        0.00002745 |        0.00001184 |        0.00002512 |        0.00003440 
MoL             | If necessary, change the timestep       |          0.00035600 |       0.00034400 |   0.00035545 |        0.00000889 |        0.00000559 |        0.00000782 |        0.00001348 
MoL             | Control the step size                   |          0.00009000 |       0.00008900 |   0.00008808 |        0.00000881 |        0.00000883 |        0.00000758 |        0.00001714 
MoL             | Restoring the Save and Restore variables|          0.00029000 |       0.00028700 |   0.00028715 |        0.00002872 |        0.00000558 |        0.00002790 |        0.00003398 
MoL             | Free storage for scratch levels         |          0.00031200 |       0.00031200 |   0.00031264 |        0.00003126 |        0.00001083 |        0.00002884 |        0.00004090 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00996600 |       0.00996400 |   0.00996518 |        0.00099652 |        0.00008771 |        0.00096540 |        0.00104587 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00114600 |       0.00114400 |   0.00114406 |        0.00011441 |        0.00001177 |        0.00010901 |        0.00011956 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.06080800 |       0.06076000 |   0.06080586 |        0.00608059 |        0.00014912 |        0.00602686 |        0.00615710 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00219900 |       0.00219700 |   0.00219906 |        0.00021991 |        0.00002561 |        0.00021056 |        0.00023458 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |          1.64234800 |       1.62023000 |   1.64230771 |        0.04745828 |        0.01199615 |        0.04552466 |        0.05333949 
==================================================================================================================================================================================================
NaNChecker      | Prepare data structures to check for NaN|          0.00011500 |       0.00011600 |   0.00011608 |        0.00001055 |        0.00001658 |        0.00000795 |        0.00002148 
NaNChecker      | Check for NaNs                          |          0.00028800 |       0.00028500 |   0.00028627 |        0.00002602 |        0.00001298 |        0.00002429 |        0.00003776 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00008400 |       0.00008300 |   0.00008274 |        0.00000752 |        0.00000448 |        0.00000682 |        0.00001061 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00026800 |       0.00026500 |   0.00026644 |        0.00002422 |        0.00000496 |        0.00002330 |        0.00002739 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00075500 |       0.00074900 |   0.00075154 |        0.00006832 |        0.00003899 |        0.00006236 |        0.00009723 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00019900 |       0.00019900 |   0.00019890 |        0.00001808 |        0.00001716 |        0.00001479 |        0.00002833 
CarpetLib       | Print memory statistics if desired      |          0.00159600 |       0.00093800 |   0.00159663 |        0.00014515 |        0.00091623 |        0.00001423 |        0.00077343 
LoopControl     | Output LoopControl statistics           |          0.00037000 |       0.00037000 |   0.00036907 |        0.00003355 |        0.00002476 |        0.00002940 |        0.00005346 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.00216500 |       0.00150700 |   0.00216460 |        0.00019678 |        0.00095815 |        0.00005842 |        0.00085523 
==================================================================================================================================================================================================
LoopControl     | Output LoopControl statistics           |          0.00004500 |       0.00004500 |   0.00004441 |        0.00004441 |        0.00000000 |        0.00004441 |        0.00004441 
MoL             | Free the MoL bookkeeping index arrays   |          0.00003700 |       0.00003700 |   0.00003706 |        0.00003706 |        0.00000000 |        0.00003706 |        0.00003706 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00008200 |       0.00008200 |   0.00008148 |        0.00008148 |        0.00000000 |        0.00008148 |        0.00008148 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00015900 |       0.00016000 |   0.00015925 |        0.00015925 |        0.00000000 |        0.00015925 |        0.00015925 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00015900 |       0.00016000 |   0.00015925 |        0.00015925 |        0.00000000 |        0.00015925 |        0.00015925 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          1.76496900 |       1.70786300 |   1.76492953 |        1.76492953 |        0.00000000 |        1.76492953 |        1.76492953 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Feb 16 23:42:35 UTC 2023
+ echo Done.
Done.
  Elapsed time: 2.7 s
