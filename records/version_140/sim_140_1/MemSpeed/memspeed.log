/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az75-892
+ date
Tue Sep 28 03:16:27 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1632798987
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Sep 28 2021 (03:08:00)
Run date:          Sep 28 2021 (03:16:28+0000)
Run host:          fv-az75-892.ozjq2hgvjyiebjvorarhoiqszb.bx.internal.cloudapp.net (pid=101046)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az75-892
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120800KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=f5db39b2-19ac-3146-8736-5b55aff51939, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1041-azure, OSVersion="#44~20.04.1-Ubuntu SMP Fri Aug 20 20:41:09 UTC 2021", HostName=fv-az75-892, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120800KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00330436 sec
      iterations=10000000... time=0.0338194 sec
      iterations=100000000... time=0.334067 sec
      iterations=300000000... time=0.985506 sec
      iterations=600000000... time=1.98007 sec
      iterations=600000000... time=1.46378 sec
      result: 2.32425 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00323386 sec
      iterations=10000000... time=0.0327262 sec
      iterations=100000000... time=0.343463 sec
      iterations=300000000... time=1.04168 sec
      result: 9.2159 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00447264 sec
      iterations=10000000... time=0.0220044 sec
      iterations=100000000... time=0.229659 sec
      iterations=500000000... time=1.13347 sec
      result: 7.05799 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000155398 sec
      iterations=10000... time=0.00154328 sec
      iterations=100000... time=0.0161209 sec
      iterations=1000000... time=0.161083 sec
      iterations=7000000... time=1.14785 sec
      result: 1.63978 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000569893 sec
      iterations=10000... time=0.00568543 sec
      iterations=100000... time=0.0521721 sec
      iterations=1000000... time=0.568256 sec
      iterations=2000000... time=1.0747 sec
      result: 5.3735 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=3.3e-06 sec
      iterations=100... time=4.8199e-05 sec
      iterations=1000... time=0.000366597 sec
      iterations=10000... time=0.00355137 sec
      iterations=100000... time=0.0324979 sec
      iterations=1000000... time=0.325709 sec
      iterations=3000000... time=0.996069 sec
      iterations=6000000... time=1.97034 sec
      result: 74.8378 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=7e-06 sec
      iterations=10... time=4.7299e-05 sec
      iterations=100... time=0.000448097 sec
      iterations=1000... time=0.00451727 sec
      iterations=10000... time=0.0461712 sec
      iterations=100000... time=0.480142 sec
      iterations=200000... time=0.961924 sec
      iterations=400000... time=1.9327 sec
      result: 40.6908 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=4.2e-06 sec
      iterations=10000... time=3.19e-05 sec
      iterations=100000... time=0.000308897 sec
      iterations=1000000... time=0.00324417 sec
      iterations=10000000... time=0.0318358 sec
      iterations=100000000... time=0.330151 sec
      iterations=300000000... time=0.983816 sec
      iterations=600000000... time=1.93767 sec
      result: 0.403682 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.24e-05 sec
      iterations=10000... time=0.0001919 sec
      iterations=100000... time=0.00191311 sec
      iterations=1000000... time=0.0201452 sec
      iterations=10000000... time=0.203027 sec
      iterations=50000000... time=1.00874 sec
      result: 2.52186 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=3.5e-06 sec
      iterations=100... time=3.08e-05 sec
      iterations=1000... time=0.000304001 sec
      iterations=10000... time=0.00415291 sec
      iterations=100000... time=0.033538 sec
      iterations=1000000... time=0.339515 sec
      iterations=3000000... time=1.01055 sec
      result: 72.9583 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=9.3e-06 sec
      iterations=10... time=9.3299e-05 sec
      iterations=100... time=0.000962789 sec
      iterations=1000... time=0.0103286 sec
      iterations=10000... time=0.105645 sec
      iterations=100000... time=0.97823 sec
      iterations=200000... time=1.986 sec
      result: 19.7993 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.4899e-05 sec
      iterations=10... time=0.000218898 sec
      iterations=100... time=0.00228557 sec
      iterations=1000... time=0.0248856 sec
      iterations=10000... time=0.249814 sec
      iterations=40000... time=1.02029 sec
      result: 0.0677456 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=3.07e-05 sec
      iterations=10... time=0.00102479 sec
      iterations=100... time=0.00868785 sec
      iterations=1000... time=0.0897021 sec
      iterations=10000... time=0.901944 sec
      iterations=20000... time=1.78684 sec
      result: 0.136185 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00726385 sec
      iterations=10... time=0.0695952 sec
      iterations=100... time=0.695625 sec
      iterations=200... time=1.41977 sec
      result: 0.346589 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00310793 sec
      iterations=10000000... time=0.0315731 sec
      iterations=100000000... time=0.32331 sec
      iterations=300000000... time=0.997806 sec
      iterations=600000000... time=2.0064 sec
      iterations=600000000... time=1.47659 sec
      result: 2.26494 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00328286 sec
      iterations=10000000... time=0.0343049 sec
      iterations=100000000... time=0.333713 sec
      iterations=300000000... time=1.03512 sec
      result: 9.27427 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00203253 sec
      iterations=10000000... time=0.0227508 sec
      iterations=100000000... time=0.232726 sec
      iterations=500000000... time=1.13686 sec
      result: 7.03691 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000155299 sec
      iterations=10000... time=0.00154488 sec
      iterations=100000... time=0.0159374 sec
      iterations=1000000... time=0.167661 sec
      iterations=7000000... time=1.14299 sec
      result: 1.63285 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000509945 sec
      iterations=10000... time=0.00649778 sec
      iterations=100000... time=0.0536901 sec
      iterations=1000000... time=0.535518 sec
      iterations=2000000... time=1.09172 sec
      result: 5.45858 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8e-07 sec
      iterations=10... time=3.35e-06 sec
      iterations=100... time=3.1299e-05 sec
      iterations=1000... time=0.000309691 sec
      iterations=10000... time=0.00317367 sec
      iterations=100000... time=0.0322503 sec
      iterations=1000000... time=0.332654 sec
      iterations=3000000... time=0.985778 sec
      iterations=6000000... time=1.96909 sec
      result: 74.8853 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=6.6e-06 sec
      iterations=10... time=4.67e-05 sec
      iterations=100... time=0.000463745 sec
      iterations=1000... time=0.00502015 sec
      iterations=10000... time=0.0517893 sec
      iterations=100000... time=0.525573 sec
      iterations=200000... time=1.03165 sec
      result: 38.1152 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=4.45e-06 sec
      iterations=10000... time=3.1499e-05 sec
      iterations=100000... time=0.000309497 sec
      iterations=1000000... time=0.00330401 sec
      iterations=10000000... time=0.0332934 sec
      iterations=100000000... time=0.330275 sec
      iterations=300000000... time=0.979497 sec
      iterations=600000000... time=1.98192 sec
      result: 0.412899 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.2699e-05 sec
      iterations=10000... time=0.000196047 sec
      iterations=100000... time=0.00200772 sec
      iterations=1000000... time=0.0243233 sec
      iterations=10000000... time=0.200856 sec
      iterations=50000000... time=1.01429 sec
      result: 2.53572 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=1.15e-06 sec
      iterations=10... time=3.9e-06 sec
      iterations=100... time=3.2249e-05 sec
      iterations=1000... time=0.000316694 sec
      iterations=10000... time=0.00317204 sec
      iterations=100000... time=0.0348734 sec
      iterations=1000000... time=0.336279 sec
      iterations=3000000... time=1.0159 sec
      result: 72.574 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=9.55e-06 sec
      iterations=10... time=9.5149e-05 sec
      iterations=100... time=0.00103664 sec
      iterations=1000... time=0.0108798 sec
      iterations=10000... time=0.0999726 sec
      iterations=100000... time=0.979244 sec
      iterations=200000... time=1.96797 sec
      result: 19.9808 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=6.2e-06 sec
      iterations=10... time=3.81e-05 sec
      iterations=100... time=0.000309847 sec
      iterations=1000... time=0.00302836 sec
      iterations=10000... time=0.0318571 sec
      iterations=100000... time=0.32264 sec
      iterations=300000... time=0.922826 sec
      iterations=600000... time=1.83656 sec
      result: 0.238162 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=1.60995e-05 sec
      iterations=10... time=0.000147648 sec
      iterations=100... time=0.00141463 sec
      iterations=1000... time=0.0143959 sec
      iterations=10000... time=0.146944 sec
      iterations=70000... time=1.02852 sec
      result: 0.396919 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00166708 sec
      iterations=10... time=0.0219892 sec
      iterations=100... time=0.21227 sec
      iterations=500... time=1.09025 sec
      result: 1.12836 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Tue Sep 28 03:17:37 UTC 2021
+ echo Done.
Done.
  Elapsed time: 69.8 s
