/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az105-956
+ date
Fri Jan  7 17:55:59 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1641578159
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.11.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.11.0
Compile date:      Jan 07 2022 (17:22:53)
Run date:          Jan 07 2022 (17:56:00+0000)
Run host:          fv-az105-956.wy5h1aom0jgehahef1oyr10hrc.bx.internal.cloudapp.net (pid=112170)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az105-956
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7118764KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=43b0e9ea-f6ab-5e4c-a0d7-93e3c75667b6, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.11.0-1022-azure, OSVersion="#23~20.04.1-Ubuntu SMP Fri Nov 19 10:20:52 UTC 2021", HostName=fv-az105-956, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7118764KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=63, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v3 @ 2.40GHz", CPUStepping=2)
    L3Cache L#0: (P#-1, size=30720KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 31457280 linesize 64 associativity 20 stride 1572864, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00297023 sec
      iterations=10000000... time=0.0305348 sec
      iterations=100000000... time=0.307307 sec
      iterations=400000000... time=1.269 sec
      iterations=400000000... time=1.00015 sec
      result: 2.97571 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00324884 sec
      iterations=10000000... time=0.0328522 sec
      iterations=100000000... time=0.37121 sec
      iterations=300000000... time=1.04078 sec
      result: 9.22387 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00211432 sec
      iterations=10000000... time=0.0212793 sec
      iterations=100000000... time=0.218941 sec
      iterations=500000000... time=1.0619 sec
      result: 7.53368 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000149802 sec
      iterations=10000... time=0.00148612 sec
      iterations=100000... time=0.0152271 sec
      iterations=1000000... time=0.158047 sec
      iterations=7000000... time=1.088 sec
      result: 1.55428 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000503806 sec
      iterations=10000... time=0.00499756 sec
      iterations=100000... time=0.0514557 sec
      iterations=1000000... time=0.532614 sec
      iterations=2000000... time=1.06325 sec
      result: 5.31627 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=9e-07 sec
      iterations=10... time=3.6e-06 sec
      iterations=100... time=3.01e-05 sec
      iterations=1000... time=0.000294803 sec
      iterations=10000... time=0.00297273 sec
      iterations=100000... time=0.0299214 sec
      iterations=1000000... time=0.301892 sec
      iterations=4000000... time=1.20848 sec
      result: 81.345 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=8.1e-06 sec
      iterations=10... time=5.09e-05 sec
      iterations=100... time=0.000483206 sec
      iterations=1000... time=0.00488325 sec
      iterations=10000... time=0.0661063 sec
      iterations=100000... time=0.496825 sec
      iterations=200000... time=1.16792 sec
      result: 33.668 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.8e-06 sec
      iterations=10000... time=3.0501e-05 sec
      iterations=100000... time=0.000298204 sec
      iterations=1000000... time=0.00305494 sec
      iterations=10000000... time=0.0344272 sec
      iterations=100000000... time=0.403994 sec
      iterations=300000000... time=1.30508 sec
      result: 0.543785 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.1e-05 sec
      iterations=10000... time=0.000186702 sec
      iterations=100000... time=0.00186612 sec
      iterations=1000000... time=0.0187693 sec
      iterations=10000000... time=0.273516 sec
      iterations=40000000... time=1.0991 sec
      result: 3.43469 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=1.2e-06 sec
      iterations=10... time=6.5e-06 sec
      iterations=100... time=5.9001e-05 sec
      iterations=1000... time=0.000612506 sec
      iterations=10000... time=0.00592257 sec
      iterations=100000... time=0.130058 sec
      iterations=800000... time=0.638509 sec
      iterations=1600000... time=1.24936 sec
      result: 31.4734 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=8.9e-06 sec
      iterations=10... time=8.3801e-05 sec
      iterations=100... time=0.000831609 sec
      iterations=1000... time=0.0086103 sec
      iterations=10000... time=0.0884777 sec
      iterations=100000... time=1.22573 sec
      result: 16.04 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*23592960 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.7401e-05 sec
      iterations=10... time=0.000206002 sec
      iterations=100... time=0.00206902 sec
      iterations=1000... time=0.024119 sec
      iterations=10000... time=0.318531 sec
      iterations=30000... time=0.894681 sec
      iterations=60000... time=1.64507 sec
      result: 0.0630247 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=4.47e-05 sec
      iterations=10... time=0.000363004 sec
      iterations=100... time=0.00360394 sec
      iterations=1000... time=0.0523156 sec
      iterations=10000... time=0.472244 sec
      iterations=20000... time=0.968345 sec
      iterations=40000... time=2.00862 sec
      result: 0.242295 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*114^3 grid points, 1*23704704 bytes):
      iterations=1... time=0.00396275 sec
      iterations=10... time=0.0668174 sec
      iterations=100... time=0.525414 sec
      iterations=200... time=1.19596 sec
      result: 0.247758 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00702288 sec
      iterations=10000000... time=0.0416049 sec
      iterations=100000000... time=0.421686 sec
      iterations=300000000... time=1.25043 sec
      iterations=300000000... time=0.966374 sec
      result: 2.11227 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00327949 sec
      iterations=10000000... time=0.0514787 sec
      iterations=100000000... time=0.449016 sec
      iterations=200000000... time=0.921536 sec
      iterations=400000000... time=1.78722 sec
      result: 7.16197 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00222988 sec
      iterations=10000000... time=0.0311542 sec
      iterations=100000000... time=0.280053 sec
      iterations=400000000... time=1.17759 sec
      result: 5.43483 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000149602 sec
      iterations=10000... time=0.00148842 sec
      iterations=100000... time=0.0223138 sec
      iterations=1000000... time=0.199231 sec
      iterations=6000000... time=1.25556 sec
      result: 2.09261 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000484805 sec
      iterations=10000... time=0.00713328 sec
      iterations=100000... time=0.0580933 sec
      iterations=1000000... time=0.633565 sec
      iterations=2000000... time=1.30003 sec
      result: 6.50016 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*23592960 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=1.3005e-06 sec
      iterations=10... time=3.55e-06 sec
      iterations=100... time=2.995e-05 sec
      iterations=1000... time=0.000294203 sec
      iterations=10000... time=0.00295408 sec
      iterations=100000... time=0.0421008 sec
      iterations=1000000... time=0.404799 sec
      iterations=3000000... time=1.23746 sec
      result: 59.5802 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=7.15e-06 sec
      iterations=10... time=4.9251e-05 sec
      iterations=100... time=0.000494355 sec
      iterations=1000... time=0.00472935 sec
      iterations=10000... time=0.0728476 sec
      iterations=100000... time=0.654743 sec
      iterations=200000... time=1.34778 sec
      result: 29.1751 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*23592960 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=4.15e-06 sec
      iterations=10000... time=3.0501e-05 sec
      iterations=100000... time=0.000297954 sec
      iterations=1000000... time=0.00304123 sec
      iterations=10000000... time=0.0422511 sec
      iterations=100000000... time=0.414357 sec
      iterations=300000000... time=1.25857 sec
      result: 0.524406 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.08e-05 sec
      iterations=10000... time=0.000183502 sec
      iterations=100000... time=0.00281833 sec
      iterations=1000000... time=0.0240588 sec
      iterations=10000000... time=0.254814 sec
      iterations=40000000... time=1.0451 sec
      result: 3.26594 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*23592960 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=1e-06 sec
      iterations=10... time=6.35e-06 sec
      iterations=100... time=5.9151e-05 sec
      iterations=1000... time=0.000587707 sec
      iterations=10000... time=0.00990196 sec
      iterations=100000... time=0.0885591 sec
      iterations=1000000... time=0.855765 sec
      iterations=2000000... time=1.63683 sec
      result: 30.0288 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=1.05e-05 sec
      iterations=10... time=0.000228203 sec
      iterations=100... time=0.000841509 sec
      iterations=1000... time=0.0102112 sec
      iterations=10000... time=0.10198 sec
      iterations=100000... time=0.874035 sec
      iterations=200000... time=1.74449 sec
      result: 22.5404 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*23592960 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=8.2e-06 sec
      iterations=10... time=7.5801e-05 sec
      iterations=100... time=0.000791059 sec
      iterations=1000... time=0.00770754 sec
      iterations=10000... time=0.0795429 sec
      iterations=100000... time=0.789689 sec
      iterations=200000... time=1.60342 sec
      result: 0.0909309 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=4.3151e-05 sec
      iterations=10... time=0.000416654 sec
      iterations=100... time=0.00419705 sec
      iterations=1000... time=0.0495269 sec
      iterations=10000... time=0.433076 sec
      iterations=30000... time=1.33552 sec
      result: 0.131005 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*114^3 grid points, 1*23704704 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 2200 nsec
    MPI bandwidth: 3.22546 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri Jan  7 17:56:55 UTC 2022
+ echo Done.
Done.
  Elapsed time: 55.5 s
