/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az566-998
+ date
Thu Dec 14 23:55:45 UTC 2023
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1702598145
+ CACTUS_STARTTIME=1702598145
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      Dec 14 2023 (23:49:24)
Run date:          Dec 14 2023 (23:55:46+0000)
Run host:          fv-az566-998.ut545be5203uvep113pmbghppc.ex.internal.cloudapp.net (pid=130289)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az566-998
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16365028KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=ce7cadca-5a1a-af47-81ea-114e462d71da, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.2.0-1018-azure, OSVersion="#18~22.04.1-Ubuntu SMP Tue Nov 21 19:25:02 UTC 2023", HostName=fv-az566-998, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16365028KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00132781 sec
      iterations=10000000... time=0.0124929 sec
      iterations=100000000... time=0.123764 sec
      iterations=900000000... time=1.11538 sec
      iterations=900000000... time=0.835328 sec
      result: 6.42742 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196947 sec
      iterations=10000000... time=0.0197365 sec
      iterations=100000000... time=0.197331 sec
      iterations=600000000... time=1.18408 sec
      result: 16.2151 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00186436 sec
      iterations=10000000... time=0.018541 sec
      iterations=100000000... time=0.185594 sec
      iterations=600000000... time=1.1181 sec
      result: 8.586 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000123401 sec
      iterations=10000... time=0.00123392 sec
      iterations=100000... time=0.0123845 sec
      iterations=1000000... time=0.123667 sec
      iterations=9000000... time=1.11331 sec
      result: 1.23701 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000430466 sec
      iterations=10000... time=0.00389581 sec
      iterations=100000... time=0.0388269 sec
      iterations=1000000... time=0.388901 sec
      iterations=3000000... time=1.16981 sec
      result: 3.89937 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.51e-07 sec
      iterations=10... time=2.555e-06 sec
      iterations=100... time=2.4205e-05 sec
      iterations=1000... time=0.000242403 sec
      iterations=10000... time=0.00244327 sec
      iterations=100000... time=0.0244468 sec
      iterations=1000000... time=0.243635 sec
      iterations=5000000... time=1.21791 sec
      result: 100.894 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.254e-06 sec
      iterations=10... time=5.0395e-05 sec
      iterations=100... time=0.00048615 sec
      iterations=1000... time=0.00479142 sec
      iterations=10000... time=0.0484353 sec
      iterations=100000... time=0.472505 sec
      iterations=200000... time=0.945092 sec
      iterations=400000... time=1.89159 sec
      result: 83.1502 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=2.535e-06 sec
      iterations=10000... time=2.4786e-05 sec
      iterations=100000... time=0.000246742 sec
      iterations=1000000... time=0.0024778 sec
      iterations=10000000... time=0.0247178 sec
      iterations=100000000... time=0.247318 sec
      iterations=400000000... time=0.990499 sec
      iterations=800000000... time=1.98217 sec
      result: 0.309714 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=9.538e-06 sec
      iterations=10000... time=8.9688e-05 sec
      iterations=100000... time=0.00108734 sec
      iterations=1000000... time=0.0103828 sec
      iterations=10000000... time=0.104717 sec
      iterations=100000000... time=1.04235 sec
      result: 1.30293 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=3.01e-07 sec
      iterations=10... time=2.805e-06 sec
      iterations=100... time=2.7622e-05 sec
      iterations=1000... time=0.000275957 sec
      iterations=10000... time=0.00277062 sec
      iterations=100000... time=0.0277288 sec
      iterations=1000000... time=0.277367 sec
      iterations=4000000... time=1.10895 sec
      result: 88.6459 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=6.352e-06 sec
      iterations=10... time=4.5065e-05 sec
      iterations=100... time=0.000446556 sec
      iterations=1000... time=0.00432338 sec
      iterations=10000... time=0.0430781 sec
      iterations=100000... time=0.430925 sec
      iterations=300000... time=1.2927 sec
      result: 91.2549 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.2953e-05 sec
      iterations=10... time=0.000309339 sec
      iterations=100... time=0.00308176 sec
      iterations=1000... time=0.0314584 sec
      iterations=10000... time=0.30882 sec
      iterations=40000... time=1.24717 sec
      result: 0.0554215 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000164588 sec
      iterations=10... time=0.00156801 sec
      iterations=100... time=0.0156121 sec
      iterations=1000... time=0.158102 sec
      iterations=7000... time=1.10889 sec
      result: 0.153958 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00432515 sec
      iterations=10... time=0.0432001 sec
      iterations=100... time=0.425979 sec
      iterations=300... time=1.28857 sec
      result: 0.363401 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00136731 sec
      iterations=10000000... time=0.0123997 sec
      iterations=100000000... time=0.123963 sec
      iterations=900000000... time=1.11541 sec
      iterations=900000000... time=0.836154 sec
      result: 6.44566 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197814 sec
      iterations=10000000... time=0.0197249 sec
      iterations=100000000... time=0.197379 sec
      iterations=600000000... time=1.18411 sec
      result: 16.2147 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00185994 sec
      iterations=10000000... time=0.0186083 sec
      iterations=100000000... time=0.185859 sec
      iterations=600000000... time=1.11517 sec
      result: 8.60859 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000132604 sec
      iterations=10000... time=0.00123576 sec
      iterations=100000... time=0.0123646 sec
      iterations=1000000... time=0.123664 sec
      iterations=9000000... time=1.1133 sec
      result: 1.237 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000469534 sec
      iterations=10000... time=0.00433206 sec
      iterations=100000... time=0.0431153 sec
      iterations=1000000... time=0.431806 sec
      iterations=3000000... time=1.29538 sec
      result: 4.31792 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.26e-07 sec
      iterations=10... time=3.126e-06 sec
      iterations=100... time=3.32975e-05 sec
      iterations=1000... time=0.000295564 sec
      iterations=10000... time=0.00257581 sec
      iterations=100000... time=0.0243635 sec
      iterations=1000000... time=0.243698 sec
      iterations=5000000... time=1.21937 sec
      result: 100.774 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=8.727e-06 sec
      iterations=10... time=5.26235e-05 sec
      iterations=100... time=0.000484467 sec
      iterations=1000... time=0.0048107 sec
      iterations=10000... time=0.0480558 sec
      iterations=100000... time=0.481132 sec
      iterations=200000... time=0.962399 sec
      iterations=400000... time=1.91856 sec
      result: 81.9815 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.2465e-06 sec
      iterations=10000... time=3.07575e-05 sec
      iterations=100000... time=0.000280019 sec
      iterations=1000000... time=0.00254696 sec
      iterations=10000000... time=0.024781 sec
      iterations=100000000... time=0.24763 sec
      iterations=400000000... time=0.990805 sec
      iterations=800000000... time=1.98207 sec
      result: 0.309699 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.1597e-05 sec
      iterations=10000... time=0.000100428 sec
      iterations=100000... time=0.000937285 sec
      iterations=1000000... time=0.0095283 sec
      iterations=10000000... time=0.0952456 sec
      iterations=100000000... time=0.958428 sec
      iterations=200000000... time=1.91678 sec
      result: 1.19799 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.355e-07 sec
      iterations=10... time=3.752e-06 sec
      iterations=100... time=3.47505e-05 sec
      iterations=1000... time=0.000306775 sec
      iterations=10000... time=0.00273707 sec
      iterations=100000... time=0.027075 sec
      iterations=1000000... time=0.269725 sec
      iterations=4000000... time=1.07748 sec
      result: 91.2352 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.20835e-05 sec
      iterations=10... time=6.25565e-05 sec
      iterations=100... time=0.000544319 sec
      iterations=1000... time=0.00455818 sec
      iterations=10000... time=0.0448001 sec
      iterations=100000... time=0.448047 sec
      iterations=200000... time=0.896393 sec
      iterations=400000... time=1.79534 sec
      result: 87.6081 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=5.7255e-06 sec
      iterations=10... time=8.6591e-05 sec
      iterations=100... time=0.000867193 sec
      iterations=1000... time=0.00873765 sec
      iterations=10000... time=0.0870114 sec
      iterations=100000... time=0.858884 sec
      iterations=200000... time=1.72338 sec
      result: 0.200537 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=4.34265e-05 sec
      iterations=10... time=0.000427305 sec
      iterations=100... time=0.00435078 sec
      iterations=1000... time=0.0416782 sec
      iterations=10000... time=0.414626 sec
      iterations=30000... time=1.23694 sec
      result: 0.591518 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000894244 sec
      iterations=10... time=0.0108704 sec
      iterations=100... time=0.109011 sec
      iterations=1000... time=1.09618 sec
      result: 1.42394 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Dec 14 23:56:46 UTC 2023
+ echo Done.
Done.
  Elapsed time: 60.8 s
