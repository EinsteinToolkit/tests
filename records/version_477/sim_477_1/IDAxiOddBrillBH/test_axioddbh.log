/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/IDAxiOddBrillBH
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/IDAxiOddBrillBH/output-0000-active
+ hostname
fv-az371-38
+ date
Wed Dec  7 07:46:49 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1670399209
+ CACTUS_STARTTIME=1670399209
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/EinsteinInitialData/IDAxiOddBrillBH/test/test_axioddbh.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.13.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.13.0
Compile date:      Dec 07 2022 (07:39:52)
Run date:          Dec 07 2022 (07:46:50+0000)
Run host:          fv-az371-38.ipdn00qvwfrujbrcphh0gwusye.dx.internal.cloudapp.net (pid=103319)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/IDAxiOddBrillBH
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/EinsteinInitialData/IDAxiOddBrillBH/test/test_axioddbh.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->IDAxiOddBrillBH coordbase coordgauge staticconformal spacemask tmunubase admbase admmacros admanalysis ellbase cartgrid3d time pugh pughreduce pughslab ioascii ioutil iobasic boundary pughinterp LocalInterp nanchecker LocalInterp LocalReduce SymBase<---
Warning: thorn LocalInterp already scheduled for activation
Thorn pugh requests automatic activation of MPI
Thorn pugh requests automatic activation of Vectors
Thorn MPI requests automatic activation of hwloc
Thorn hwloc requests automatic activation of zlib
Activating thorn admanalysis...Success -> active implementation ADMAnalysis
Activating thorn admbase...Success -> active implementation ADMBase
Activating thorn admmacros...Success -> active implementation ADMMacros
Activating thorn boundary...Success -> active implementation boundary
Activating thorn cartgrid3d...Success -> active implementation grid
Activating thorn coordbase...Success -> active implementation CoordBase
Activating thorn coordgauge...Success -> active implementation CoordGauge
Activating thorn ellbase...Success -> active implementation ellbase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IDAxiOddBrillBH...Success -> active implementation axiodd
Activating thorn ioascii...Success -> active implementation IOASCII
Activating thorn iobasic...Success -> active implementation IOBasic
Activating thorn ioutil...Success -> active implementation IO
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn LocalReduce...Success -> active implementation LocalReduce
Activating thorn MPI...Success -> active implementation MPI
Activating thorn nanchecker...Success -> active implementation NaNChecker
Activating thorn pugh...Success -> active implementation Driver
Activating thorn pughinterp...Success -> active implementation Interp
Activating thorn pughreduce...Success -> active implementation Reduce
Activating thorn pughslab...Success -> active implementation Hyperslab
Activating thorn spacemask...Success -> active implementation SpaceMask
Activating thorn staticconformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn time...Success -> active implementation time
Activating thorn tmunubase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      EllBase::Ell_RegisterBaseEqTypes: Register the standard elliptic classes
      PUGH::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      IOASCII::IOASCII_Startup: Startup routine
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      LocalReduce::LocalReduce_Startup: Startup routine
      IOBasic::IOBasic_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      PUGHInterp::PUGHInterp_Startup: PUGHInterp startup routine
      PUGHReduce::PUGHReduce_Startup: Startup routine
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMAnalysis::ADMAnalysis_RegisterSymmetry: [global] Register symmetry of Ricci tensor and scalar
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMAnalysis::ADMAnalysis_ParamCheck: [global] Check that the metric_type is recognised
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      IDAxiOddBrillBH::IDAxiOddBrillBH_ParamCheck: Check Parameters
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          IDAxiOddBrillBH::IDAxiOddBrillBH: Construct IDAxiOddBrillBH
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
        IOBasic::IOBasic_Init: Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        PUGH::PUGH_Report: Report on PUGH set up
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        ADMAnalysis::ADMAnalysis_EvaltrK: Compute the trace of the extrinsic curvature and the determinant of the metric
        ADMAnalysis::ADMAnalysis_MetricCartToSphere: Calculate the spherical metric in r,theta(q), phi(p)
        ADMAnalysis::ADMAnalysis_CurvCartToSphere: Calculate the spherical ex. curvature in r, theta(q), phi(p)
        GROUP RicciGroup: Calculate Ricci tensor, with boundary conditions
          ADMAnalysis::ADMAnalysis_Ricci: Calculate Ricci tensor, with boundary conditions
          GROUP RicciBoundariesGroup: Set Ricci tensor on the boundary
            ADMAnalysis::ADMAnalysis_Ricci_Boundaries: [level] Select boundary conditions for the Ricci tensor
            GROUP ADMAnalysis_ApplyBCs: Apply boundary conditions to the Ricci tensor
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      ADMAnalysis::ADMAnalysis_EvaltrK: Compute the trace of the extrinsic curvature and the determinant of the metric
      ADMAnalysis::ADMAnalysis_MetricCartToSphere: Calculate the spherical metric in r,theta(q), phi(p)
      ADMAnalysis::ADMAnalysis_CurvCartToSphere: Calculate the spherical ex. curvature in r, theta(q), phi(p)
      GROUP RicciGroup: Calculate Ricci tensor, with boundary conditions
        ADMAnalysis::ADMAnalysis_Ricci: Calculate Ricci tensor, with boundary conditions
        GROUP RicciBoundariesGroup: Set Ricci tensor on the boundary
          ADMAnalysis::ADMAnalysis_Ricci_Boundaries: [level] Select boundary conditions for the Ricci tensor
          GROUP ADMAnalysis_ApplyBCs: Apply boundary conditions to the Ricci tensor
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 10 iterations
INFO (IOASCII): Periodic 1D output requested for 'ADMBASE::gxx', 'ADMBASE::gxy', 'ADMBASE::gxz', 'ADMBASE::gyy', 'ADMBASE::gyz', 'ADMBASE::gzz', 'ADMBASE::kxx', 'ADMBASE::kxy', 'ADMBASE::kxz', 'ADMBASE::kyy', 'ADMBASE::kyz', 'ADMBASE::kzz', 'ADMBASE::alp', 'ADMBASE::betax', 'ADMBASE::betay', 'ADMBASE::betaz'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (IOBasic): I/O Method 'Scalar' registered: output of scalar quantities (grid scalars, reductions) to ASCII files
INFO (IOBasic): I/O Method 'Info' registered: output of scalar quantities (grid scalars, reductions) to screen
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.0000000e-01  dy=>1.0000000e-01  dz=>1.0000000e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-1.450, 1.450]  y=>[-1.450, 1.450]  z=>[-1.450, 1.450]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,29]  y=>[0,29]  z=>[0,29]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 30 30 30
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 27000   [30 x 30 x 30]
INFO (PUGH):   Maximum load skew: 0.000000
INFO (Time): Timestep set to 0.025 (courant_static)
 Brill Wave: amplitude for K :   1.0000000000000000     
 Brill Wave: center for K:   0.0000000000000000     
 Brill Wave: sigma for K:   1.0000000000000000     
 Bowen & York Momenta:  :   0.0000000000000000     
 Brill Wave: sin^n theta for K:           5
 Brill Wave: amplitude for g :   0.0000000000000000     
 Brill Wave: center for g:   0.0000000000000000     
 Brill Wave: sigma for g:   1.0000000000000000     
 Brill Wave: sin^n theta for g:           3
 -----------Retry           1
 residual =   376.40820312500000     
 --------------------------------------------------
 -----------Retry           2
 residual =   147.90021527468869     
 --------------------------------------------------
 -----------Retry           3
 residual =   58.134378465247259     
 --------------------------------------------------
 -----------Retry           4
 residual =   22.682763659616896     
 --------------------------------------------------
 -----------Retry           5
 residual =   8.0412654183596413     
 --------------------------------------------------
 -----------Retry           6
 residual =   1.9499000238029311     
 --------------------------------------------------
 -----------Retry           7
 residual =  0.29333458164400916     
 --------------------------------------------------
 -----------Retry           8
 residual =   4.6198863227192355E-002
 --------------------------------------------------
 -----------Retry           9
 residual =   2.2696263053768161E-002
 --------------------------------------------------
 -----------Retry          10
 residual =   1.3285914516059656E-002
 --------------------------------------------------
 -----------Retry          11
 residual =   7.9919818310672935E-003
 --------------------------------------------------
 -----------Retry          12
 residual =   4.8673862739902138E-003
 --------------------------------------------------
 -----------Retry          13
 residual =   2.9784435524987125E-003
 --------------------------------------------------
 -----------Retry          14
 residual =   1.8246379257836299E-003
 --------------------------------------------------
 -----------Retry          15
 residual =   1.1175714611064461E-003
 --------------------------------------------------
 -----------Retry          16
 residual =   6.8418558251147755E-004
 --------------------------------------------------
 -----------Retry          17
 residual =   4.1861963233471363E-004
 --------------------------------------------------
 -----------Retry          18
 residual =   2.5604533981390737E-004
 --------------------------------------------------
 -----------Retry          19
 residual =   1.5655314810309362E-004
 --------------------------------------------------
 -----------Retry          20
 residual =   9.5699246480841955E-005
 --------------------------------------------------
 -----------Retry          21
 residual =   5.8491872977941976E-005
 --------------------------------------------------
 -----------Retry          22
 residual =   3.5747872512162267E-005
 --------------------------------------------------
 -----------Retry          23
 residual =   2.1846748903602124E-005
 --------------------------------------------------
 -----------Retry          24
 residual =   1.3352078471546127E-005
 --------------------------------------------------
 -----------Retry          25
 residual =   8.1586200677099332E-006
 --------------------------------------------------
 -----------Retry          26
 residual =   4.9858371109216395E-006
 --------------------------------------------------
 -----------Retry          27
 residual =   3.0468499306363016E-006
 --------------------------------------------------
 -----------Retry          28
 residual =   1.8633135577082811E-006
 --------------------------------------------------
 -----------Retry          29
 residual =   1.1387532159391713E-006
 --------------------------------------------------
 -----------Retry          30
 residual =   6.9608257411077835E-007
 --------------------------------------------------
 -----------Retry          31
 residual =   4.2568681099062988E-007
 --------------------------------------------------
 -----------Retry          32
 residual =   2.6091574690660224E-007
 --------------------------------------------------
 -----------Retry          33
 residual =   1.5975785953005912E-007
 --------------------------------------------------
 -----------Retry          34
 residual =   9.6451048125364817E-008
 --------------------------------------------------
 --------------------------------------------------
 Converge at Residual =    9.6451048125364817E-008
 ADM mass:    6.6056094475411404     
 Angular momentum parameter: a/m =    0.0000000000000000     
INFO (IOBasic): Periodic scalar output requested for 'ADMBASE::gxx', 'ADMBASE::gxy', 'ADMBASE::gxz', 'ADMBASE::gyy', 'ADMBASE::gyz', 'ADMBASE::gzz', 'ADMBASE::kxx', 'ADMBASE::kxy', 'ADMBASE::kxz', 'ADMBASE::kyy', 'ADMBASE::kyz', 'ADMBASE::kzz', 'ADMBASE::alp', 'ADMBASE::betax', 'ADMBASE::betay', 'ADMBASE::betaz'
INFO (IOBasic): Periodic info output requested for 'ADMBASE::alp'
-------------------------------------------------
   it  |          | ADMBASE::alp                |
       |    t     | minimum      | maximum      |
-------------------------------------------------
     0 |    0.000 |   1.00000000 |   1.00000000 |
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Dec  7 07:46:50 UTC 2022
+ echo Done.
Done.
  Elapsed time: 1.1 s
