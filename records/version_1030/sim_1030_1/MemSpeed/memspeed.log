/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1022-630
+ date
Wed Oct 16 16:59:44 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1729097984
+ CACTUS_STARTTIME=1729097984
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.16.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.16.0
Compile date:      Oct 16 2024 (16:53:12)
Run date:          Oct 16 2024 (16:59:45+0000)
Run host:          fv-az1022-630.qszcca3gaylehey5nrg125joga.dx.internal.cloudapp.net (pid=131514)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az1022-630
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364592KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=2b8ad9c5-5186-664b-a0d0-b6ed78421685, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1025-azure, OSVersion="#26~22.04.1-Ubuntu SMP Thu Jul 11 22:33:04 UTC 2024", HostName=fv-az1022-630, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364592KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00136229 sec
      iterations=10000000... time=0.0125016 sec
      iterations=100000000... time=0.123948 sec
      iterations=900000000... time=1.11473 sec
      iterations=900000000... time=0.835457 sec
      result: 6.44522 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196942 sec
      iterations=10000000... time=0.0197273 sec
      iterations=100000000... time=0.197342 sec
      iterations=600000000... time=1.18393 sec
      result: 16.2171 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00188478 sec
      iterations=10000000... time=0.0185714 sec
      iterations=100000000... time=0.185569 sec
      iterations=600000000... time=1.1133 sec
      result: 8.62301 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000123431 sec
      iterations=10000... time=0.00124228 sec
      iterations=100000... time=0.0123582 sec
      iterations=1000000... time=0.123632 sec
      iterations=9000000... time=1.11293 sec
      result: 1.23659 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000514071 sec
      iterations=10000... time=0.00501043 sec
      iterations=100000... time=0.0503109 sec
      iterations=1000000... time=0.503723 sec
      iterations=2000000... time=1.00248 sec
      result: 5.01241 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.01e-07 sec
      iterations=10... time=3.036e-06 sec
      iterations=100... time=2.8794e-05 sec
      iterations=1000... time=0.000287107 sec
      iterations=10000... time=0.00249584 sec
      iterations=100000... time=0.0241743 sec
      iterations=1000000... time=0.24189 sec
      iterations=5000000... time=1.21006 sec
      result: 101.549 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.474e-06 sec
      iterations=10... time=5.9361e-05 sec
      iterations=100... time=0.000578022 sec
      iterations=1000... time=0.00545321 sec
      iterations=10000... time=0.051198 sec
      iterations=100000... time=0.503935 sec
      iterations=200000... time=1.00835 sec
      result: 77.9922 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=2.564e-06 sec
      iterations=10000... time=2.4777e-05 sec
      iterations=100000... time=0.000246692 sec
      iterations=1000000... time=0.00246835 sec
      iterations=10000000... time=0.0247456 sec
      iterations=100000000... time=0.247579 sec
      iterations=400000000... time=0.991019 sec
      iterations=800000000... time=1.98095 sec
      result: 0.309524 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=9.878e-06 sec
      iterations=10000... time=0.000103934 sec
      iterations=100000... time=0.00162929 sec
      iterations=1000000... time=0.016473 sec
      iterations=10000000... time=0.164838 sec
      iterations=70000000... time=1.15496 sec
      result: 2.06244 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=3e-07 sec
      iterations=10... time=2.806e-06 sec
      iterations=100... time=2.7681e-05 sec
      iterations=1000... time=0.000275906 sec
      iterations=10000... time=0.00277022 sec
      iterations=100000... time=0.0276669 sec
      iterations=1000000... time=0.278366 sec
      iterations=4000000... time=1.11384 sec
      result: 88.2565 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.424e-06 sec
      iterations=10... time=5.8128e-05 sec
      iterations=100... time=0.000563835 sec
      iterations=1000... time=0.00560816 sec
      iterations=10000... time=0.0494263 sec
      iterations=100000... time=0.472721 sec
      iterations=200000... time=0.945061 sec
      iterations=400000... time=1.88816 sec
      result: 83.3015 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.2422e-05 sec
      iterations=10... time=0.000321181 sec
      iterations=100... time=0.00307694 sec
      iterations=1000... time=0.0311614 sec
      iterations=10000... time=0.308767 sec
      iterations=40000... time=1.25172 sec
      result: 0.0552198 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000153066 sec
      iterations=10... time=0.00152649 sec
      iterations=100... time=0.0150728 sec
      iterations=1000... time=0.147703 sec
      iterations=7000... time=1.0307 sec
      result: 0.165638 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00371137 sec
      iterations=10... time=0.0373502 sec
      iterations=100... time=0.377549 sec
      iterations=300... time=1.14405 sec
      result: 0.409309 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00126442 sec
      iterations=10000000... time=0.0124008 sec
      iterations=100000000... time=0.123885 sec
      iterations=900000000... time=1.11617 sec
      iterations=900000000... time=0.836072 sec
      result: 6.42625 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197032 sec
      iterations=10000000... time=0.0197187 sec
      iterations=100000000... time=0.197355 sec
      iterations=600000000... time=1.18399 sec
      result: 16.2164 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.0022929 sec
      iterations=10000000... time=0.0186398 sec
      iterations=100000000... time=0.185712 sec
      iterations=600000000... time=1.11524 sec
      result: 8.60799 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124503 sec
      iterations=10000... time=0.00124577 sec
      iterations=100000... time=0.0123713 sec
      iterations=1000000... time=0.123645 sec
      iterations=9000000... time=1.11318 sec
      result: 1.23687 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000412216 sec
      iterations=10000... time=0.00393969 sec
      iterations=100000... time=0.0394296 sec
      iterations=1000000... time=0.390703 sec
      iterations=3000000... time=1.16178 sec
      result: 3.87261 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.455e-07 sec
      iterations=10... time=3.532e-06 sec
      iterations=100... time=5.5378e-05 sec
      iterations=1000... time=0.000327002 sec
      iterations=10000... time=0.00259339 sec
      iterations=100000... time=0.0242211 sec
      iterations=1000000... time=0.242865 sec
      iterations=5000000... time=1.21284 sec
      result: 101.316 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.04545e-05 sec
      iterations=10... time=6.3128e-05 sec
      iterations=100... time=0.000568529 sec
      iterations=1000... time=0.00559381 sec
      iterations=10000... time=0.0540356 sec
      iterations=100000... time=0.505977 sec
      iterations=200000... time=1.01004 sec
      result: 77.8615 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=2.9005e-06 sec
      iterations=10000... time=2.86485e-05 sec
      iterations=100000... time=0.000263092 sec
      iterations=1000000... time=0.00247014 sec
      iterations=10000000... time=0.0247305 sec
      iterations=100000000... time=0.248174 sec
      iterations=400000000... time=0.991827 sec
      iterations=800000000... time=1.98112 sec
      result: 0.30955 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.45525e-05 sec
      iterations=10000... time=0.000115161 sec
      iterations=100000... time=0.0012453 sec
      iterations=1000000... time=0.0102007 sec
      iterations=10000000... time=0.0964179 sec
      iterations=100000000... time=1.22787 sec
      result: 1.53484 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.805e-07 sec
      iterations=10... time=3.682e-06 sec
      iterations=100... time=3.53455e-05 sec
      iterations=1000... time=0.000307831 sec
      iterations=10000... time=0.00277344 sec
      iterations=100000... time=0.0268863 sec
      iterations=1000000... time=0.270342 sec
      iterations=4000000... time=1.07805 sec
      result: 91.1871 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.3495e-05 sec
      iterations=10... time=8.3832e-05 sec
      iterations=100... time=0.000678976 sec
      iterations=1000... time=0.00581596 sec
      iterations=10000... time=0.0494958 sec
      iterations=100000... time=0.462627 sec
      iterations=200000... time=0.92496 sec
      iterations=400000... time=1.86332 sec
      result: 84.412 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=6.8975e-06 sec
      iterations=10... time=8.7013e-05 sec
      iterations=100... time=0.000855926 sec
      iterations=1000... time=0.00861373 sec
      iterations=10000... time=0.0843881 sec
      iterations=100000... time=0.844395 sec
      iterations=200000... time=1.70364 sec
      result: 0.20286 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=3.8943e-05 sec
      iterations=10... time=0.000376329 sec
      iterations=100... time=0.00375269 sec
      iterations=1000... time=0.0380205 sec
      iterations=10000... time=0.383097 sec
      iterations=30000... time=1.1672 sec
      result: 0.626859 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000922857 sec
      iterations=10... time=0.010961 sec
      iterations=100... time=0.106255 sec
      iterations=1000... time=1.06804 sec
      result: 1.46146 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Oct 16 17:00:41 UTC 2024
+ echo Done.
Done.
  Elapsed time: 56.7 s
