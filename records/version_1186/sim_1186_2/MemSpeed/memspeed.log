/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
runnervmwhb2z
+ date
Thu Oct  9 22:20:35 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1760048435
+ CACTUS_STARTTIME=1760048435
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.18.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.18.0
Compile date:      Oct 09 2025 (21:51:51)
Run date:          Oct 09 2025 (22:20:36+0000)
Run host:          runnervmwhb2z.ahl4oruynuculdmbolorkmdlve.cx.internal.cloudapp.net (pid=144908)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.10.0, API version 0x20800
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: runnervmwhb2z
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16379472KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=d59158e3-f87c-884d-a448-b6be0ced53dd, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=02/27/2023, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/hosted-compute-agent.service, OSName=Linux, OSRelease=6.11.0-1018-azure, OSVersion="#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025", HostName=runnervmwhb2z, Architecture=x86_64, hwlocVersion=2.10.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16379472KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=17, CPUModel="AMD EPYC 9V74 80-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=1024KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=1024KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2-3} P#{2-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 8 stride 131072, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00145233 sec
      iterations=10000000... time=0.0141148 sec
      iterations=100000000... time=0.140783 sec
      iterations=800000000... time=1.12578 sec
      iterations=800000000... time=0.845232 sec
      result: 5.70313 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00220691 sec
      iterations=10000000... time=0.0219702 sec
      iterations=100000000... time=0.219676 sec
      iterations=500000000... time=1.09763 sec
      result: 14.5769 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00180101 sec
      iterations=10000000... time=0.0176206 sec
      iterations=100000000... time=0.176283 sec
      iterations=600000000... time=1.06296 sec
      result: 9.03141 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000142715 sec
      iterations=10000... time=0.00142603 sec
      iterations=100000... time=0.0141032 sec
      iterations=1000000... time=0.140703 sec
      iterations=8000000... time=1.1257 sec
      result: 1.40712 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000728587 sec
      iterations=10000... time=0.00739943 sec
      iterations=100000... time=0.0739148 sec
      iterations=1000000... time=0.74442 sec
      iterations=2000000... time=1.49103 sec
      result: 7.45514 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.3e-07 sec
      iterations=10... time=3.215e-06 sec
      iterations=100... time=4.9545e-05 sec
      iterations=1000... time=0.000281114 sec
      iterations=10000... time=0.00277535 sec
      iterations=100000... time=0.0278175 sec
      iterations=1000000... time=0.276499 sec
      iterations=4000000... time=1.1085 sec
      result: 88.6818 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1... time=1.4602e-05 sec
      iterations=10... time=0.000115464 sec
      iterations=100... time=0.00107045 sec
      iterations=1000... time=0.0106287 sec
      iterations=10000... time=0.105698 sec
      iterations=100000... time=1.05998 sec
      result: 74.1932 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.365e-06 sec
      iterations=10000... time=3.6275e-05 sec
      iterations=100000... time=0.000286641 sec
      iterations=1000000... time=0.00283997 sec
      iterations=10000000... time=0.0281712 sec
      iterations=100000000... time=0.28203 sec
      iterations=400000000... time=1.12824 sec
      result: 0.352574 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1000... time=8.142e-06 sec
      iterations=10000... time=9.264e-05 sec
      iterations=100000... time=0.000688507 sec
      iterations=1000000... time=0.00665196 sec
      iterations=10000000... time=0.0662394 sec
      iterations=100000000... time=0.664027 sec
      iterations=200000000... time=1.32985 sec
      result: 0.831154 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.31e-07 sec
      iterations=10... time=3.515e-06 sec
      iterations=100... time=3.339e-05 sec
      iterations=1000... time=0.000300502 sec
      iterations=10000... time=0.00283419 sec
      iterations=100000... time=0.0283498 sec
      iterations=1000000... time=0.283271 sec
      iterations=4000000... time=1.13377 sec
      result: 86.7055 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1... time=1.4391e-05 sec
      iterations=10... time=0.000115073 sec
      iterations=100... time=0.00104381 sec
      iterations=1000... time=0.0100169 sec
      iterations=10000... time=0.100016 sec
      iterations=100000... time=0.999473 sec
      iterations=200000... time=2.0006 sec
      result: 78.6194 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=4.1983e-05 sec
      iterations=10... time=0.000316557 sec
      iterations=100... time=0.00310083 sec
      iterations=1000... time=0.0329449 sec
      iterations=10000... time=0.355604 sec
      iterations=30000... time=1.11261 sec
      result: 0.0465932 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000268174 sec
      iterations=10... time=0.00317496 sec
      iterations=100... time=0.0314141 sec
      iterations=1000... time=0.317975 sec
      iterations=3000... time=0.964656 sec
      iterations=6000... time=1.90256 sec
      result: 0.159742 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00433705 sec
      iterations=10... time=0.0434697 sec
      iterations=100... time=0.440004 sec
      iterations=200... time=0.864571 sec
      iterations=400... time=1.7267 sec
      result: 0.361591 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00142729 sec
      iterations=10000000... time=0.0140707 sec
      iterations=100000000... time=0.140553 sec
      iterations=800000000... time=1.12478 sec
      iterations=800000000... time=0.844149 sec
      result: 5.70135 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00220487 sec
      iterations=10000000... time=0.02194 sec
      iterations=100000000... time=0.219254 sec
      iterations=500000000... time=1.09683 sec
      result: 14.5875 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00178973 sec
      iterations=10000000... time=0.017597 sec
      iterations=100000000... time=0.17619 sec
      iterations=600000000... time=1.05579 sec
      result: 9.09274 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000142094 sec
      iterations=10000... time=0.00142778 sec
      iterations=100000... time=0.0140609 sec
      iterations=1000000... time=0.140618 sec
      iterations=8000000... time=1.12592 sec
      result: 1.4074 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000694466 sec
      iterations=10000... time=0.00667305 sec
      iterations=100000... time=0.0661189 sec
      iterations=1000000... time=0.660772 sec
      iterations=2000000... time=1.32548 sec
      result: 6.62739 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.005e-07 sec
      iterations=10... time=3.26e-06 sec
      iterations=100... time=3.2219e-05 sec
      iterations=1000... time=0.000281569 sec
      iterations=10000... time=0.00277579 sec
      iterations=100000... time=0.0276884 sec
      iterations=1000000... time=0.276281 sec
      iterations=4000000... time=1.10568 sec
      result: 88.9078 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1... time=1.1868e-05 sec
      iterations=10... time=0.000117662 sec
      iterations=100... time=0.00105094 sec
      iterations=1000... time=0.0103313 sec
      iterations=10000... time=0.10314 sec
      iterations=100000... time=1.03167 sec
      result: 76.229 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.5255e-06 sec
      iterations=10000... time=3.56895e-05 sec
      iterations=100000... time=0.000301229 sec
      iterations=1000000... time=0.00283066 sec
      iterations=10000000... time=0.028144 sec
      iterations=100000000... time=0.281899 sec
      iterations=400000000... time=1.12635 sec
      result: 0.351983 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1000... time=9.5245e-06 sec
      iterations=10000... time=7.5173e-05 sec
      iterations=100000... time=0.000681997 sec
      iterations=1000000... time=0.00670025 sec
      iterations=10000000... time=0.0669026 sec
      iterations=100000000... time=0.668708 sec
      iterations=200000000... time=1.33736 sec
      result: 0.835851 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.06e-07 sec
      iterations=10... time=3.42e-06 sec
      iterations=100... time=3.37405e-05 sec
      iterations=1000... time=0.00028918 sec
      iterations=10000... time=0.0028461 sec
      iterations=100000... time=0.0283002 sec
      iterations=1000000... time=0.283283 sec
      iterations=4000000... time=1.13318 sec
      result: 86.7509 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1... time=1.43315e-05 sec
      iterations=10... time=0.000114763 sec
      iterations=100... time=0.000994834 sec
      iterations=1000... time=0.00973339 sec
      iterations=10000... time=0.097387 sec
      iterations=100000... time=0.972646 sec
      iterations=200000... time=1.94867 sec
      result: 80.7147 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L2 cache (for 2 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 886 nsec
    MPI bandwidth: 11.763 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):  10
INFO (PUGH):  1
INFO (PUGH): 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Oct  9 22:21:22 UTC 2025
+ echo Done.
Done.
  Elapsed time: 46.4 s
