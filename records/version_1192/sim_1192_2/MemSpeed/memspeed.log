/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
runnervmwhb2z
+ date
Wed Oct 15 14:21:55 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1760538115
+ CACTUS_STARTTIME=1760538115
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.18.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.18.0
Compile date:      Oct 15 2025 (13:54:01)
Run date:          Oct 15 2025 (14:21:55+0000)
Run host:          runnervmwhb2z.zrmaal2pbohupgkitq0opsvvsh.ex.internal.cloudapp.net (pid=145454)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.10.0, API version 0x20800
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: runnervmwhb2z
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16379468KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=9dee2f7e-f406-fe4d-bfc9-5d29288aa34f, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=02/27/2023, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/hosted-compute-agent.service, OSName=Linux, OSRelease=6.11.0-1018-azure, OSVersion="#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025", HostName=runnervmwhb2z, Architecture=x86_64, hwlocVersion=2.10.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16379468KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=17, CPUModel="AMD EPYC 9V74 80-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=1024KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=1024KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2-3} P#{2-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 8 stride 131072, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00142413 sec
      iterations=10000000... time=0.0140848 sec
      iterations=100000000... time=0.140698 sec
      iterations=800000000... time=1.12683 sec
      iterations=800000000... time=0.843911 sec
      result: 5.65537 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00219912 sec
      iterations=10000000... time=0.0219619 sec
      iterations=100000000... time=0.219442 sec
      iterations=500000000... time=1.0971 sec
      result: 14.5839 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00180348 sec
      iterations=10000000... time=0.0176459 sec
      iterations=100000000... time=0.177639 sec
      iterations=600000000... time=1.05806 sec
      result: 9.07324 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000142265 sec
      iterations=10000... time=0.00141546 sec
      iterations=100000... time=0.0140948 sec
      iterations=1000000... time=0.140846 sec
      iterations=8000000... time=1.12582 sec
      result: 1.40728 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000847727 sec
      iterations=10000... time=0.00816115 sec
      iterations=100000... time=0.0812952 sec
      iterations=1000000... time=0.810937 sec
      iterations=2000000... time=1.61183 sec
      result: 8.05913 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.31e-07 sec
      iterations=10... time=3.706e-06 sec
      iterations=100... time=3.1408e-05 sec
      iterations=1000... time=0.000281254 sec
      iterations=10000... time=0.00279639 sec
      iterations=100000... time=0.0277261 sec
      iterations=1000000... time=0.276385 sec
      iterations=4000000... time=1.10619 sec
      result: 88.867 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1... time=1.8578e-05 sec
      iterations=10... time=0.000118829 sec
      iterations=100... time=0.00103241 sec
      iterations=1000... time=0.0102259 sec
      iterations=10000... time=0.101495 sec
      iterations=100000... time=1.01797 sec
      result: 77.2546 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.796e-06 sec
      iterations=10000... time=3.2219e-05 sec
      iterations=100000... time=0.000289817 sec
      iterations=1000000... time=0.00282861 sec
      iterations=10000000... time=0.0282185 sec
      iterations=100000000... time=0.281651 sec
      iterations=400000000... time=1.12732 sec
      result: 0.352286 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1000... time=8.733e-06 sec
      iterations=10000... time=7.9469e-05 sec
      iterations=100000... time=0.000691992 sec
      iterations=1000000... time=0.0066562 sec
      iterations=10000000... time=0.0663575 sec
      iterations=100000000... time=0.663791 sec
      iterations=200000000... time=1.32897 sec
      result: 0.830607 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.1e-07 sec
      iterations=10... time=3.595e-06 sec
      iterations=100... time=3.1808e-05 sec
      iterations=1000... time=0.000376967 sec
      iterations=10000... time=0.00307179 sec
      iterations=100000... time=0.0311158 sec
      iterations=1000000... time=0.296251 sec
      iterations=4000000... time=1.16492 sec
      result: 84.3873 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*786432 bytes):
      iterations=1... time=2.1813e-05 sec
      iterations=10... time=0.000117908 sec
      iterations=100... time=0.000987086 sec
      iterations=1000... time=0.00970041 sec
      iterations=10000... time=0.0970521 sec
      iterations=100000... time=0.975145 sec
      iterations=200000... time=1.95689 sec
      result: 80.3756 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=5.0686e-05 sec
      iterations=10... time=0.000390198 sec
      iterations=100... time=0.003587 sec
      iterations=1000... time=0.0366865 sec
      iterations=10000... time=0.356565 sec
      iterations=30000... time=1.06253 sec
      result: 0.0487894 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000283597 sec
      iterations=10... time=0.00295624 sec
      iterations=100... time=0.0282762 sec
      iterations=1000... time=0.28305 sec
      iterations=4000... time=1.13917 sec
      result: 0.177859 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00407826 sec
      iterations=10... time=0.0389376 sec
      iterations=100... time=0.38809 sec
      iterations=300... time=1.185 sec
      result: 0.395162 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.0014114 sec
      iterations=10000000... time=0.0140734 sec
      iterations=100000000... time=0.140547 sec
      iterations=800000000... time=1.12393 sec
      iterations=800000000... time=0.843286 sec
      result: 5.70108 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00219283 sec
      iterations=10000000... time=0.0219116 sec
      iterations=100000000... time=0.219207 sec
      iterations=500000000... time=1.09605 sec
      result: 14.5979 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00178965 sec
      iterations=10000000... time=0.0176435 sec
      iterations=100000000... time=0.175793 sec
      iterations=600000000... time=1.05658 sec
      result: 9.08591 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000142199 sec
      iterations=10000... time=0.00141269 sec
      iterations=100000... time=0.0140806 sec
      iterations=1000000... time=0.140767 sec
      iterations=8000000... time=1.12533 sec
      result: 1.40667 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.00062999 sec
      iterations=10000... time=0.00619687 sec
      iterations=100000... time=0.0614231 sec
      iterations=1000000... time=0.612342 sec
      iterations=2000000... time=1.23064 sec
      result: 6.15321 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.605e-07 sec
      iterations=10... time=3.3245e-06 sec
      iterations=100... time=3.2789e-05 sec
      iterations=1000... time=0.000281975 sec
      iterations=10000... time=0.0027932 sec
      iterations=100000... time=0.0276233 sec
      iterations=1000000... time=0.27608 sec
      iterations=4000000... time=1.1151 sec
      result: 88.1574 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1... time=1.57085e-05 sec
      iterations=10... time=0.000114362 sec
      iterations=100... time=0.00101485 sec
      iterations=1000... time=0.00994757 sec
      iterations=10000... time=0.0992976 sec
      iterations=100000... time=1.01456 sec
      result: 77.5145 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.8455e-06 sec
      iterations=10000... time=3.48225e-05 sec
      iterations=100000... time=0.000288585 sec
      iterations=1000000... time=0.00283062 sec
      iterations=10000000... time=0.0282045 sec
      iterations=100000000... time=0.281332 sec
      iterations=400000000... time=1.12511 sec
      result: 0.351596 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1000... time=1.3034e-05 sec
      iterations=10000... time=8.3491e-05 sec
      iterations=100000... time=0.000670194 sec
      iterations=1000000... time=0.0066937 sec
      iterations=10000000... time=0.066771 sec
      iterations=100000000... time=0.668412 sec
      iterations=200000000... time=1.33931 sec
      result: 0.83707 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.60001e-07 sec
      iterations=10... time=3.345e-06 sec
      iterations=100... time=3.42965e-05 sec
      iterations=1000... time=0.000288099 sec
      iterations=10000... time=0.00285812 sec
      iterations=100000... time=0.0284281 sec
      iterations=1000000... time=0.284491 sec
      iterations=4000000... time=1.13768 sec
      result: 86.4072 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*786432 bytes):
      iterations=1... time=1.37055e-05 sec
      iterations=10... time=0.000115259 sec
      iterations=100... time=0.000955449 sec
      iterations=1000... time=0.00940365 sec
      iterations=10000... time=0.0951537 sec
      iterations=100000... time=0.940894 sec
      iterations=200000... time=1.90688 sec
      result: 82.4836 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L2 cache (for 2 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 721 nsec
    MPI bandwidth: 12.7691 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):  10
INFO (PUGH):  1
INFO (PUGH): 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Oct 15 14:22:38 UTC 2025
+ echo Done.
Done.
  Elapsed time: 43.4 s
