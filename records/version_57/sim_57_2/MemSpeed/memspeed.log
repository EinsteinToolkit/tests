/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az214-48
+ date
Wed Aug 11 19:23:21 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1628709801
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Aug 11 2021 (18:58:53)
Run date:          Aug 11 2021 (19:23:22+0000)
Run host:          fv-az214-48.1aolvm3ja0pufmfb1mjwo52tze.gx.internal.cloudapp.net (pid=107013)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az214-48
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120800KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=fd0c74df-a7df-7740-a04e-bafcb8029998, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1039-azure, OSVersion="#42~20.04.1-Ubuntu SMP Thu Jul 15 14:11:07 UTC 2021", HostName=fv-az214-48, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120800KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=85, CPUModel="Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz", CPUStepping=7)
    L3Cache L#0: (P#-1, size=36608KB, linesize=64, ways=11, Inclusive=0)
      L2Cache L#0: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 16 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 37486592 linesize 64 associativity 11 stride 3407872, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00136023 sec
      iterations=10000000... time=0.0135573 sec
      iterations=100000000... time=0.134492 sec
      iterations=800000000... time=1.07715 sec
      iterations=800000000... time=1.07683 sec
      result: 5141.29 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00299536 sec
      iterations=10000000... time=0.0299439 sec
      iterations=100000000... time=0.299606 sec
      iterations=400000000... time=1.19817 sec
      result: 10.6829 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00185494 sec
      iterations=10000000... time=0.0185701 sec
      iterations=100000000... time=0.184943 sec
      iterations=600000000... time=1.10943 sec
      result: 8.65307 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000134702 sec
      iterations=10000... time=0.00134102 sec
      iterations=100000... time=0.0134286 sec
      iterations=1000000... time=0.134515 sec
      iterations=8000000... time=1.07627 sec
      result: 1.34534 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000729414 sec
      iterations=10000... time=0.00671783 sec
      iterations=100000... time=0.0667646 sec
      iterations=1000000... time=0.667389 sec
      iterations=2000000... time=1.34044 sec
      result: 6.70221 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.601e-06 sec
      iterations=100... time=3.1101e-05 sec
      iterations=1000... time=0.000305705 sec
      iterations=10000... time=0.00306926 sec
      iterations=100000... time=0.0306084 sec
      iterations=1000000... time=0.30666 sec
      iterations=4000000... time=1.22739 sec
      result: 80.0916 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=2.4e-05 sec
      iterations=10... time=0.000169403 sec
      iterations=100... time=0.00163483 sec
      iterations=1000... time=0.0162016 sec
      iterations=10000... time=0.16205 sec
      iterations=70000... time=1.13616 sec
      result: 48.4529 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.3e-06 sec
      iterations=10000... time=2.71e-05 sec
      iterations=100000... time=0.000278705 sec
      iterations=1000000... time=0.00268355 sec
      iterations=10000000... time=0.0270237 sec
      iterations=100000000... time=0.269088 sec
      iterations=400000000... time=1.07545 sec
      result: 0.336078 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=3.25e-05 sec
      iterations=10000... time=0.000150503 sec
      iterations=100000... time=0.00145573 sec
      iterations=1000000... time=0.0142894 sec
      iterations=10000000... time=0.143083 sec
      iterations=80000000... time=1.1441 sec
      result: 1.78766 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=2e-06 sec
      iterations=100... time=1.61e-05 sec
      iterations=1000... time=0.000156103 sec
      iterations=10000... time=0.00157913 sec
      iterations=100000... time=0.0156477 sec
      iterations=1000000... time=0.156612 sec
      iterations=7000000... time=1.09808 sec
      result: 156.666 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.49e-05 sec
      iterations=10... time=0.000309806 sec
      iterations=100... time=0.00296566 sec
      iterations=1000... time=0.0266113 sec
      iterations=10000... time=0.179247 sec
      iterations=60000... time=0.91223 sec
      iterations=120000... time=1.81393 sec
      result: 52.0261 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=3.0601e-05 sec
      iterations=10... time=0.000232405 sec
      iterations=100... time=0.00235214 sec
      iterations=1000... time=0.0235597 sec
      iterations=10000... time=0.235488 sec
      iterations=50000... time=1.1782 sec
      result: 0.0733322 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000207804 sec
      iterations=10... time=0.00198814 sec
      iterations=100... time=0.0192707 sec
      iterations=1000... time=0.192742 sec
      iterations=6000... time=1.15573 sec
      result: 0.262967 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00488279 sec
      iterations=10... time=0.0522549 sec
      iterations=100... time=0.506801 sec
      iterations=200... time=1.00197 sec
      result: 0.353616 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00133803 sec
      iterations=10000000... time=0.0134304 sec
      iterations=100000000... time=0.135264 sec
      iterations=800000000... time=1.07438 sec
      iterations=800000000... time=1.07376 sec
      result: 2561.39 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00299771 sec
      iterations=10000000... time=0.0298936 sec
      iterations=100000000... time=0.298957 sec
      iterations=400000000... time=1.20084 sec
      result: 10.6592 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00185629 sec
      iterations=10000000... time=0.0185201 sec
      iterations=100000000... time=0.184662 sec
      iterations=600000000... time=1.10772 sec
      result: 8.66647 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000134653 sec
      iterations=10000... time=0.00133922 sec
      iterations=100000... time=0.0134728 sec
      iterations=1000000... time=0.137807 sec
      iterations=8000000... time=1.07475 sec
      result: 1.34344 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000626813 sec
      iterations=10000... time=0.00564561 sec
      iterations=100000... time=0.055909 sec
      iterations=1000000... time=0.558887 sec
      iterations=2000000... time=1.12491 sec
      result: 5.62454 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=6.5e-07 sec
      iterations=10... time=3.35e-06 sec
      iterations=100... time=3.0901e-05 sec
      iterations=1000... time=0.000305955 sec
      iterations=10000... time=0.00306996 sec
      iterations=100000... time=0.0306153 sec
      iterations=1000000... time=0.306095 sec
      iterations=4000000... time=1.23038 sec
      result: 79.8975 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=2.18e-05 sec
      iterations=10... time=0.000164804 sec
      iterations=100... time=0.00159148 sec
      iterations=1000... time=0.0159084 sec
      iterations=10000... time=0.158926 sec
      iterations=70000... time=1.11393 sec
      result: 49.4198 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.35e-06 sec
      iterations=10000... time=2.71e-05 sec
      iterations=100000... time=0.000268155 sec
      iterations=1000000... time=0.0026898 sec
      iterations=10000000... time=0.0268719 sec
      iterations=100000000... time=0.268769 sec
      iterations=400000000... time=1.07518 sec
      result: 0.335993 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=3.9551e-05 sec
      iterations=10000... time=0.000155053 sec
      iterations=100000... time=0.00142818 sec
      iterations=1000000... time=0.0142902 sec
      iterations=10000000... time=0.142541 sec
      iterations=80000000... time=1.14225 sec
      result: 1.78477 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=4.5e-07 sec
      iterations=10... time=1.85e-06 sec
      iterations=100... time=1.55e-05 sec
      iterations=1000... time=0.000151903 sec
      iterations=10000... time=0.00151793 sec
      iterations=100000... time=0.0151597 sec
      iterations=1000000... time=0.151983 sec
      iterations=7000000... time=1.06295 sec
      result: 161.844 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=3.105e-05 sec
      iterations=10... time=0.000295306 sec
      iterations=100... time=0.0027859 sec
      iterations=1000... time=0.0250499 sec
      iterations=10000... time=0.176653 sec
      iterations=60000... time=0.947609 sec
      iterations=120000... time=1.75476 sec
      result: 53.7804 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=9.401e-06 sec
      iterations=10... time=9.2952e-05 sec
      iterations=100... time=0.000921368 sec
      iterations=1000... time=0.00930838 sec
      iterations=10000... time=0.0930908 sec
      iterations=100000... time=0.932128 sec
      iterations=200000... time=1.86986 sec
      result: 0.0779736 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*29^3 grid points, 2*390224 bytes):
      iterations=1... time=0.000121752 sec
      iterations=10... time=0.00116042 sec
      iterations=100... time=0.0114806 sec
      iterations=1000... time=0.114416 sec
      iterations=10000... time=1.14351 sec
      result: 0.213281 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 2500 nsec
    MPI bandwidth: 3.99122 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Aug 11 19:24:07 UTC 2021
+ echo Done.
Done.
  Elapsed time: 45.7 s
