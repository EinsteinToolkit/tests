/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az202-62
+ date
Thu May  6 22:29:02 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1620340142
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      May 06 2021 (21:59:07)
Run date:          May 06 2021 (22:29:03+0000)
Run host:          fv-az202-62.x5bs3noffpyuppkqksaqwftqkh.gx.internal.cloudapp.net (pid=108326)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az202-62
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7121236KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=ed486c44-85bc-5847-8810-e31ba85803ca, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.4.0-1046-azure, OSVersion="#48-Ubuntu SMP Tue Apr 13 07:18:42 UTC 2021", HostName=fv-az202-62, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7121236KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00323254 sec
      iterations=10000000... time=0.0319398 sec
      iterations=100000000... time=0.35853 sec
      iterations=300000000... time=1.01547 sec
      iterations=300000000... time=0.748209 sec
      result: 2.24504 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00328614 sec
      iterations=10000000... time=0.0355014 sec
      iterations=100000000... time=0.356229 sec
      iterations=300000000... time=1.06007 sec
      result: 9.05605 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00245103 sec
      iterations=10000000... time=0.0252705 sec
      iterations=100000000... time=0.22518 sec
      iterations=500000000... time=1.13872 sec
      result: 7.02541 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000155402 sec
      iterations=10000... time=0.00154322 sec
      iterations=100000... time=0.0161296 sec
      iterations=1000000... time=0.16637 sec
      iterations=7000000... time=1.19646 sec
      result: 1.70923 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000546307 sec
      iterations=10000... time=0.00549356 sec
      iterations=100000... time=0.0550665 sec
      iterations=1000000... time=0.569581 sec
      iterations=2000000... time=1.12914 sec
      result: 5.64568 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=9e-07 sec
      iterations=10... time=3.7e-06 sec
      iterations=100... time=3.03e-05 sec
      iterations=1000... time=0.000355603 sec
      iterations=10000... time=0.00352934 sec
      iterations=100000... time=0.0328806 sec
      iterations=1000000... time=0.328135 sec
      iterations=3000000... time=0.995343 sec
      iterations=6000000... time=2.02689 sec
      result: 72.7499 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=2.4e-05 sec
      iterations=10... time=5.7401e-05 sec
      iterations=100... time=0.00130721 sec
      iterations=1000... time=0.00563776 sec
      iterations=10000... time=0.0572629 sec
      iterations=100000... time=0.612712 sec
      iterations=200000... time=1.21703 sec
      result: 32.3094 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.9e-06 sec
      iterations=10000... time=3.1601e-05 sec
      iterations=100000... time=0.000337004 sec
      iterations=1000000... time=0.00329184 sec
      iterations=10000000... time=0.0329213 sec
      iterations=100000000... time=0.332877 sec
      iterations=300000000... time=1.03086 sec
      result: 0.429524 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.28e-05 sec
      iterations=10000... time=0.000216503 sec
      iterations=100000... time=0.00215482 sec
      iterations=1000000... time=0.0218017 sec
      iterations=10000000... time=0.229037 sec
      iterations=50000000... time=1.08848 sec
      result: 2.72119 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=1.1e-06 sec
      iterations=10... time=3.9e-06 sec
      iterations=100... time=3.16e-05 sec
      iterations=1000... time=0.000324903 sec
      iterations=10000... time=0.00324864 sec
      iterations=100000... time=0.0387715 sec
      iterations=1000000... time=0.345725 sec
      iterations=3000000... time=1.0488 sec
      result: 70.2975 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=9e-06 sec
      iterations=10... time=8.9701e-05 sec
      iterations=100... time=0.00090501 sec
      iterations=1000... time=0.00984881 sec
      iterations=10000... time=0.0998683 sec
      iterations=100000... time=0.964774 sec
      iterations=200000... time=1.94903 sec
      result: 20.175 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.5201e-05 sec
      iterations=10... time=0.000244603 sec
      iterations=100... time=0.00231643 sec
      iterations=1000... time=0.0238248 sec
      iterations=10000... time=0.245745 sec
      iterations=40000... time=0.991288 sec
      iterations=80000... time=1.96944 sec
      result: 0.0701926 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=2.8201e-05 sec
      iterations=10... time=0.00087701 sec
      iterations=100... time=0.00831479 sec
      iterations=1000... time=0.0865235 sec
      iterations=10000... time=0.875892 sec
      iterations=20000... time=1.75654 sec
      result: 0.138534 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00643317 sec
      iterations=10... time=0.0650755 sec
      iterations=100... time=0.672229 sec
      iterations=200... time=1.38651 sec
      result: 0.354902 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00310508 sec
      iterations=10000000... time=0.032782 sec
      iterations=100000000... time=0.332291 sec
      iterations=300000000... time=1.00063 sec
      iterations=300000000... time=0.742881 sec
      result: 2.32782 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00340359 sec
      iterations=10000000... time=0.0356059 sec
      iterations=100000000... time=0.347083 sec
      iterations=300000000... time=1.04842 sec
      result: 9.15665 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00210747 sec
      iterations=10000000... time=0.0220114 sec
      iterations=100000000... time=0.220959 sec
      iterations=500000000... time=1.13107 sec
      result: 7.07296 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000155252 sec
      iterations=10000... time=0.00172592 sec
      iterations=100000... time=0.0162543 sec
      iterations=1000000... time=0.169871 sec
      iterations=6000000... time=1.01216 sec
      result: 1.68693 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000560056 sec
      iterations=10000... time=0.00551601 sec
      iterations=100000... time=0.0582996 sec
      iterations=1000000... time=0.584745 sec
      iterations=2000000... time=1.16768 sec
      result: 5.83841 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=9e-07 sec
      iterations=10... time=3.6e-06 sec
      iterations=100... time=3.1301e-05 sec
      iterations=1000... time=0.000336104 sec
      iterations=10000... time=0.00320629 sec
      iterations=100000... time=0.0332494 sec
      iterations=1000000... time=0.332526 sec
      iterations=3000000... time=0.992119 sec
      iterations=6000000... time=1.98472 sec
      result: 74.2956 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=7.55e-06 sec
      iterations=10... time=5.4801e-05 sec
      iterations=100... time=0.000636357 sec
      iterations=1000... time=0.00556196 sec
      iterations=10000... time=0.0576092 sec
      iterations=100000... time=0.564779 sec
      iterations=200000... time=1.14249 sec
      result: 34.4176 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.95e-06 sec
      iterations=10000... time=2.9401e-05 sec
      iterations=100000... time=0.000288603 sec
      iterations=1000000... time=0.0042459 sec
      iterations=10000000... time=0.0326165 sec
      iterations=100000000... time=0.331823 sec
      iterations=300000000... time=1.04704 sec
      result: 0.436267 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.295e-05 sec
      iterations=10000... time=0.000195453 sec
      iterations=100000... time=0.00192617 sec
      iterations=1000000... time=0.0198184 sec
      iterations=10000000... time=0.217374 sec
      iterations=50000000... time=1.02316 sec
      result: 2.55789 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=1.05e-06 sec
      iterations=10... time=3.75e-06 sec
      iterations=100... time=4.82505e-05 sec
      iterations=1000... time=0.000332703 sec
      iterations=10000... time=0.00329339 sec
      iterations=100000... time=0.0340426 sec
      iterations=1000000... time=0.340852 sec
      iterations=3000000... time=1.03853 sec
      result: 70.9926 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=2.5051e-05 sec
      iterations=10... time=0.000105251 sec
      iterations=100... time=0.00092816 sec
      iterations=1000... time=0.00974236 sec
      iterations=10000... time=0.0992582 sec
      iterations=100000... time=1.00292 sec
      result: 19.6036 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=8.65e-06 sec
      iterations=10... time=8.0101e-05 sec
      iterations=100... time=0.00087446 sec
      iterations=1000... time=0.00863485 sec
      iterations=10000... time=0.0866237 sec
      iterations=100000... time=0.894769 sec
      iterations=200000... time=1.77869 sec
      result: 0.0819706 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=4.595e-05 sec
      iterations=10... time=0.000465755 sec
      iterations=100... time=0.00470205 sec
      iterations=1000... time=0.0513573 sec
      iterations=10000... time=0.508812 sec
      iterations=20000... time=1.0258 sec
      result: 0.113706 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 2100 nsec
    MPI bandwidth: 3.91148 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu May  6 22:29:55 UTC 2021
+ echo Done.
Done.
  Elapsed time: 52.7 s
