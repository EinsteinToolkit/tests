/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/AHFinderDirect
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/AHFinderDirect/output-0000-active
+ hostname
fv-az801-431
+ date
Fri Nov 17 20:06:33 UTC 2023
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1700251593
+ CACTUS_STARTTIME=1700251593
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/EinsteinAnalysis/AHFinderDirect/test/Kerr-selection-areal-radius-definition-expansion-product.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.14.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.14.0
Compile date:      Nov 17 2023 (20:05:42)
Run date:          Nov 17 2023 (20:06:33+0000)
Run host:          fv-az801-431.jplelvhbra5e3n4vadtwxrmqqe.phxx.internal.cloudapp.net (pid=127744)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/AHFinderDirect
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/EinsteinAnalysis/AHFinderDirect/test/Kerr-selection-areal-radius-definition-expansion-product.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->PUGH CartGrid3D CoordBase SymBase ADMBase StaticConformal CoordGauge SpaceMask Exact IOUtil SphericalSurface LocalInterp AEILocalInterp PUGHInterp PUGHReduce AHFinderDirect<---
Thorn AHFinderDirect requests automatic activation of HDF5
Thorn PUGH requests automatic activation of MPI
Thorn PUGH requests automatic activation of Vectors
Thorn HDF5 requests automatic activation of zlib
Thorn MPI requests automatic activation of hwloc
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn AEILocalInterp...Success -> active implementation AEILocalInterp
Activating thorn AHFinderDirect...Success -> active implementation AHFinderDirect
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn Exact...Success -> active implementation exact
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHInterp...Success -> active implementation Interp
Activating thorn PUGHReduce...Success -> active implementation Reduce
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn SphericalSurface...Success -> active implementation SphericalSurface
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      PUGH::Driver_Startup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      IOUtil::IOUtil_Startup: Startup routine
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      PUGHInterp::PUGHInterp_Startup: PUGHInterp startup routine
      PUGHReduce::PUGHReduce_Startup: Startup routine
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Exact::Exact_ParamCheck: [global] do consistency checks on our parameters
      SphericalSurface::SphericalSurface_ParamCheck: [global] Check that all surface names are unique
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        AHFinderDirect::AHFinderDirect_setup: [global] setup data structures
        PUGH::PUGH_Report: Report on PUGH set up
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          Exact::Exact__decode_pars: decode/copy thorn Exact parameters into grid scalars
          Exact::Exact__initialize: Set initial data from exact solution on a trivial slice
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          Exact::Exact__gauge: Set initial lapse and/or shift from exact solution on a trivial slice
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        AHFinderDirect::AHFinderDirect_import_mask: [global] [loop-local] import the excision mask
        AHFinderDirect::AHFinderDirect_find_horizons: [global] find apparent horizon(s) after this time step
        AHFinderDirect::AHFinderDirect_store: [global] store apparent horizon(s) into spherical surface(s)
        AHFinderDirect::AHFinderDirect_save: [global] save apparent horizon(s) into Cactus variables
        AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOff: Set the dtlapse_state variable to 0
        ADMBase::ADMBase_SetDtShiftStateOff: Set the dtshift_state variable to 0
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        AHFinderDirect::AHFinderDirect_setup: [global] setup data structures
        PUGH::PUGH_Report: Report on PUGH set up
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        AHFinderDirect::AHFinderDirect_recover: [global] import horizon data from Cactus variables
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
      AHFinderDirect::AHFinderDirect_import_mask: [global] [loop-local] import the excision mask
      AHFinderDirect::AHFinderDirect_find_horizons: [global] find apparent horizon(s) after this time step
      AHFinderDirect::AHFinderDirect_store: [global] store apparent horizon(s) into spherical surface(s)
      AHFinderDirect::AHFinderDirect_save: [global] save apparent horizon(s) into Cactus variables
      AHFinderDirect::AHFinderDirect_maybe_do_masks: set mask(s) based on apparent horizon position(s)
      SphericalSurface::SphericalSurface_Set: [global] Set surface radii
      GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
        SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    cactus_sim: /home/runner/work/tests/tests/master/configs/sim/build/Cactus/main/RDWR.cc:332: int cctki_RDWR::CCTK_HasAccess(const cGH*, int): Assertion `current_function->RDWR' failed.
[fv-az801-431:127744] *** Process received signal ***
[fv-az801-431:127744] Signal: Aborted (6)
[fv-az801-431:127744] Signal code:  (-6)
[fv-az801-431:127744] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x42520)[0x7f3b0a042520]
[fv-az801-431:127744] [ 1] /lib/x86_64-linux-gnu/libc.so.6(pthread_kill+0x12c)[0x7f3b0a0969fc]
[fv-az801-431:127744] [ 2] /lib/x86_64-linux-gnu/libc.so.6(raise+0x16)[0x7f3b0a042476]
[fv-az801-431:127744] [ 3] /lib/x86_64-linux-gnu/libc.so.6(abort+0xd3)[0x7f3b0a0287f3]
[fv-az801-431:127744] [ 4] /lib/x86_64-linux-gnu/libc.so.6(+0x2871b)[0x7f3b0a02871b]
[fv-az801-431:127744] [ 5] /lib/x86_64-linux-gnu/libc.so.6(+0x39e96)[0x7f3b0a039e96]
[fv-az801-431:127744] [ 6] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(CCTK_HasAccess+0x1f4)[0x55a903afeac4]
[fv-az801-431:127744] [ 7] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(CCTKi_VarDataPtrI+0x28)[0x55a903af84c8]
[fv-az801-431:127744] [ 8] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(Vectors_Test+0x3a)[0x55a903a2c95a]
[fv-az801-431:127744] [ 9] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(CCTK_CallFunction+0xd6)[0x55a903aff8d6]
[fv-az801-431:127744] [10] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(+0x2b58f84)[0x55a903afff84]
[fv-az801-431:127744] [11] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(+0x2b5fae9)[0x55a903b06ae9]
[fv-az801-431:127744] [12] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(CCTKi_DoScheduleTraverse+0x84)[0x55a903b06d94]
[fv-az801-431:127744] [13] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(+0x2b58cd1)[0x55a903affcd1]
[fv-az801-431:127744] [14] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(CCTK_ScheduleTraverse+0xee)[0x55a903b00b0e]
[fv-az801-431:127744] [15] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(CCTKi_ScheduleTraverseGHExtensions+0x3c)[0x55a903af497c]
[fv-az801-431:127744] [16] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(CactusDefaultInitialise+0xac)[0x55a903aefecc]
[fv-az801-431:127744] [17] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(main+0x49)[0x55a9017aba89]
[fv-az801-431:127744] [18] /lib/x86_64-linux-gnu/libc.so.6(+0x29d90)[0x7f3b0a029d90]
[fv-az801-431:127744] [19] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0x80)[0x7f3b0a029e40]
[fv-az801-431:127744] [20] /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim(_start+0x25)[0x55a901816ed5]
[fv-az801-431:127744] *** End of error message ***
/home/runner/simulations/TestJob01_temp_1/output-0000/SIMFACTORY/RunScript: line 36: 127744 Aborted                 (core dumped) /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 ${TESTSUITE_PARFILE}
  Elapsed time: 0.8 s
