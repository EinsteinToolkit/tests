/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az200-406
+ date
Sun May  9 21:52:08 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1620597128
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      May 09 2021 (21:43:45)
Run date:          May 09 2021 (21:52:08+0000)
Run host:          fv-az200-406.swdxaxenvgxe1kqentp15g1mgd.jx.internal.cloudapp.net (pid=101437)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az200-406
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7121236KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=cdb22fc4-6586-6347-ac27-8f432ca85abb, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.4.0-1046-azure, OSVersion="#48-Ubuntu SMP Tue Apr 13 07:18:42 UTC 2021", HostName=fv-az200-406, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7121236KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00327 sec
      iterations=10000000... time=0.0325567 sec
      iterations=100000000... time=0.324885 sec
      iterations=300000000... time=0.974808 sec
      iterations=600000000... time=1.94475 sec
      iterations=600000000... time=1.46385 sec
      result: 2.49529 GHz
    CPU floating point performance:
      iterations=1000000... time=0.0033852 sec
      iterations=10000000... time=0.0335179 sec
      iterations=100000000... time=0.341964 sec
      iterations=300000000... time=1.03649 sec
      result: 9.26201 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.0025147 sec
      iterations=10000000... time=0.0210541 sec
      iterations=100000000... time=0.217034 sec
      iterations=500000000... time=1.12151 sec
      result: 7.13323 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.0001554 sec
      iterations=10000... time=0.0015542 sec
      iterations=100000... time=0.0191593 sec
      iterations=1000000... time=0.163398 sec
      iterations=7000000... time=1.1472 sec
      result: 1.63885 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.0006096 sec
      iterations=10000... time=0.0049074 sec
      iterations=100000... time=0.0577508 sec
      iterations=1000000... time=0.563932 sec
      iterations=2000000... time=1.0909 sec
      result: 5.4545 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.2e-06 sec
      iterations=100... time=2.98e-05 sec
      iterations=1000... time=0.0003197 sec
      iterations=10000... time=0.0032476 sec
      iterations=100000... time=0.0316688 sec
      iterations=1000000... time=0.328111 sec
      iterations=3000000... time=0.984828 sec
      iterations=6000000... time=1.94815 sec
      result: 75.6903 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=6.7e-06 sec
      iterations=10... time=4.9e-05 sec
      iterations=100... time=0.0005023 sec
      iterations=1000... time=0.0052979 sec
      iterations=10000... time=0.0526847 sec
      iterations=100000... time=0.544203 sec
      iterations=200000... time=1.12287 sec
      result: 35.0189 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.7e-06 sec
      iterations=10000... time=5.33e-05 sec
      iterations=100000... time=0.000276899 sec
      iterations=1000000... time=0.0030502 sec
      iterations=10000000... time=0.0321476 sec
      iterations=100000000... time=0.32331 sec
      iterations=300000000... time=0.994146 sec
      iterations=600000000... time=1.99894 sec
      result: 0.416446 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=2.28e-05 sec
      iterations=10000... time=0.000226 sec
      iterations=100000... time=0.0020839 sec
      iterations=1000000... time=0.0198579 sec
      iterations=10000000... time=0.199524 sec
      iterations=60000000... time=1.23954 sec
      result: 2.58238 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=3.4e-06 sec
      iterations=100... time=4.8e-05 sec
      iterations=1000... time=0.000370899 sec
      iterations=10000... time=0.00318659 sec
      iterations=100000... time=0.033857 sec
      iterations=1000000... time=0.33788 sec
      iterations=3000000... time=1.04116 sec
      result: 70.8136 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=9e-06 sec
      iterations=10... time=9e-05 sec
      iterations=100... time=0.000915 sec
      iterations=1000... time=0.0094461 sec
      iterations=10000... time=0.104365 sec
      iterations=100000... time=0.994469 sec
      iterations=200000... time=2.00486 sec
      result: 19.6131 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.57e-05 sec
      iterations=10... time=0.0002613 sec
      iterations=100... time=0.0024672 sec
      iterations=1000... time=0.0244106 sec
      iterations=10000... time=0.260144 sec
      iterations=40000... time=1.01199 sec
      result: 0.0683009 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=2.99e-05 sec
      iterations=10... time=0.000837999 sec
      iterations=100... time=0.00921478 sec
      iterations=1000... time=0.100358 sec
      iterations=10000... time=0.935812 sec
      iterations=20000... time=1.81164 sec
      result: 0.134321 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00699639 sec
      iterations=10... time=0.068301 sec
      iterations=100... time=0.691928 sec
      iterations=200... time=1.37571 sec
      result: 0.357689 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00326372 sec
      iterations=10000000... time=0.0412686 sec
      iterations=100000000... time=0.333596 sec
      iterations=300000000... time=0.996862 sec
      iterations=600000000... time=1.92961 sec
      iterations=600000000... time=1.45262 sec
      result: 2.51577 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00328812 sec
      iterations=10000000... time=0.0326541 sec
      iterations=100000000... time=0.335928 sec
      iterations=300000000... time=1.01213 sec
      result: 9.48495 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00206185 sec
      iterations=10000000... time=0.0223284 sec
      iterations=100000000... time=0.223282 sec
      iterations=500000000... time=1.12375 sec
      result: 7.11902 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000157044 sec
      iterations=10000... time=0.00164383 sec
      iterations=100000... time=0.0166196 sec
      iterations=1000000... time=0.165194 sec
      iterations=7000000... time=1.17398 sec
      result: 1.67711 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000478981 sec
      iterations=10000... time=0.00566897 sec
      iterations=100000... time=0.0562763 sec
      iterations=1000000... time=0.565292 sec
      iterations=2000000... time=1.10527 sec
      result: 5.52633 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8e-07 sec
      iterations=10... time=3.25e-06 sec
      iterations=100... time=2.88e-05 sec
      iterations=1000... time=0.0003974 sec
      iterations=10000... time=0.0031546 sec
      iterations=100000... time=0.0379581 sec
      iterations=1000000... time=0.33898 sec
      iterations=3000000... time=0.996798 sec
      iterations=6000000... time=1.98781 sec
      result: 74.1801 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=7.1e-06 sec
      iterations=10... time=6.54e-05 sec
      iterations=100... time=0.00049455 sec
      iterations=1000... time=0.0050003 sec
      iterations=10000... time=0.0515291 sec
      iterations=100000... time=0.510089 sec
      iterations=200000... time=1.03271 sec
      result: 38.076 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=4.15e-06 sec
      iterations=10000... time=2.9198e-05 sec
      iterations=100000... time=0.000286936 sec
      iterations=1000000... time=0.00325144 sec
      iterations=10000000... time=0.0352672 sec
      iterations=100000000... time=0.333649 sec
      iterations=300000000... time=1.00384 sec
      result: 0.418266 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.225e-05 sec
      iterations=10000... time=0.000218399 sec
      iterations=100000... time=0.00210454 sec
      iterations=1000000... time=0.0198642 sec
      iterations=10000000... time=0.209854 sec
      iterations=50000000... time=1.01004 sec
      result: 2.52509 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=9e-07 sec
      iterations=10... time=3.8e-06 sec
      iterations=100... time=3.22e-05 sec
      iterations=1000... time=0.000380398 sec
      iterations=10000... time=0.00333578 sec
      iterations=100000... time=0.0335205 sec
      iterations=1000000... time=0.333339 sec
      iterations=3000000... time=1.02773 sec
      result: 71.7386 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=9.3e-06 sec
      iterations=10... time=9.325e-05 sec
      iterations=100... time=0.00104459 sec
      iterations=1000... time=0.0102976 sec
      iterations=10000... time=0.104607 sec
      iterations=100000... time=1.01511 sec
      result: 19.3682 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=5.55e-06 sec
      iterations=10... time=2.93495e-05 sec
      iterations=100... time=0.000352548 sec
      iterations=1000... time=0.00283029 sec
      iterations=10000... time=0.0301909 sec
      iterations=100000... time=0.315479 sec
      iterations=300000... time=0.922582 sec
      iterations=600000... time=1.85627 sec
      result: 0.235634 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=1.55e-05 sec
      iterations=10... time=0.000130999 sec
      iterations=100... time=0.00150684 sec
      iterations=1000... time=0.0146818 sec
      iterations=10000... time=0.146554 sec
      iterations=80000... time=1.20669 sec
      result: 0.386644 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00162949 sec
      iterations=10... time=0.0200933 sec
      iterations=100... time=0.212591 sec
      iterations=500... time=1.05005 sec
      result: 1.17156 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Sun May  9 21:53:12 UTC 2021
+ echo Done.
Done.
  Elapsed time: 64.8 s
