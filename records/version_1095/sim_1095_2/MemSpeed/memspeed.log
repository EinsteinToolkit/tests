/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1536-787
+ date
Fri Jan 17 20:10:26 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1737144626
+ CACTUS_STARTTIME=1737144626
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Jan 17 2025 (19:43:49)
Run date:          Jan 17 2025 (20:10:26+0000)
Run host:          fv-az1536-787.clt0scp5daoehk2t4xy1kvnmsg.bx.internal.cloudapp.net (pid=139284)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az1536-787
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364592KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=6c9bfb43-4eea-f24d-bc20-3843e28185b6, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1025-azure, OSVersion="#26~22.04.1-Ubuntu SMP Thu Jul 11 22:33:04 UTC 2024", HostName=fv-az1536-787, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364592KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2-3} P#{2-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00126168 sec
      iterations=10000000... time=0.0124981 sec
      iterations=100000000... time=0.124536 sec
      iterations=900000000... time=1.11551 sec
      iterations=900000000... time=0.836033 sec
      result: 6.44071 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197098 sec
      iterations=10000000... time=0.0197573 sec
      iterations=100000000... time=0.197296 sec
      iterations=600000000... time=1.18399 sec
      result: 16.2164 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.0018665 sec
      iterations=10000000... time=0.0185932 sec
      iterations=100000000... time=0.185751 sec
      iterations=600000000... time=1.11448 sec
      result: 8.61387 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000127548 sec
      iterations=10000... time=0.00123761 sec
      iterations=100000... time=0.0123674 sec
      iterations=1000000... time=0.123762 sec
      iterations=9000000... time=1.11401 sec
      result: 1.23779 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000614567 sec
      iterations=10000... time=0.00557043 sec
      iterations=100000... time=0.0547565 sec
      iterations=1000000... time=0.547879 sec
      iterations=2000000... time=1.08812 sec
      result: 5.44062 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.21e-07 sec
      iterations=10... time=4.97e-06 sec
      iterations=100... time=3.7921e-05 sec
      iterations=1000... time=0.000275234 sec
      iterations=10000... time=0.00252876 sec
      iterations=100000... time=0.024337 sec
      iterations=1000000... time=0.243893 sec
      iterations=5000000... time=1.21941 sec
      result: 100.77 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=8.957e-06 sec
      iterations=10... time=7.0181e-05 sec
      iterations=100... time=0.000514661 sec
      iterations=1000... time=0.0050505 sec
      iterations=10000... time=0.051517 sec
      iterations=100000... time=0.499821 sec
      iterations=200000... time=0.999549 sec
      iterations=400000... time=1.99916 sec
      result: 78.6762 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=4.278e-06 sec
      iterations=10000... time=3.1108e-05 sec
      iterations=100000... time=0.000260235 sec
      iterations=1000000... time=0.00249317 sec
      iterations=10000000... time=0.0247606 sec
      iterations=100000000... time=0.247817 sec
      iterations=400000000... time=0.992714 sec
      iterations=800000000... time=1.98813 sec
      result: 0.310645 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=2.9094e-05 sec
      iterations=10000... time=0.000142466 sec
      iterations=100000... time=0.000974116 sec
      iterations=1000000... time=0.00938804 sec
      iterations=10000000... time=0.0936661 sec
      iterations=100000000... time=0.936467 sec
      iterations=200000000... time=1.84595 sec
      result: 1.15372 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.81e-07 sec
      iterations=10... time=4.619e-06 sec
      iterations=100... time=3.211e-05 sec
      iterations=1000... time=0.000295271 sec
      iterations=10000... time=0.00277274 sec
      iterations=100000... time=0.0278544 sec
      iterations=1000000... time=0.276973 sec
      iterations=4000000... time=1.11205 sec
      result: 88.3991 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=1.617e-05 sec
      iterations=10... time=9.2302e-05 sec
      iterations=100... time=0.000541981 sec
      iterations=1000... time=0.00461609 sec
      iterations=10000... time=0.0461641 sec
      iterations=100000... time=0.452301 sec
      iterations=200000... time=0.903494 sec
      iterations=400000... time=1.80673 sec
      result: 87.056 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.9265e-05 sec
      iterations=10... time=0.000318805 sec
      iterations=100... time=0.00312422 sec
      iterations=1000... time=0.0321127 sec
      iterations=10000... time=0.318022 sec
      iterations=30000... time=0.972074 sec
      iterations=60000... time=1.86982 sec
      result: 0.0554492 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000142646 sec
      iterations=10... time=0.00142147 sec
      iterations=100... time=0.0141522 sec
      iterations=1000... time=0.146388 sec
      iterations=8000... time=1.15921 sec
      result: 0.168315 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00394766 sec
      iterations=10... time=0.0385031 sec
      iterations=100... time=0.391451 sec
      iterations=300... time=1.16997 sec
      result: 0.40024 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.0012623 sec
      iterations=10000000... time=0.0123996 sec
      iterations=100000000... time=0.12381 sec
      iterations=900000000... time=1.11665 sec
      iterations=900000000... time=0.835563 sec
      result: 6.40376 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00198115 sec
      iterations=10000000... time=0.0197364 sec
      iterations=100000000... time=0.1973 sec
      iterations=600000000... time=1.18399 sec
      result: 16.2164 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00188609 sec
      iterations=10000000... time=0.0185708 sec
      iterations=100000000... time=0.185782 sec
      iterations=600000000... time=1.11607 sec
      result: 8.60159 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000125018 sec
      iterations=10000... time=0.00123872 sec
      iterations=100000... time=0.0123756 sec
      iterations=1000000... time=0.123701 sec
      iterations=9000000... time=1.11389 sec
      result: 1.23766 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000468715 sec
      iterations=10000... time=0.00453105 sec
      iterations=100000... time=0.0447502 sec
      iterations=1000000... time=0.472286 sec
      iterations=2000000... time=0.921976 sec
      iterations=4000000... time=1.79444 sec
      result: 4.48609 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=5.11e-07 sec
      iterations=10... time=3.7315e-06 sec
      iterations=100... time=3.14135e-05 sec
      iterations=1000... time=0.000254625 sec
      iterations=10000... time=0.0024564 sec
      iterations=100000... time=0.0243905 sec
      iterations=1000000... time=0.243804 sec
      iterations=5000000... time=1.21988 sec
      result: 100.731 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.30195e-05 sec
      iterations=10... time=0.000107937 sec
      iterations=100... time=0.000638887 sec
      iterations=1000... time=0.00526223 sec
      iterations=10000... time=0.0505912 sec
      iterations=100000... time=0.500169 sec
      iterations=200000... time=0.997636 sec
      iterations=400000... time=1.99359 sec
      result: 78.8961 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.6365e-06 sec
      iterations=10000... time=3.27005e-05 sec
      iterations=100000... time=0.000256648 sec
      iterations=1000000... time=0.00250749 sec
      iterations=10000000... time=0.0247497 sec
      iterations=100000000... time=0.247523 sec
      iterations=400000000... time=0.9916 sec
      iterations=800000000... time=1.98475 sec
      result: 0.310117 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=3.98395e-05 sec
      iterations=10000... time=0.000254791 sec
      iterations=100000... time=0.00161839 sec
      iterations=1000000... time=0.012081 sec
      iterations=10000000... time=0.126136 sec
      iterations=90000000... time=1.13447 sec
      result: 1.57565 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=6.015e-07 sec
      iterations=10... time=4.539e-06 sec
      iterations=100... time=4.3401e-05 sec
      iterations=1000... time=0.000294429 sec
      iterations=10000... time=0.00278778 sec
      iterations=100000... time=0.0277424 sec
      iterations=1000000... time=0.277063 sec
      iterations=4000000... time=1.11138 sec
      result: 88.4524 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.90255e-05 sec
      iterations=10... time=0.000117514 sec
      iterations=100... time=0.000666468 sec
      iterations=1000... time=0.00472515 sec
      iterations=10000... time=0.0454229 sec
      iterations=100000... time=0.449739 sec
      iterations=200000... time=0.894746 sec
      iterations=400000... time=1.79077 sec
      result: 87.8315 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      [skipped -- too many MPI processes]
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 651 nsec
    MPI bandwidth: 8.24462 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri Jan 17 20:11:20 UTC 2025
+ echo Done.
Done.
  Elapsed time: 54.4 s
