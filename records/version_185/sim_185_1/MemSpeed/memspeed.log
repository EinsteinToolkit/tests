/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az75-661
+ date
Sun Nov 21 03:03:33 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1637463813
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Nov 21 2021 (02:56:08)
Run date:          Nov 21 2021 (03:03:34+0000)
Run host:          fv-az75-661.ozjq2hgvjyiebjvorarhoiqszb.bx.internal.cloudapp.net (pid=100351)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az75-661
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7118760KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=063c2f91-1ccc-4447-8411-266570b9410e, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.11.0-1021-azure, OSVersion="#22~20.04.1-Ubuntu SMP Fri Oct 29 01:11:25 UTC 2021", HostName=fv-az75-661, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7118760KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.002498 sec
      iterations=10000000... time=0.0259731 sec
      iterations=100000000... time=0.274158 sec
      iterations=400000000... time=1.10401 sec
      iterations=400000000... time=0.799487 sec
      result: 2.6271 GHz
    CPU floating point performance:
      iterations=1000000... time=0.0039 sec
      iterations=10000000... time=0.0285697 sec
      iterations=100000000... time=0.287747 sec
      iterations=400000000... time=1.12112 sec
      result: 11.4172 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.0018886 sec
      iterations=10000000... time=0.0189861 sec
      iterations=100000000... time=0.188454 sec
      iterations=600000000... time=1.0889 sec
      result: 8.81627 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.0001424 sec
      iterations=10000... time=0.0014191 sec
      iterations=100000... time=0.0132626 sec
      iterations=1000000... time=0.136165 sec
      iterations=8000000... time=1.09519 sec
      result: 1.36899 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.0005352 sec
      iterations=10000... time=0.0051968 sec
      iterations=100000... time=0.0429521 sec
      iterations=1000000... time=0.44975 sec
      iterations=2000000... time=0.888808 sec
      iterations=4000000... time=1.79613 sec
      result: 4.49033 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=2.7e-06 sec
      iterations=100... time=0.0001213 sec
      iterations=1000... time=0.0003126 sec
      iterations=10000... time=0.0035477 sec
      iterations=100000... time=0.0267237 sec
      iterations=1000000... time=0.273763 sec
      iterations=4000000... time=1.06669 sec
      result: 92.1577 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=5.9e-06 sec
      iterations=10... time=4.03e-05 sec
      iterations=100... time=0.0003913 sec
      iterations=1000... time=0.0039079 sec
      iterations=10000... time=0.0432928 sec
      iterations=100000... time=0.441735 sec
      iterations=200000... time=0.877299 sec
      iterations=400000... time=1.72534 sec
      result: 45.5813 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.1e-06 sec
      iterations=10000... time=2.44e-05 sec
      iterations=100000... time=0.0002513 sec
      iterations=1000000... time=0.002766 sec
      iterations=10000000... time=0.0267946 sec
      iterations=100000000... time=0.256236 sec
      iterations=400000000... time=1.09792 sec
      result: 0.343102 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=1.86e-05 sec
      iterations=10000... time=0.0001639 sec
      iterations=100000... time=0.00142 sec
      iterations=1000000... time=0.0148752 sec
      iterations=10000000... time=0.153221 sec
      iterations=70000000... time=1.13547 sec
      result: 2.02763 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=6.3e-06 sec
      iterations=100... time=6.07e-05 sec
      iterations=1000... time=0.000661801 sec
      iterations=10000... time=0.00565371 sec
      iterations=100000... time=0.0558971 sec
      iterations=1000000... time=0.541642 sec
      iterations=2000000... time=1.08852 sec
      result: 45.155 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=8.3e-06 sec
      iterations=10... time=7.99e-05 sec
      iterations=100... time=0.000806701 sec
      iterations=1000... time=0.00917171 sec
      iterations=10000... time=0.0888738 sec
      iterations=100000... time=0.918514 sec
      iterations=200000... time=1.79946 sec
      result: 21.8519 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.84e-05 sec
      iterations=10... time=0.0002301 sec
      iterations=100... time=0.0022488 sec
      iterations=1000... time=0.0218179 sec
      iterations=10000... time=0.220276 sec
      iterations=50000... time=1.14447 sec
      result: 0.0754938 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=6.43e-05 sec
      iterations=10... time=0.000467005 sec
      iterations=100... time=0.00408615 sec
      iterations=1000... time=0.0405699 sec
      iterations=10000... time=0.402055 sec
      iterations=30000... time=1.15135 sec
      result: 0.317029 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00459635 sec
      iterations=10... time=0.0529241 sec
      iterations=100... time=0.552083 sec
      iterations=200... time=1.1369 sec
      result: 0.432822 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00262333 sec
      iterations=10000000... time=0.0275094 sec
      iterations=100000000... time=0.277896 sec
      iterations=400000000... time=1.13445 sec
      iterations=400000000... time=0.85161 sec
      result: 2.82845 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00310545 sec
      iterations=10000000... time=0.0288544 sec
      iterations=100000000... time=0.295163 sec
      iterations=400000000... time=1.20322 sec
      result: 10.6381 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.0017049 sec
      iterations=10000000... time=0.018022 sec
      iterations=100000000... time=0.195385 sec
      iterations=600000000... time=1.18433 sec
      result: 8.10585 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.00017185 sec
      iterations=10000... time=0.00159031 sec
      iterations=100000... time=0.0129935 sec
      iterations=1000000... time=0.14462 sec
      iterations=8000000... time=1.16478 sec
      result: 1.45597 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000419002 sec
      iterations=10000... time=0.00535817 sec
      iterations=100000... time=0.0501781 sec
      iterations=1000000... time=0.491709 sec
      iterations=2000000... time=0.978937 sec
      iterations=4000000... time=1.99587 sec
      result: 4.98968 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.4e-06 sec
      iterations=100... time=5.27e-05 sec
      iterations=1000... time=0.000326151 sec
      iterations=10000... time=0.00262811 sec
      iterations=100000... time=0.0278063 sec
      iterations=1000000... time=0.300745 sec
      iterations=4000000... time=1.08952 sec
      result: 90.2268 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=5.75e-06 sec
      iterations=10... time=6.01e-05 sec
      iterations=100... time=0.00045575 sec
      iterations=1000... time=0.004774 sec
      iterations=10000... time=0.0478025 sec
      iterations=100000... time=0.498263 sec
      iterations=200000... time=0.971674 sec
      iterations=400000... time=1.99851 sec
      result: 39.351 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.85e-06 sec
      iterations=10000... time=2.555e-05 sec
      iterations=100000... time=0.000270952 sec
      iterations=1000000... time=0.00296107 sec
      iterations=10000000... time=0.0293689 sec
      iterations=100000000... time=0.288266 sec
      iterations=400000000... time=1.107 sec
      result: 0.345937 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=2.225e-05 sec
      iterations=10000... time=0.000209201 sec
      iterations=100000... time=0.00173956 sec
      iterations=1000000... time=0.0167812 sec
      iterations=10000000... time=0.171508 sec
      iterations=60000000... time=1.00267 sec
      result: 2.0889 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8.5e-07 sec
      iterations=10... time=4e-06 sec
      iterations=100... time=3.555e-05 sec
      iterations=1000... time=0.00038475 sec
      iterations=10000... time=0.0044058 sec
      iterations=100000... time=0.0439549 sec
      iterations=1000000... time=0.43013 sec
      iterations=3000000... time=1.27844 sec
      result: 57.6705 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=8.901e-06 sec
      iterations=10... time=0.000151053 sec
      iterations=100... time=0.000904668 sec
      iterations=1000... time=0.0100533 sec
      iterations=10000... time=0.090634 sec
      iterations=100000... time=0.924565 sec
      iterations=200000... time=1.94041 sec
      result: 20.2646 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=6.05e-06 sec
      iterations=10... time=2.94e-05 sec
      iterations=100... time=0.000258851 sec
      iterations=1000... time=0.0030219 sec
      iterations=10000... time=0.0330793 sec
      iterations=100000... time=0.293219 sec
      iterations=400000... time=1.1184 sec
      result: 0.26073 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=1.585e-05 sec
      iterations=10... time=0.00012495 sec
      iterations=100... time=0.00137335 sec
      iterations=1000... time=0.0134362 sec
      iterations=10000... time=0.148443 sec
      iterations=70000... time=0.964352 sec
      iterations=140000... time=1.9022 sec
      result: 0.429229 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00143956 sec
      iterations=10... time=0.0149846 sec
      iterations=100... time=0.165271 sec
      iterations=700... time=1.12833 sec
      result: 1.52639 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Sun Nov 21 03:04:34 UTC 2021
+ echo Done.
Done.
  Elapsed time: 61.6 s
