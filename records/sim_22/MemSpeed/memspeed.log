/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az208-195
+ date
Wed Mar 17 04:44:46 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1615956286
+ [ 1 = 1 ]
+ [ 0 -eq 0 ]
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Mar 17 2021 (04:38:01)
Run date:          Mar 17 2021 (04:44:47+0000)
Run host:          fv-az208-195.lljw5nridtvuvmqtsk0a2ehejf.cx.internal.cloudapp.net (pid=102880)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az208-195
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7121280KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=1f4a4b99-e709-a041-884a-747e083ad10b, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.4.0-1040-azure, OSVersion="#42-Ubuntu SMP Fri Feb 5 15:39:06 UTC 2021", HostName=fv-az208-195, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7121280KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-1} P#{0-1}
    OpenMP thread 1: PU set L#{0-1} P#{0-1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00241708 sec
      iterations=10000000... time=0.0245172 sec
      iterations=100000000... time=0.251142 sec
      iterations=400000000... time=1.02522 sec
      iterations=400000000... time=0.790871 sec
      result: 3.41373 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00268768 sec
      iterations=10000000... time=0.030397 sec
      iterations=100000000... time=0.271282 sec
      iterations=400000000... time=1.04619 sec
      result: 12.2349 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00166769 sec
      iterations=10000000... time=0.0204671 sec
      iterations=100000000... time=0.16673 sec
      iterations=700000000... time=1.16137 sec
      result: 9.64382 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000122599 sec
      iterations=10000... time=0.00120499 sec
      iterations=100000... time=0.0120718 sec
      iterations=1000000... time=0.12426 sec
      iterations=9000000... time=1.07652 sec
      result: 1.19614 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000483195 sec
      iterations=10000... time=0.00438875 sec
      iterations=100000... time=0.0411599 sec
      iterations=1000000... time=0.424207 sec
      iterations=3000000... time=1.26829 sec
      result: 4.22762 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=2.6e-06 sec
      iterations=100... time=2.44e-05 sec
      iterations=1000... time=0.000241597 sec
      iterations=10000... time=0.00237587 sec
      iterations=100000... time=0.0239237 sec
      iterations=1000000... time=0.253106 sec
      iterations=4000000... time=0.951915 sec
      iterations=8000000... time=2.01413 sec
      result: 97.6145 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=7.4e-06 sec
      iterations=10... time=5.0599e-05 sec
      iterations=100... time=0.000523694 sec
      iterations=1000... time=0.00420805 sec
      iterations=10000... time=0.0446921 sec
      iterations=100000... time=0.4137 sec
      iterations=300000... time=1.25388 sec
      result: 47.0401 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.199e-06 sec
      iterations=10000... time=2.47e-05 sec
      iterations=100000... time=0.000236198 sec
      iterations=1000000... time=0.00261068 sec
      iterations=10000000... time=0.0241468 sec
      iterations=100000000... time=0.240746 sec
      iterations=500000000... time=1.27257 sec
      result: 0.318143 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=1.83e-05 sec
      iterations=10000... time=0.000167199 sec
      iterations=100000... time=0.00159179 sec
      iterations=1000000... time=0.0146982 sec
      iterations=10000000... time=0.153004 sec
      iterations=70000000... time=1.04053 sec
      result: 1.8581 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=5e-07 sec
      iterations=10... time=2.8e-06 sec
      iterations=100... time=2.52e-05 sec
      iterations=1000... time=0.000248699 sec
      iterations=10000... time=0.00262348 sec
      iterations=100000... time=0.0247064 sec
      iterations=1000000... time=0.250628 sec
      iterations=4000000... time=1.01297 sec
      result: 97.0451 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=8.499e-06 sec
      iterations=10... time=8.6e-05 sec
      iterations=100... time=0.000871995 sec
      iterations=1000... time=0.00870565 sec
      iterations=10000... time=0.0867289 sec
      iterations=100000... time=0.842973 sec
      iterations=200000... time=1.603 sec
      result: 24.5301 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.47e-05 sec
      iterations=10... time=0.000212799 sec
      iterations=100... time=0.00206249 sec
      iterations=1000... time=0.0196958 sec
      iterations=10000... time=0.201975 sec
      iterations=50000... time=1.04752 sec
      result: 0.0824806 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=2.65e-05 sec
      iterations=10... time=0.000756695 sec
      iterations=100... time=0.00726666 sec
      iterations=1000... time=0.0760359 sec
      iterations=10000... time=0.731866 sec
      iterations=20000... time=1.49075 sec
      result: 0.163233 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00437837 sec
      iterations=10... time=0.0517309 sec
      iterations=100... time=0.544151 sec
      iterations=200... time=1.06689 sec
      result: 0.461222 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00253338 sec
      iterations=10000000... time=0.0251313 sec
      iterations=100000000... time=0.257301 sec
      iterations=400000000... time=1.02632 sec
      iterations=400000000... time=0.783082 sec
      result: 3.28891 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00256973 sec
      iterations=10000000... time=0.0265354 sec
      iterations=100000000... time=0.267972 sec
      iterations=400000000... time=1.0675 sec
      result: 11.9906 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00167544 sec
      iterations=10000000... time=0.0176423 sec
      iterations=100000000... time=0.167142 sec
      iterations=700000000... time=1.20375 sec
      result: 9.30425 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000121849 sec
      iterations=10000... time=0.00121524 sec
      iterations=100000... time=0.0124569 sec
      iterations=1000000... time=0.124634 sec
      iterations=9000000... time=1.13702 sec
      result: 1.26335 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000649045 sec
      iterations=10000... time=0.00424767 sec
      iterations=100000... time=0.0428829 sec
      iterations=1000000... time=0.436621 sec
      iterations=3000000... time=1.32756 sec
      result: 4.4252 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=5e-07 sec
      iterations=10... time=2.65e-06 sec
      iterations=100... time=2.445e-05 sec
      iterations=1000... time=0.000242198 sec
      iterations=10000... time=0.00242658 sec
      iterations=100000... time=0.0250763 sec
      iterations=1000000... time=0.252351 sec
      iterations=4000000... time=1.0119 sec
      result: 97.1475 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=5.6e-06 sec
      iterations=10... time=4.1699e-05 sec
      iterations=100... time=0.000410047 sec
      iterations=1000... time=0.00405347 sec
      iterations=10000... time=0.0413861 sec
      iterations=100000... time=0.43371 sec
      iterations=300000... time=1.28359 sec
      result: 45.9512 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.05e-06 sec
      iterations=10000... time=2.3849e-05 sec
      iterations=100000... time=0.000236049 sec
      iterations=1000000... time=0.00246908 sec
      iterations=10000000... time=0.0244781 sec
      iterations=100000000... time=0.249713 sec
      iterations=400000000... time=1.00744 sec
      result: 0.314825 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=1.915e-05 sec
      iterations=10000... time=0.000166698 sec
      iterations=100000... time=0.00165574 sec
      iterations=1000000... time=0.0179658 sec
      iterations=10000000... time=0.17685 sec
      iterations=60000000... time=1.07456 sec
      result: 2.23867 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8.5e-07 sec
      iterations=10... time=3.6e-06 sec
      iterations=100... time=4.32495e-05 sec
      iterations=1000... time=0.000266849 sec
      iterations=10000... time=0.00249078 sec
      iterations=100000... time=0.0255068 sec
      iterations=1000000... time=0.260913 sec
      iterations=4000000... time=1.06193 sec
      result: 92.5707 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=8.35e-06 sec
      iterations=10... time=8.325e-05 sec
      iterations=100... time=0.000833244 sec
      iterations=1000... time=0.00863454 sec
      iterations=10000... time=0.0863799 sec
      iterations=100000... time=0.844939 sec
      iterations=200000... time=1.66348 sec
      result: 23.6381 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=2.95e-06 sec
      iterations=10... time=2.515e-05 sec
      iterations=100... time=0.000260698 sec
      iterations=1000... time=0.00243213 sec
      iterations=10000... time=0.0251882 sec
      iterations=100000... time=0.244871 sec
      iterations=400000... time=0.959407 sec
      iterations=800000... time=2.0036 sec
      result: 0.291076 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=1.15e-05 sec
      iterations=10... time=0.000121999 sec
      iterations=100... time=0.00175374 sec
      iterations=1000... time=0.0128484 sec
      iterations=10000... time=0.120771 sec
      iterations=90000... time=1.08744 sec
      result: 0.482676 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00120094 sec
      iterations=10... time=0.0157629 sec
      iterations=100... time=0.166493 sec
      iterations=700... time=1.15305 sec
      result: 1.49365 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Mar 17 04:45:41 UTC 2021
+ echo Done.
Done.
  Elapsed time: 54.7 s
