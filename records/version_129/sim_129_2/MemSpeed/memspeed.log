/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az213-206
+ date
Sat Sep 25 05:20:28 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1632547228
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Sep 25 2021 (04:50:28)
Run date:          Sep 25 2021 (05:20:29+0000)
Run host:          fv-az213-206.wq3jjldsz12ede1gumgyek31ig.jx.internal.cloudapp.net (pid=108054)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az213-206
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120800KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=eceaaf71-94fa-dd48-bfec-7f6acdd6c80e, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1041-azure, OSVersion="#44~20.04.1-Ubuntu SMP Fri Aug 20 20:41:09 UTC 2021", HostName=fv-az213-206, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120800KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=79, CPUModel="Intel(R) Xeon(R) CPU E5-2673 v4 @ 2.30GHz", CPUStepping=1)
    L3Cache L#0: (P#-1, size=51200KB, linesize=64, ways=20, Inclusive=1)
      L2Cache L#0: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=256KB, linesize=64, ways=8, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 262144 linesize 64 associativity 8 stride 32768, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 52428800 linesize 64 associativity 20 stride 2621440, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00274106 sec
      iterations=10000000... time=0.0285772 sec
      iterations=100000000... time=0.287498 sec
      iterations=400000000... time=1.17981 sec
      iterations=400000000... time=0.878119 sec
      result: 2.65176 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00303016 sec
      iterations=10000000... time=0.0292281 sec
      iterations=100000000... time=0.319128 sec
      iterations=300000000... time=0.95081 sec
      iterations=600000000... time=1.90106 sec
      result: 10.0996 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00222997 sec
      iterations=10000000... time=0.0219186 sec
      iterations=100000000... time=0.207124 sec
      iterations=500000000... time=1.0242 sec
      result: 7.81094 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000184298 sec
      iterations=10000... time=0.00173358 sec
      iterations=100000... time=0.0139884 sec
      iterations=1000000... time=0.144 sec
      iterations=8000000... time=1.19018 sec
      result: 1.48773 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=0.000595592 sec
      iterations=10000... time=0.00453334 sec
      iterations=100000... time=0.0479641 sec
      iterations=1000000... time=0.48893 sec
      iterations=2000000... time=0.961591 sec
      iterations=4000000... time=2.25742 sec
      result: 5.64356 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=6e-07 sec
      iterations=10... time=3e-06 sec
      iterations=100... time=2.6299e-05 sec
      iterations=1000... time=0.000259397 sec
      iterations=10000... time=0.00268736 sec
      iterations=100000... time=0.055415 sec
      iterations=1000000... time=0.432654 sec
      iterations=3000000... time=1.21817 sec
      result: 60.5238 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=7.2e-06 sec
      iterations=10... time=3.8199e-05 sec
      iterations=100... time=0.000371395 sec
      iterations=1000... time=0.00371785 sec
      iterations=10000... time=0.0410983 sec
      iterations=100000... time=0.522608 sec
      iterations=200000... time=1.12662 sec
      result: 34.9023 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.5e-06 sec
      iterations=10000... time=2.49e-05 sec
      iterations=100000... time=0.000243597 sec
      iterations=1000000... time=0.00267667 sec
      iterations=10000000... time=0.0275751 sec
      iterations=100000000... time=0.333375 sec
      iterations=300000000... time=1.04895 sec
      result: 0.437062 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1000... time=1.8e-05 sec
      iterations=10000... time=0.000149098 sec
      iterations=100000... time=0.00170538 sec
      iterations=1000000... time=0.0177912 sec
      iterations=10000000... time=0.192072 sec
      iterations=60000000... time=1.29764 sec
      result: 2.70342 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=1.1e-06 sec
      iterations=10... time=5.8e-06 sec
      iterations=100... time=5.2799e-05 sec
      iterations=1000... time=0.000529893 sec
      iterations=10000... time=0.00570622 sec
      iterations=100000... time=0.075071 sec
      iterations=1000000... time=0.868881 sec
      iterations=2000000... time=1.52565 sec
      result: 32.217 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*196608 bytes):
      iterations=1... time=8.799e-06 sec
      iterations=10... time=8.4999e-05 sec
      iterations=100... time=0.000857189 sec
      iterations=1000... time=0.00921888 sec
      iterations=10000... time=0.153401 sec
      iterations=70000... time=0.974246 sec
      iterations=140000... time=1.85758 sec
      result: 14.8177 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*39321600 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.88e-05 sec
      iterations=10... time=0.000212997 sec
      iterations=100... time=0.00268376 sec
      iterations=1000... time=0.0381318 sec
      iterations=10000... time=0.239288 sec
      iterations=50000... time=1.49324 sec
      result: 0.0578608 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*23^3 grid points, 1*194672 bytes):
      iterations=1... time=4.4799e-05 sec
      iterations=10... time=0.000398495 sec
      iterations=100... time=0.00405725 sec
      iterations=1000... time=0.0844935 sec
      iterations=10000... time=0.572169 sec
      iterations=20000... time=1.13629 sec
      result: 0.214154 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      iterations=1... time=0.00515543 sec
      iterations=10... time=0.0620007 sec
      iterations=100... time=0.938192 sec
      iterations=200... time=1.58229 sec
      result: 0.310989 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00266471 sec
      iterations=10000000... time=0.0399335 sec
      iterations=100000000... time=0.385618 sec
      iterations=300000000... time=1.13231 sec
      iterations=300000000... time=0.883858 sec
      result: 2.41498 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00324416 sec
      iterations=10000000... time=0.0472354 sec
      iterations=100000000... time=0.407181 sec
      iterations=300000000... time=1.22326 sec
      result: 7.84786 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00212097 sec
      iterations=10000000... time=0.0263936 sec
      iterations=100000000... time=0.274259 sec
      iterations=400000000... time=1.08317 sec
      result: 5.90858 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000178197 sec
      iterations=10000... time=0.00148943 sec
      iterations=100000... time=0.0177727 sec
      iterations=1000000... time=0.197475 sec
      iterations=6000000... time=1.16547 sec
      result: 1.94245 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=0.000538943 sec
      iterations=10000... time=0.00512513 sec
      iterations=100000... time=0.0720928 sec
      iterations=1000000... time=0.652161 sec
      iterations=2000000... time=1.28939 sec
      result: 6.44693 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7.5e-07 sec
      iterations=10... time=3.1e-06 sec
      iterations=100... time=2.645e-05 sec
      iterations=1000... time=0.000278146 sec
      iterations=10000... time=0.00299366 sec
      iterations=100000... time=0.0398015 sec
      iterations=1000000... time=0.376441 sec
      iterations=3000000... time=1.23395 sec
      result: 59.7495 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=7.1495e-06 sec
      iterations=10... time=0.000184698 sec
      iterations=100... time=0.000660391 sec
      iterations=1000... time=0.0122977 sec
      iterations=10000... time=0.0742707 sec
      iterations=100000... time=0.626957 sec
      iterations=200000... time=1.34692 sec
      result: 29.1938 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.7e-06 sec
      iterations=10000... time=2.5799e-05 sec
      iterations=100000... time=0.000251146 sec
      iterations=1000000... time=0.00667421 sec
      iterations=10000000... time=0.0393383 sec
      iterations=100000000... time=0.402349 sec
      iterations=300000000... time=1.21945 sec
      result: 0.508103 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1000... time=3.8449e-05 sec
      iterations=10000... time=0.000199397 sec
      iterations=100000... time=0.00215547 sec
      iterations=1000000... time=0.0338748 sec
      iterations=10000000... time=0.302628 sec
      iterations=40000000... time=1.14321 sec
      result: 3.57254 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=1.15e-06 sec
      iterations=10... time=1.375e-05 sec
      iterations=100... time=5.5049e-05 sec
      iterations=1000... time=0.000645891 sec
      iterations=10000... time=0.00585832 sec
      iterations=100000... time=0.085284 sec
      iterations=1000000... time=0.7675 sec
      iterations=2000000... time=1.51313 sec
      result: 32.4838 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*196608 bytes):
      iterations=1... time=9.049e-06 sec
      iterations=10... time=8.7649e-05 sec
      iterations=100... time=0.000931138 sec
      iterations=1000... time=0.0134924 sec
      iterations=10000... time=0.129675 sec
      iterations=80000... time=0.762784 sec
      iterations=160000... time=1.41154 sec
      result: 22.2858 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*39321600 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=8.6e-06 sec
      iterations=10... time=9.6149e-05 sec
      iterations=100... time=0.000932088 sec
      iterations=1000... time=0.00870403 sec
      iterations=10000... time=0.0874901 sec
      iterations=100000... time=0.870625 sec
      iterations=200000... time=1.75642 sec
      result: 0.0830096 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*18^3 grid points, 2*93312 bytes):
      iterations=1... time=4.555e-05 sec
      iterations=10... time=0.000451544 sec
      iterations=100... time=0.00499593 sec
      iterations=1000... time=0.0502936 sec
      iterations=10000... time=0.508494 sec
      iterations=20000... time=1.0101 sec
      result: 0.115473 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*135^3 grid points, 1*39366000 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 2250 nsec
    MPI bandwidth: 4.23537 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Sat Sep 25 05:21:26 UTC 2021
+ echo Done.
Done.
  Elapsed time: 57.6 s
