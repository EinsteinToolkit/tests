/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
pkrvm7jw40e0xgp
+ date
Thu Sep  4 00:26:00 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1756945560
+ CACTUS_STARTTIME=1756945560
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.18.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.18.0
Compile date:      Sep 04 2025 (00:18:04)
Run date:          Sep 04 2025 (00:26:01+0000)
Run host:          pkrvm7jw40e0xgp.dcmqfzuzjfdufk2kvuezc4hldb.bx.internal.cloudapp.net (pid=131814)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.10.0, API version 0x20800
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: pkrvm7jw40e0xgp
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16379468KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=d4c0da5d-ba6d-1245-b993-263d068e3716, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/hosted-compute-agent.service, OSName=Linux, OSRelease=6.11.0-1018-azure, OSVersion="#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025", HostName=pkrvm7jw40e0xgp, Architecture=x86_64, hwlocVersion=2.10.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16379468KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00127026 sec
      iterations=10000000... time=0.012524 sec
      iterations=100000000... time=0.124524 sec
      iterations=900000000... time=1.12056 sec
      iterations=900000000... time=0.840349 sec
      result: 6.42363 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00198962 sec
      iterations=10000000... time=0.0198327 sec
      iterations=100000000... time=0.19834 sec
      iterations=600000000... time=1.19005 sec
      result: 16.1337 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00156627 sec
      iterations=10000000... time=0.015653 sec
      iterations=100000000... time=0.155625 sec
      iterations=700000000... time=1.08832 sec
      result: 10.2911 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.00012343 sec
      iterations=10000... time=0.00124252 sec
      iterations=100000... time=0.0124304 sec
      iterations=1000000... time=0.124298 sec
      iterations=9000000... time=1.11908 sec
      result: 1.24342 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000586672 sec
      iterations=10000... time=0.00544265 sec
      iterations=100000... time=0.0540576 sec
      iterations=1000000... time=0.548988 sec
      iterations=2000000... time=1.09648 sec
      result: 5.48242 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=5.11e-07 sec
      iterations=10... time=3.437e-06 sec
      iterations=100... time=3.2821e-05 sec
      iterations=1000... time=0.000333852 sec
      iterations=10000... time=0.00262926 sec
      iterations=100000... time=0.0245368 sec
      iterations=1000000... time=0.244818 sec
      iterations=4000000... time=0.981093 sec
      iterations=8000000... time=1.95994 sec
      result: 100.313 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=9.297e-06 sec
      iterations=10... time=5.0254e-05 sec
      iterations=100... time=0.000508677 sec
      iterations=1000... time=0.00482818 sec
      iterations=10000... time=0.0491437 sec
      iterations=100000... time=0.490433 sec
      iterations=200000... time=0.966262 sec
      iterations=400000... time=1.91304 sec
      result: 82.2181 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=2.535e-06 sec
      iterations=10000... time=2.4767e-05 sec
      iterations=100000... time=0.00024671 sec
      iterations=1000000... time=0.00248839 sec
      iterations=10000000... time=0.0249071 sec
      iterations=100000000... time=0.248957 sec
      iterations=400000000... time=0.995082 sec
      iterations=800000000... time=1.99016 sec
      result: 0.310963 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=9.568e-06 sec
      iterations=10000... time=9.0017e-05 sec
      iterations=100000... time=0.00146761 sec
      iterations=1000000... time=0.0146192 sec
      iterations=10000000... time=0.149222 sec
      iterations=70000000... time=1.0505 sec
      result: 1.8759 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=3.11e-07 sec
      iterations=10... time=2.815e-06 sec
      iterations=100... time=2.7692e-05 sec
      iterations=1000... time=0.000275894 sec
      iterations=10000... time=0.00278199 sec
      iterations=100000... time=0.0278528 sec
      iterations=1000000... time=0.279676 sec
      iterations=4000000... time=1.11508 sec
      result: 88.1587 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.644e-06 sec
      iterations=10... time=6.4259e-05 sec
      iterations=100... time=0.000648417 sec
      iterations=1000... time=0.00469788 sec
      iterations=10000... time=0.0434047 sec
      iterations=100000... time=0.435395 sec
      iterations=300000... time=1.3076 sec
      result: 90.2147 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=2.2562e-05 sec
      iterations=10... time=0.00034435 sec
      iterations=100... time=0.00367067 sec
      iterations=1000... time=0.0410422 sec
      iterations=10000... time=0.425739 sec
      iterations=30000... time=1.28022 sec
      result: 0.040493 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000218116 sec
      iterations=10... time=0.00191544 sec
      iterations=100... time=0.0177939 sec
      iterations=1000... time=0.174311 sec
      iterations=6000... time=1.05674 sec
      result: 0.138477 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00438273 sec
      iterations=10... time=0.0430191 sec
      iterations=100... time=0.420666 sec
      iterations=300... time=1.26038 sec
      result: 0.371531 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00126997 sec
      iterations=10000000... time=0.0124757 sec
      iterations=100000000... time=0.124539 sec
      iterations=900000000... time=1.12188 sec
      iterations=900000000... time=0.840157 sec
      result: 6.38922 GHz
    CPU floating point performance:
      iterations=1000000... time=0.0019798 sec
      iterations=10000000... time=0.0198923 sec
      iterations=100000000... time=0.198451 sec
      iterations=600000000... time=1.19014 sec
      result: 16.1325 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.0015807 sec
      iterations=10000000... time=0.0155491 sec
      iterations=100000000... time=0.155536 sec
      iterations=700000000... time=1.08949 sec
      result: 10.28 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124637 sec
      iterations=10000... time=0.001244 sec
      iterations=100000... time=0.0124385 sec
      iterations=1000000... time=0.124357 sec
      iterations=9000000... time=1.12004 sec
      result: 1.24448 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000483635 sec
      iterations=10000... time=0.00453381 sec
      iterations=100000... time=0.0449196 sec
      iterations=1000000... time=0.446065 sec
      iterations=2000000... time=0.893845 sec
      iterations=4000000... time=1.80683 sec
      result: 4.51708 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=5.815e-07 sec
      iterations=10... time=4.0475e-06 sec
      iterations=100... time=4.23685e-05 sec
      iterations=1000... time=0.00038919 sec
      iterations=10000... time=0.00271733 sec
      iterations=100000... time=0.0244892 sec
      iterations=1000000... time=0.245003 sec
      iterations=4000000... time=0.979956 sec
      iterations=8000000... time=1.96226 sec
      result: 100.195 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.85595e-05 sec
      iterations=10... time=0.000106914 sec
      iterations=100... time=0.00051839 sec
      iterations=1000... time=0.00506278 sec
      iterations=10000... time=0.0500634 sec
      iterations=100000... time=0.498398 sec
      iterations=200000... time=0.982074 sec
      iterations=400000... time=1.96318 sec
      result: 80.1183 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.557e-06 sec
      iterations=10000... time=3.5025e-05 sec
      iterations=100000... time=0.00031421 sec
      iterations=1000000... time=0.00272148 sec
      iterations=10000000... time=0.0248742 sec
      iterations=100000000... time=0.248866 sec
      iterations=400000000... time=0.996561 sec
      iterations=800000000... time=1.99113 sec
      result: 0.311113 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.25535e-05 sec
      iterations=10000... time=8.95765e-05 sec
      iterations=100000... time=0.00113067 sec
      iterations=1000000... time=0.0116477 sec
      iterations=10000000... time=0.117628 sec
      iterations=90000000... time=1.06272 sec
      result: 1.47599 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=5.16e-07 sec
      iterations=10... time=3.772e-06 sec
      iterations=100... time=4.09865e-05 sec
      iterations=1000... time=0.000311775 sec
      iterations=10000... time=0.00275901 sec
      iterations=100000... time=0.027108 sec
      iterations=1000000... time=0.270207 sec
      iterations=4000000... time=1.08454 sec
      result: 90.6413 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.335e-05 sec
      iterations=10... time=8.5364e-05 sec
      iterations=100... time=0.000738685 sec
      iterations=1000... time=0.00490505 sec
      iterations=10000... time=0.0457261 sec
      iterations=100000... time=0.450721 sec
      iterations=200000... time=0.902154 sec
      iterations=400000... time=1.80293 sec
      result: 87.2393 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=8.7065e-06 sec
      iterations=10... time=0.000115499 sec
      iterations=100... time=0.00117487 sec
      iterations=1000... time=0.0116419 sec
      iterations=10000... time=0.109501 sec
      iterations=100000... time=1.10049 sec
      result: 0.15702 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=4.4468e-05 sec
      iterations=10... time=0.000429605 sec
      iterations=100... time=0.00439763 sec
      iterations=1000... time=0.0438781 sec
      iterations=10000... time=0.421468 sec
      iterations=30000... time=1.27797 sec
      result: 0.572526 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00113327 sec
      iterations=10... time=0.0137562 sec
      iterations=100... time=0.135509 sec
      iterations=800... time=1.05353 sec
      result: 1.18527 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):  10
INFO (PUGH):  1
INFO (PUGH): 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Sep  4 00:27:02 UTC 2025
+ echo Done.
Done.
  Elapsed time: 61.6 s
