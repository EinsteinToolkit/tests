/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az75-57
+ date
Tue Sep 14 01:06:23 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1631581583
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Sep 14 2021 (00:41:03)
Run date:          Sep 14 2021 (01:06:24+0000)
Run host:          fv-az75-57.ozjq2hgvjyiebjvorarhoiqszb.bx.internal.cloudapp.net (pid=106845)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az75-57
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7120800KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=0b2f35bd-13d8-b04a-ab5a-b18ceaf317b7, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.8.0-1040-azure, OSVersion="#43~20.04.1-Ubuntu SMP Mon Aug 2 22:06:11 UTC 2021", HostName=fv-az75-57, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7120800KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=85, CPUModel="Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz", CPUStepping=7)
    L3Cache L#0: (P#-1, size=36608KB, linesize=64, ways=11, Inclusive=0)
      L2Cache L#0: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 16 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 37486592 linesize 64 associativity 11 stride 3407872, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00133672 sec
      iterations=10000000... time=0.0134518 sec
      iterations=100000000... time=0.134075 sec
      iterations=800000000... time=1.07252 sec
      iterations=800000000... time=1.07286 sec
      result: -4718.29 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00298515 sec
      iterations=10000000... time=0.0300359 sec
      iterations=100000000... time=0.300382 sec
      iterations=400000000... time=1.20555 sec
      result: 10.6176 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00184163 sec
      iterations=10000000... time=0.0185675 sec
      iterations=100000000... time=0.185159 sec
      iterations=600000000... time=1.11671 sec
      result: 8.59669 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000134402 sec
      iterations=10000... time=0.00134512 sec
      iterations=100000... time=0.0133955 sec
      iterations=1000000... time=0.134108 sec
      iterations=8000000... time=1.07352 sec
      result: 1.3419 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.00056311 sec
      iterations=10000... time=0.00514259 sec
      iterations=100000... time=0.0507776 sec
      iterations=1000000... time=0.517697 sec
      iterations=2000000... time=1.01738 sec
      result: 5.08692 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.4e-06 sec
      iterations=100... time=3.09e-05 sec
      iterations=1000... time=0.000305206 sec
      iterations=10000... time=0.00306106 sec
      iterations=100000... time=0.0305318 sec
      iterations=1000000... time=0.305714 sec
      iterations=4000000... time=1.22396 sec
      result: 80.3165 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=2.55e-05 sec
      iterations=10... time=0.000162603 sec
      iterations=100... time=0.00156353 sec
      iterations=1000... time=0.0154504 sec
      iterations=10000... time=0.154537 sec
      iterations=70000... time=1.17105 sec
      result: 47.0094 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.3e-06 sec
      iterations=10000... time=2.71e-05 sec
      iterations=100000... time=0.000267805 sec
      iterations=1000000... time=0.00268315 sec
      iterations=10000000... time=0.0383622 sec
      iterations=100000000... time=0.336078 sec
      iterations=300000000... time=1.21185 sec
      result: 0.504936 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=3.0501e-05 sec
      iterations=10000... time=0.000148102 sec
      iterations=100000... time=0.00144753 sec
      iterations=1000000... time=0.0223156 sec
      iterations=10000000... time=0.155029 sec
      iterations=70000000... time=1.31955 sec
      result: 2.35634 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=2.1e-06 sec
      iterations=100... time=1.57e-05 sec
      iterations=1000... time=0.000152703 sec
      iterations=10000... time=0.00153523 sec
      iterations=100000... time=0.0152447 sec
      iterations=1000000... time=0.263303 sec
      iterations=4000000... time=0.867291 sec
      iterations=8000000... time=1.54891 sec
      result: 126.933 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.1101e-05 sec
      iterations=10... time=0.000305405 sec
      iterations=100... time=0.00305216 sec
      iterations=1000... time=0.0543086 sec
      iterations=10000... time=0.366626 sec
      iterations=30000... time=1.03117 sec
      result: 22.8798 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.65e-05 sec
      iterations=10... time=0.000234904 sec
      iterations=100... time=0.00234824 sec
      iterations=1000... time=0.0234412 sec
      iterations=10000... time=0.284751 sec
      iterations=40000... time=1.29466 sec
      result: 0.0533887 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000202303 sec
      iterations=10... time=0.00189753 sec
      iterations=100... time=0.0352822 sec
      iterations=1000... time=0.266876 sec
      iterations=4000... time=0.975741 sec
      iterations=8000... time=2.15397 sec
      result: 0.188129 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00420438 sec
      iterations=10... time=0.0435833 sec
      iterations=100... time=0.610596 sec
      iterations=200... time=1.12316 sec
      result: 0.315459 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00134902 sec
      iterations=10000000... time=0.017405 sec
      iterations=100000000... time=0.186325 sec
      iterations=600000000... time=1.06752 sec
      iterations=600000000... time=1.06071 sec
      result: 176.089 GHz
    CPU floating point performance:
      iterations=1000000... time=0.0029935 sec
      iterations=10000000... time=0.0425605 sec
      iterations=100000000... time=0.403272 sec
      iterations=300000000... time=1.22003 sec
      result: 7.86864 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00183483 sec
      iterations=10000000... time=0.0259192 sec
      iterations=100000000... time=0.229549 sec
      iterations=500000000... time=1.21749 sec
      result: 6.57092 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000134553 sec
      iterations=10000... time=0.00133717 sec
      iterations=100000... time=0.0153999 sec
      iterations=1000000... time=0.191729 sec
      iterations=6000000... time=1.07287 sec
      result: 1.78811 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000629162 sec
      iterations=10000... time=0.0100647 sec
      iterations=100000... time=0.0957326 sec
      iterations=1000000... time=0.808626 sec
      iterations=2000000... time=1.60848 sec
      result: 8.0424 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=8e-07 sec
      iterations=10... time=3.35e-06 sec
      iterations=100... time=3.08e-05 sec
      iterations=1000... time=0.000306606 sec
      iterations=10000... time=0.00305896 sec
      iterations=100000... time=0.0454579 sec
      iterations=1000000... time=0.394567 sec
      iterations=3000000... time=1.20796 sec
      result: 61.0351 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=2.145e-05 sec
      iterations=10... time=0.000162003 sec
      iterations=100... time=0.00156643 sec
      iterations=1000... time=0.0218282 sec
      iterations=10000... time=0.225122 sec
      iterations=50000... time=1.04752 sec
      result: 37.5376 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.3e-06 sec
      iterations=10000... time=2.71e-05 sec
      iterations=100000... time=0.000267655 sec
      iterations=1000000... time=0.00668192 sec
      iterations=10000000... time=0.0388169 sec
      iterations=100000000... time=0.349106 sec
      iterations=300000000... time=1.08217 sec
      result: 0.450903 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=3.1601e-05 sec
      iterations=10000... time=0.000147053 sec
      iterations=100000... time=0.00143153 sec
      iterations=1000000... time=0.0213365 sec
      iterations=10000000... time=0.178501 sec
      iterations=60000000... time=1.1159 sec
      result: 2.32479 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7.5e-07 sec
      iterations=10... time=2.1e-06 sec
      iterations=100... time=1.55e-05 sec
      iterations=1000... time=0.000150453 sec
      iterations=10000... time=0.00149913 sec
      iterations=100000... time=0.0230532 sec
      iterations=1000000... time=0.203189 sec
      iterations=5000000... time=1.00779 sec
      result: 121.93 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=3.065e-05 sec
      iterations=10... time=0.000304606 sec
      iterations=100... time=0.00305051 sec
      iterations=1000... time=0.0455507 sec
      iterations=10000... time=0.382874 sec
      iterations=30000... time=1.02069 sec
      result: 23.1148 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=9.651e-06 sec
      iterations=10... time=8.7352e-05 sec
      iterations=100... time=0.000896916 sec
      iterations=1000... time=0.0135226 sec
      iterations=10000... time=0.1329 sec
      iterations=80000... time=0.927044 sec
      iterations=160000... time=1.79791 sec
      result: 0.0648754 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*29^3 grid points, 2*390224 bytes):
      iterations=1... time=0.000119502 sec
      iterations=10... time=0.00112792 sec
      iterations=100... time=0.0111311 sec
      iterations=1000... time=0.111503 sec
      iterations=10000... time=1.11793 sec
      result: 0.218163 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 12650.5 nsec
    MPI bandwidth: 4.68441 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Tue Sep 14 01:07:12 UTC 2021
+ echo Done.
Done.
  Elapsed time: 49.3 s
