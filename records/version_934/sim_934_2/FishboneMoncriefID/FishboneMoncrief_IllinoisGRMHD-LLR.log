/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/FishboneMoncriefID
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/FishboneMoncriefID/output-0000-active
+ hostname
fv-az736-70
+ date
Fri May 10 21:32:52 UTC 2024
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1715376772
+ CACTUS_STARTTIME=1715376772
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/WVUThorns/FishboneMoncriefID/test/FishboneMoncrief_IllinoisGRMHD-LLR.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.15.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.15.0
Compile date:      May 10 2024 (21:12:08)
Run date:          May 10 2024 (21:32:52+0000)
Run host:          fv-az736-70.alpbqrzxv30uzkvtn2qktnuusd.cx.internal.cloudapp.net (pid=138083)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/FishboneMoncriefID
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/WVUThorns/FishboneMoncriefID/test/FishboneMoncrief_IllinoisGRMHD-LLR.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Time MoL Coordbase CartGrid3d Boundary StaticConformal SymBase ADMBase TmunuBase HydroBase InitBase ADMMacros IOUtil SpaceMask CoordGauge Constants LocalReduce aeilocalinterp LoopControl Carpet CarpetLib CarpetReduce CarpetRegrid2 CarpetInterp CarpetIOASCII CarpetIOScalar CarpetIOHDF5 CarpetIOBasic IllinoisGRMHD ID_converter_ILGRMHD Convert_to_HydroBase Seed_Magnetic_Fields FishboneMoncriefID<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn CarpetIOHDF5 requests automatic activation of HDF5
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn IllinoisGRMHD requests automatic activation of GRHayLib
Thorn LoopControl requests automatic activation of hwloc
Thorn HDF5 requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn aeilocalinterp...Success -> active implementation AEILocalInterp
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetIOHDF5...Success -> active implementation IOHDF5
Activating thorn CarpetIOScalar...Success -> active implementation IOScalar
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetRegrid2...Success -> active implementation CarpetRegrid2
Activating thorn CartGrid3d...Success -> active implementation grid
Activating thorn Constants...Success -> active implementation Constants
Activating thorn Convert_to_HydroBase...Success -> active implementation Convert_to_HydroBase
Activating thorn Coordbase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn FishboneMoncriefID...Success -> active implementation FishboneMoncriefID
Activating thorn GRHayLib...Success -> active implementation GRHayLib
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn HydroBase...Success -> active implementation HydroBase
Activating thorn ID_converter_ILGRMHD...Success -> active implementation ID_converter_ILGRMHD
Activating thorn IllinoisGRMHD...Success -> active implementation IllinoisGRMHD
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LocalReduce...Success -> active implementation LocalReduce
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn Seed_Magnetic_Fields...Success -> active implementation seed_magnetic_fields
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
INFO (IOUtil): Recovery directory 'FishboneMoncrief_IllinoisGRMHD-LLR' doesn't exist
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetIOScalar::CarpetIOScalarStartup: [global] Startup routine
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      HydroBase::HydroBase_StartUp: Startup banner
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      LocalReduce::LocalReduce_Startup: Startup routine
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOHDF5::CarpetIOHDF5_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CarpetRegrid2::CarpetRegrid2_Initialise: [global] Initialise locations of refined regions
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      IllinoisGRMHD::IllinoisGRMHD_backward_compatible_initialize: [global] Set up the GRHayL structs and read the table for tabulated EOS.
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        IllinoisGRMHD::IllinoisGRMHD_RegisterVars: [meta] Register evolved, rhs variables in IllinoisGRMHD for MoL
      SpaceMask::MaskSym: [global] Set grid symmetries for mask
      SpaceMask::MaskSym_emask: [global] Set grid symmetries for emask (compatibility mode)
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CarpetRegrid2::CarpetRegrid2_ParamCheck: Check parameters
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set mask to one
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        IllinoisGRMHD::IllinoisGRMHD_InitSymBound: Schedule symmetries
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        CarpetIOHDF5::CarpetIOHDF5_Init: [global] Initialisation routine
        CarpetIOScalar::CarpetIOScalarInit: [global] Initialisation routine
        GROUP HydroBase_Initial: HydroBase initial data group
          FishboneMoncriefID::FishboneMoncrief_ET_GRHD_initial: Set up general relativistic hydrodynamic (GRHD) fields for Fishbone-Moncrief disk
          HydroBase::HydroBase_Avec_zero: Set vector potential to 0
          HydroBase::HydroBase_Aphi_zero: Set vector potential Phi to 0
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        Seed_Magnetic_Fields::Seed_Magnetic_Fields: Set up TOV seed magnetic fields.
        MoL::MoL_StartLoop: [level] Initialise the step size control
        FishboneMoncriefID::FishboneMoncrief_ET_GRHD_initial__perturb_pressure: Add random perturbation to initial pressure, after seed magnetic fields have been set up (in case we'd like the seed magnetic fields to depend on the pristine pressures)
        GROUP HydroBase_Prim2ConInitial: Recover the conservative variables from the primitive variables
          GROUP IllinoisGRMHD_Prim2Con2Prim: Convert HydroBase initial data to IllinoisGRMHD variables
            IllinoisGRMHD::convert_HydroBase_to_IllinoisGRMHD: Convert HydroBase initial data (ID) to IllinoisGRMHD variables
            IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A
            GROUP IllinoisGRMHD_prims_to_conservs: Compute conservative variables from primitives
              IllinoisGRMHD::IllinoisGRMHD_hybrid_prims_to_conservs: Hybrid version of IllinoisGRMHD_prims_to_conservs
            GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
              IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
            IllinoisGRMHD::convert_IllinoisGRMHD_to_HydroBase: Convert IllinoisGRMHD-native variables to HydroBase
      [CCTK_POSTINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [global] Close all filereader input files
        IllinoisGRMHD::IllinoisGRMHD_backward_compatible_data: Copy data to deprecated variables
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
              GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
                IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
                IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
                IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
                GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
                  IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
                GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
                  IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
              IllinoisGRMHD::IllinoisGRMHD_compute_Tmunu: Compute stress-energy tensor
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
              GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
                IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
                IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
                IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
                GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
                  IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
                GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
                  IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
              IllinoisGRMHD::IllinoisGRMHD_compute_Tmunu: Compute stress-energy tensor
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      [CCTK_POSTPOSTINITIAL]
        GROUP Con2Prim: Convert from conservative to primitive variables (might be redundant)
          GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
            IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
            IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
            IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
            GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
              IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
            GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
              IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
        IllinoisGRMHD::IllinoisGRMHD_set_gz_symmetries: Compute post-initialdata quantities
      [CCTK_POSTSTEP]
        SpaceMask::CheckMask: Ensure that all mask values are legal
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        IllinoisGRMHD::IllinoisGRMHD_InitSymBound: Schedule symmetries
        SpaceMask::MaskZero: Initialise mask to zero
        SpaceMask::MaskOne: Set old style mask to one
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
        IOUtil::IOUtil_RecoverGH: [level] Checkpoint recovery routine
      [CCTK_POST_RECOVER_VARIABLES]
        CarpetIOHDF5::CarpetIOHDF5_InitCheckpointingIntervals: [global] Initialisation of checkpointing intervals after recovery
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [meta] Close all initial data checkpoint files after recovery
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP HydroBase_PostStep: Post step tasks for hydro thorns
            GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
              GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
              GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
            GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
              GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
                IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
                IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
                IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
                GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
                  IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
                GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
                  IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
          GROUP SetTmunu: Group for calculating the stress-energy tensor
            TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
            GROUP AddToTmunu: Add to the stress-energy tensor here
              IllinoisGRMHD::IllinoisGRMHD_compute_Tmunu: Compute stress-energy tensor
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_InitialDataCheckpoint: [meta] Initial data checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        IllinoisGRMHD::convert_IllinoisGRMHD_to_HydroBase: [global] [loop-local] Convert IllinoisGRMHD-native variables to HydroBase
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
            GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
              IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
              IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
              IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
              GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
                IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
              GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
                IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
            IllinoisGRMHD::IllinoisGRMHD_compute_Tmunu: Compute stress-energy tensor
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      SpaceMask::MaskZero: Initialise mask to zero
      SpaceMask::MaskOne: Set mask to one
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      ADMBase::ADMBase_Static: Copy the metric and extrinsic curvature to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                GROUP HydroBase_RHS: Groups for scheduling tasks for calculating RHS of hydro variables
                GROUP IllinoisGRMHD_RHS: Evaluate RHSs GRHD equations
                  GROUP IllinoisGRMHD_evaluate_sources_rhs: Evaluate source terms in GRMHD RHSs
                    IllinoisGRMHD::IllinoisGRMHD_hybrid_evaluate_sources_rhs: Hybrid version of IllinoisGRMHD_evaluate_sources_rhs
                  GROUP IllinoisGRMHD_evaluate_fluxes_rhs: Evaluate flux terms in GRMHD RHSs
                    IllinoisGRMHD::IllinoisGRMHD_hybrid_evaluate_fluxes_rhs: Hybrid version of IllinoisGRMHD_evaluate_fluxes_rhs
                  IllinoisGRMHD::IllinoisGRMHD_evaluate_phitilde_and_A_gauge_rhs: Evaluate phitilde RHS and gauge contributions to A_i RHS
              GROUP MoL_PostRHS: Modify RHS functions
                IllinoisGRMHD::IllinoisGRMHD_backward_compatible_data: Copy data to deprecated variables
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
                GROUP HydroBase_PostStep: Post step tasks for hydro thorns
                  GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
                    GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
                    GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
                      GROUP BoundaryConditions: Execute all boundary conditions
                        Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                        CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                      Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                  GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
                    GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
                      IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
                      IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
                      IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
                      GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
                        IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
                      GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
                        IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
                GROUP SetTmunu: Group for calculating the stress-energy tensor
                  TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
                  GROUP AddToTmunu: Add to the stress-energy tensor here
                    IllinoisGRMHD::IllinoisGRMHD_compute_Tmunu: Compute stress-energy tensor
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
            GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
              IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
              IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
              IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
              GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
                IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
              GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
                IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
            IllinoisGRMHD::IllinoisGRMHD_compute_Tmunu: Compute stress-energy tensor
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
    [CCTK_POSTSTEP]
      SpaceMask::CheckMask: Ensure that all mask values are legal
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetIOHDF5::CarpetIOHDF5_EvolutionCheckpoint: [meta] Evolution checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      IllinoisGRMHD::convert_IllinoisGRMHD_to_HydroBase: [global] [loop-local] Convert IllinoisGRMHD-native variables to HydroBase
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetIOHDF5::CarpetIOHDF5_TerminationCheckpoint: [meta] Termination checkpoint routine
      GRHayLib::GRHayLib_terminate: [global] Free memory allocated for the GRHayL structs.
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP HydroBase_PostStep: Post step tasks for hydro thorns
          GROUP HydroBase_Boundaries: HydroBase-internal Boundary conditions group
            GROUP HydroBase_Select_Boundaries: Group to schedule the boundary condition functions
            GROUP HydroBase_ApplyBCs: Apply the boundary conditions of HydroBase
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP HydroBase_Con2Prim: Convert from conservative to primitive variables
            GROUP IllinoisGRMHD_Con2Prim: Compute primitive variables from conservatives
              IllinoisGRMHD::IllinoisGRMHD_sync_conservatives: Sync conservative variable ghost zones for c2p routine
              IllinoisGRMHD::IllinoisGRMHD_A_i_outer_boundaries: Apply linear extrapolation BCs on A_{mu}, so that BCs are flat on B^i
              IllinoisGRMHD::IllinoisGRMHD_compute_B_and_Bstagger_from_A: Compute B and B_stagger from A SYNC: grmhd_primitives_Bi,grmhd_primitives_Bi_stagger
              GROUP IllinoisGRMHD_conservs_to_prims: Compute primitive variables from conservatives
                IllinoisGRMHD::IllinoisGRMHD_hybrid_conservs_to_prims: Hybrid version of IllinoisGRMHD_conservs_to_prims
              GROUP IllinoisGRMHD_hydro_outer_boundaries: Apply selected boundary conditions to the primitive variables
                IllinoisGRMHD::IllinoisGRMHD_hybrid_hydro_outer_boundaries: Hybrid version of IllinoisGRMHD_outer_boundaries
        GROUP SetTmunu: Group for calculating the stress-energy tensor
          TmunuBase::TmunuBase_ZeroTmunu: Initialise the stress-energy tensor to zero
          GROUP AddToTmunu: Add to the stress-energy tensor here
            IllinoisGRMHD::IllinoisGRMHD_compute_Tmunu: Compute stress-energy tensor
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
      SpaceMask::MaskZero: Initialise mask to zero
      SpaceMask::MaskOne: Set mask to one
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 0.682 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.40892 ns per clock tick (2.44546 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.7.0, API version 0x20500
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR scalar I/O provided by CarpetIOScalar
--------------------------------------------------------------------------------
HydroBase: Let it flow.
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 0D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 1D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 2D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 3D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az736-70, pid=138083
INFO (Carpet): This process runs on 2 cores: 0-1
INFO (Carpet): Thread 0 runs on 2 cores: 0-1
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-110.286,-110.286,-110.286] : [108.464,108.464,108.464]   ([218.75,218.75,218.75])
   interior extent: [-102.995,-102.995,-102.995] : [101.172,101.172,101.172]   ([204.167,204.167,204.167])
   exterior extent: [-124.87,-124.87,-124.87] : [123.047,123.047,123.047]   ([247.917,247.917,247.917])
   base_spacing   : [7.29167,7.29167,7.29167]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-110.286,-110.286,-110.286] : [108.464,108.464,108.464]   ([218.75,218.75,218.75])
   interior extent   : [-102.995,-102.995,-102.995] : [101.172,101.172,101.172]   ([204.167,204.167,204.167])
   exterior extent   : [-124.87,-124.87,-124.87] : [123.047,123.047,123.047]   ([247.917,247.917,247.917])
   spacing           : [7.29167,7.29167,7.29167]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [35,35,35]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[9,9,9],[9,9,9]]
   [2]: [[9,9,9],[9,9,9]]
   [3]: [[9,9,9],[9,9,9]]
   [4]: [[9,9,9],[9,9,9]]
   [5]: [[9,9,9],[9,9,9]]
   [6]: [[9,9,9],[9,9,9]]
   [7]: [[9,9,9],[9,9,9]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
   [1]: [[0,0,0],[0,0,0]]
   [2]: [[0,0,0],[0,0,0]]
   [3]: [[0,0,0],[0,0,0]]
   [4]: [[0,0,0],[0,0,0]]
   [5]: [[0,0,0],[0,0,0]]
   [6]: [[0,0,0],[0,0,0]]
   [7]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 663 grid functions in 62 groups
INFO (Carpet):    There are 190 grid scalars in 39 groups
INFO (Carpet):    There are 81 1-dimensional grid arrays in 7 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOScalar): Periodic scalar output requested for:
   HYDROBASE::rho
   HYDROBASE::press
   HYDROBASE::vel[0]
   HYDROBASE::vel[1]
   ILLINOISGRMHD::rho_b
   ILLINOISGRMHD::P
   ILLINOISGRMHD::Bx
   ILLINOISGRMHD::By
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5' registered: AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_0D' registered: 0D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_1D' registered: 1D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_2D' registered: 2D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_3D' registered: 3D AMR output of grid variables to HDF5 files
INFO (IllinoisGRMHD): Warning!! Many features in IllinoisGRMHD have been improved alongside
the development of GRHayL. Please update your parfile to use the new features.
Running GRHayLib with backward-compatible settings...
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (MoL): The maximum number of evolved variables is 423. 9 are registered.
INFO (MoL): The maximum number of slow evolved variables is 423. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 423. 13 are registered.
INFO (MoL): The maximum number of SandR variables is 423. 16 are registered.
INFO (MoL): The maximum number of evolved array variables is 423. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 423. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 423. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 0
INFO (CarpetRegrid2): Enforcing grid structure properties, iteration 1
INFO (Carpet): Grid structure (superregions, grid points):
   [0][0][0]   exterior: [0,0,0] : [34,34,34]   ([35,35,35] + PADDING) 42875
   [1][0][0]   exterior: [2,2,2] : [66,66,66]   ([65,65,65] + PADDING) 274625
   [2][0][0]   exterior: [31,31,45] : [106,106,92]   ([76,76,48] + PADDING) 277248
INFO (Carpet): Grid structure (superregions, coordinates):
   [0][0][0]   exterior: [-124.869791666667,-124.869791666667,-124.869791666667] : [123.046875,123.046875,123.046875] : [7.29166666666667,7.29166666666667,7.29166666666667]
   [1][0][0]   exterior: [-117.578125,-117.578125,-117.578125] : [115.755208333333,115.755208333333,115.755208333333] : [3.64583333333333,3.64583333333333,3.64583333333333]
   [2][0][0]   exterior: [-68.359375,-68.359375,-42.8385416666667] : [68.359375,68.359375,42.8385416666667] : [1.82291666666667,1.82291666666667,1.82291666666667]
INFO (Carpet): Global grid structure statistics:
INFO (Carpet): GF: rhs: 120k active, 221k owned (+84%), 316k total (+43%), 7 steps/time
INFO (Carpet): GF: vars: 183, pts: 61M active, 93M owned (+53%), 135M total (+46%), 1.0 comp/proc
INFO (Carpet): GA: vars: 267, pts: 0M active, 0M total (+0%)
INFO (Carpet): Total required memory: 1.080 GByte (for GAs and currently active GFs)
INFO (Carpet): Load balance:  min     avg     max     sdv     max/avg-1
INFO (Carpet): Level  0:       2M      2M      2M      0M owned      3%
INFO (Carpet): Level  1:      18M     19M     19M      0M owned      2%
INFO (Carpet): Level  2:      25M     25M     25M      0M owned      0%
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>7.2916667e+00  dy=>7.2916667e+00  dz=>7.2916667e+00
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-124.870,123.047]  y=>[-124.870,123.047]  z=>[-124.870,123.047]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,34]  y=>[0,34]  z=>[0,34]
INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (Time): Timestep set to 3.64583 (courant_static)
INFO (FishboneMoncriefID): Fishbone-Moncrief Disk Initial data.
INFO (FishboneMoncriefID): Using input parameters of
 a = 9.375000e-01,
 M = 1.000000e+00,
r_in = 6.000000e+00,
r_at_max_density = 1.200000e+01
kappa = 4.249572e-03
gamma = 1.333333e+00
INFO (FishboneMoncriefID): =====   OUTPUTS   =====
INFO (FishboneMoncriefID): betai: 7.920344e-03 7.920344e-03 1.349392e-03 
gij: 1.010971e+00 5.609310e-03 1.412336e-03 1.000306e+00 5.038442e-04 1.000164e+00 
Kij: 5.714805e-07 -6.399062e-05 -1.091697e-05 9.166746e-07 -1.088756e-05 6.287726e-05
alp: 9.943430e-01

INFO (FishboneMoncriefID): rho: 4.309515013586163e-09
Pressure: 2.980229831032962e-14
vx: 0.000000000000000e+00
vy: 0.000000000000000e+00
vz: 0.000000000000000e+00
INFO (Seed_Magnetic_Fields): Seeding magnetic fields
INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 0 NumPts= 25725 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 1.250e-16, 2.882e+01 | tau 2.863e-15, 1.376e+00 | Sx 3.958e-16, 4.889e+00 | Sy 3.831e-16, 4.896e+00 | Sz 3.430e-16, 4.651e-01

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 0 NumPts= 25725 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 2.495e-07, 2.882e+01 | tau 6.661e-10, 1.376e+00 | Sx 3.190e-16, 4.889e+00 | Sy 3.849e-16, 4.896e+00 | Sz 3.376e-16, 4.651e-01

INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (Time): Timestep set to 1.82292 (courant_static)
INFO (FishboneMoncriefID): Fishbone-Moncrief Disk Initial data.
INFO (FishboneMoncriefID): Using input parameters of
 a = 9.375000e-01,
 M = 1.000000e+00,
r_in = 6.000000e+00,
r_at_max_density = 1.200000e+01
kappa = 4.249572e-03
gamma = 1.333333e+00
INFO (FishboneMoncriefID): =====   OUTPUTS   =====
INFO (FishboneMoncriefID): betai: 8.502947e-03 8.502947e-03 7.364757e-04 
gij: 1.011855e+00 6.057893e-03 7.757580e-04 1.000327e+00 2.764947e-04 1.000046e+00 
Kij: -1.612699e-07 -7.385106e-05 -6.405878e-06 2.647221e-07 -6.387429e-06 7.334875e-05
alp: 9.939580e-01

INFO (FishboneMoncriefID): rho: 4.760989198732076e-09
Pressure: 3.403623302812560e-14
vx: 0.000000000000000e+00
vy: 0.000000000000000e+00
vz: 0.000000000000000e+00
INFO (Seed_Magnetic_Fields): Seeding magnetic fields
INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 1 NumPts= 152100 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 1.267e-16, 2.228e+02 | tau 3.473e-15, 1.017e+01 | Sx 3.446e-16, 3.712e+01 | Sy 3.638e-16, 3.712e+01 | Sz 3.383e-16, 4.455e+00

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 1 NumPts= 152100 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 5.498e-08, 2.228e+02 | tau 1.535e-10, 1.017e+01 | Sx 3.289e-16, 3.712e+01 | Sy 3.358e-16, 3.712e+01 | Sz 3.218e-16, 4.455e+00

INFO (IllinoisGRMHD): Setting Symmetry = none... at iteration = 0
INFO (Time): Timestep set to 0.911458 (courant_static)
INFO (FishboneMoncriefID): Fishbone-Moncrief Disk Initial data.
INFO (FishboneMoncriefID): Using input parameters of
 a = 9.375000e-01,
 M = 1.000000e+00,
r_in = 6.000000e+00,
r_at_max_density = 1.200000e+01
kappa = 4.249572e-03
gamma = 1.333333e+00
INFO (FishboneMoncriefID): =====   OUTPUTS   =====
INFO (FishboneMoncriefID): betai: 1.849886e-02 1.141905e-03 1.210419e-02 
gij: 1.016755e+00 -6.580139e-03 1.063485e-02 9.992386e-01 -4.321169e-03 1.006792e+00 
Kij: -1.026161e-04 -2.101181e-05 -2.329145e-04 2.521491e-04 -1.374675e-05 1.010029e-04
alp: 9.888698e-01

INFO (FishboneMoncriefID): rho: 1.204265325051445e-08
Pressure: 1.173027343499392e-13
vx: 0.000000000000000e+00
vy: 0.000000000000000e+00
vz: 0.000000000000000e+00
INFO (Seed_Magnetic_Fields): Seeding magnetic fields
INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 2 NumPts= 194832 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.09 iters/gridpt
   Error, Sum: rho 2.912e-11, 1.086e+03 | tau 1.022e-13, 5.089e+01 | Sx 3.380e-16, 1.721e+02 | Sy 3.420e-16, 1.966e+02 | Sz 3.200e-16, 2.208e+01

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 2 NumPts= 194832 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.09 iters/gridpt
   Error, Sum: rho 2.911e-11, 1.086e+03 | tau 1.017e-13, 5.089e+01 | Sx 3.259e-16, 1.721e+02 | Sy 3.229e-16, 1.966e+02 | Sz 3.117e-16, 2.208e+01

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 0 NumPts= 25725 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 1.277e-16, 2.882e+01 | tau 4.802e-06, 1.376e+00 | Sx 1.330e-07, 4.889e+00 | Sy 1.417e-07, 4.896e+00 | Sz 3.204e-07, 4.651e-01

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 1 NumPts= 152100 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 1.205e-16, 2.228e+02 | tau 3.237e-06, 1.017e+01 | Sx 2.343e-07, 3.712e+01 | Sy 2.058e-07, 3.712e+01 | Sz 4.678e-07, 4.455e+00

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 2 NumPts= 194832 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.09 iters/gridpt
   Error, Sum: rho 2.911e-11, 1.086e+03 | tau 1.016e-13, 5.089e+01 | Sx 3.149e-16, 1.721e+02 | Sy 3.158e-16, 1.966e+02 | Sz 3.108e-16, 2.208e+01

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 0 NumPts= 25725 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 1.101e-16, 2.882e+01 | tau 3.670e-15, 1.376e+00 | Sx 3.138e-16, 4.889e+00 | Sy 3.342e-16, 4.896e+00 | Sz 2.868e-16, 4.651e-01

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 1 NumPts= 152100 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.02 iters/gridpt
   Error, Sum: rho 1.162e-16, 2.228e+02 | tau 3.776e-15, 1.017e+01 | Sx 3.087e-16, 3.712e+01 | Sy 3.065e-16, 3.712e+01 | Sz 3.007e-16, 4.455e+00

INFO (IllinoisGRMHD): C2P: Iter. # 0, Lev: 2 NumPts= 194832 | Backups: 0 0 0 | Fixes: VL= 0 rho*= 0
                 Averaged pts = 0 Font1D 0 | Failures: 0 InHoriz= 0 / 0 | 2.09 iters/gridpt
   Error, Sum: rho 2.911e-11, 1.086e+03 | tau 1.013e-13, 5.089e+01 | Sx 2.920e-16, 1.721e+02 | Sy 2.916e-16, 1.966e+02 | Sz 2.986e-16, 2.208e+01

--------------------------------------------------------------
Iteration      Time | *me_per_hour |      ILLINOISGRMHD::rho_b
                    |              |      minimum      maximum
--------------------------------------------------------------
        0     0.000 |    0.0000000 |    0.0000010    0.9519003
INFO (Carpet): Terminating due to cctk_final_time at t = 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri May 10 21:32:55 UTC 2024
+ echo Done.
Done.
  Elapsed time: 3.3 s
