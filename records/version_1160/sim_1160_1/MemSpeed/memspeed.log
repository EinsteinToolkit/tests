/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
pkrvmqc4gcfdwos
+ date
Thu Aug 21 18:29:50 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1755800990
+ CACTUS_STARTTIME=1755800990
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.18.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.18.0
Compile date:      Aug 21 2025 (18:22:05)
Run date:          Aug 21 2025 (18:29:51+0000)
Run host:          pkrvmqc4gcfdwos.yo2jsnv3aaiufmiidgoerdg2xa.bx.internal.cloudapp.net (pid=131634)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.10.0, API version 0x20800
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: pkrvmqc4gcfdwos
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16379472KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=e2cd200a-e43d-e544-b606-ed49f938cbf6, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/hosted-compute-agent.service, OSName=Linux, OSRelease=6.11.0-1018-azure, OSVersion="#18~24.04.1-Ubuntu SMP Sat Jun 28 04:46:03 UTC 2025", HostName=pkrvmqc4gcfdwos, Architecture=x86_64, hwlocVersion=2.10.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16379472KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00125672 sec
      iterations=10000000... time=0.0125541 sec
      iterations=100000000... time=0.124497 sec
      iterations=900000000... time=1.12015 sec
      iterations=900000000... time=0.843067 sec
      result: 6.49622 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00198655 sec
      iterations=10000000... time=0.0198094 sec
      iterations=100000000... time=0.19832 sec
      iterations=600000000... time=1.19034 sec
      result: 16.1299 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00158156 sec
      iterations=10000000... time=0.0155382 sec
      iterations=100000000... time=0.155532 sec
      iterations=700000000... time=1.08852 sec
      result: 10.2892 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000134691 sec
      iterations=10000... time=0.00124469 sec
      iterations=100000... time=0.0124313 sec
      iterations=1000000... time=0.124335 sec
      iterations=9000000... time=1.11891 sec
      result: 1.24323 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000611291 sec
      iterations=10000... time=0.00538865 sec
      iterations=100000... time=0.0550514 sec
      iterations=1000000... time=0.552622 sec
      iterations=2000000... time=1.10495 sec
      result: 5.52473 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=4.40999e-07 sec
      iterations=10... time=2.675e-06 sec
      iterations=100... time=3.183e-05 sec
      iterations=1000... time=0.000249476 sec
      iterations=10000... time=0.0024767 sec
      iterations=100000... time=0.0244668 sec
      iterations=1000000... time=0.245208 sec
      iterations=4000000... time=0.982582 sec
      iterations=8000000... time=1.96119 sec
      result: 100.249 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=1.1261e-05 sec
      iterations=10... time=6.432e-05 sec
      iterations=100... time=0.000507337 sec
      iterations=1000... time=0.00502221 sec
      iterations=10000... time=0.0505315 sec
      iterations=100000... time=0.49685 sec
      iterations=200000... time=0.991952 sec
      iterations=400000... time=1.98554 sec
      result: 79.2159 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.397e-06 sec
      iterations=10000... time=3.222e-05 sec
      iterations=100000... time=0.000253804 sec
      iterations=1000000... time=0.00249724 sec
      iterations=10000000... time=0.0248532 sec
      iterations=100000000... time=0.248682 sec
      iterations=400000000... time=0.996506 sec
      iterations=800000000... time=1.99 sec
      result: 0.310938 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.1381e-05 sec
      iterations=10000... time=9.9747e-05 sec
      iterations=100000... time=0.00105067 sec
      iterations=1000000... time=0.0106129 sec
      iterations=10000000... time=0.108266 sec
      iterations=100000000... time=1.05156 sec
      result: 1.31445 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=6.31e-07 sec
      iterations=10... time=4.057e-06 sec
      iterations=100... time=3.8953e-05 sec
      iterations=1000... time=0.000285012 sec
      iterations=10000... time=0.0027927 sec
      iterations=100000... time=0.0278204 sec
      iterations=1000000... time=0.279053 sec
      iterations=4000000... time=1.11401 sec
      result: 88.2432 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=1.0078e-05 sec
      iterations=10... time=6.6865e-05 sec
      iterations=100... time=0.000475628 sec
      iterations=1000... time=0.00459349 sec
      iterations=10000... time=0.0457366 sec
      iterations=100000... time=0.45595 sec
      iterations=200000... time=0.908733 sec
      iterations=400000... time=1.82177 sec
      result: 86.3371 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=3.3412e-05 sec
      iterations=10... time=0.000280714 sec
      iterations=100... time=0.00288832 sec
      iterations=1000... time=0.0297186 sec
      iterations=10000... time=0.297348 sec
      iterations=40000... time=1.23207 sec
      result: 0.0561009 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000164858 sec
      iterations=10... time=0.00165888 sec
      iterations=100... time=0.0142111 sec
      iterations=1000... time=0.147475 sec
      iterations=7000... time=1.05025 sec
      result: 0.162555 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00403765 sec
      iterations=10... time=0.0412842 sec
      iterations=100... time=0.407249 sec
      iterations=300... time=1.21804 sec
      result: 0.384445 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00125292 sec
      iterations=10000000... time=0.0124773 sec
      iterations=100000000... time=0.127004 sec
      iterations=900000000... time=1.12147 sec
      iterations=900000000... time=0.84127 sec
      result: 6.42403 GHz
    CPU floating point performance:
      iterations=1000000... time=0.0019847 sec
      iterations=10000000... time=0.0198379 sec
      iterations=100000000... time=0.198403 sec
      iterations=600000000... time=1.19024 sec
      result: 16.1312 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00157114 sec
      iterations=10000000... time=0.0156092 sec
      iterations=100000000... time=0.15572 sec
      iterations=700000000... time=1.08852 sec
      result: 10.2892 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000124603 sec
      iterations=10000... time=0.0012506 sec
      iterations=100000... time=0.0125477 sec
      iterations=1000000... time=0.124534 sec
      iterations=9000000... time=1.11995 sec
      result: 1.24439 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000488998 sec
      iterations=10000... time=0.00451656 sec
      iterations=100000... time=0.0448286 sec
      iterations=1000000... time=0.450785 sec
      iterations=2000000... time=0.899307 sec
      iterations=4000000... time=1.8178 sec
      result: 4.54451 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=3.955e-07 sec
      iterations=10... time=2.9755e-06 sec
      iterations=100... time=3.0692e-05 sec
      iterations=1000... time=0.000275946 sec
      iterations=10000... time=0.00252499 sec
      iterations=100000... time=0.0245041 sec
      iterations=1000000... time=0.245119 sec
      iterations=4000000... time=0.981509 sec
      iterations=8000000... time=1.96156 sec
      result: 100.23 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=8.4155e-06 sec
      iterations=10... time=6.0052e-05 sec
      iterations=100... time=0.000528689 sec
      iterations=1000... time=0.00516158 sec
      iterations=10000... time=0.0507488 sec
      iterations=100000... time=0.497485 sec
      iterations=200000... time=1.02167 sec
      result: 76.9753 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.6965e-06 sec
      iterations=10000... time=3.55865e-05 sec
      iterations=100000... time=0.000330823 sec
      iterations=1000000... time=0.00298819 sec
      iterations=10000000... time=0.0272581 sec
      iterations=100000000... time=0.262023 sec
      iterations=400000000... time=0.997526 sec
      iterations=800000000... time=1.99106 sec
      result: 0.311103 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=1.41415e-05 sec
      iterations=10000... time=9.51525e-05 sec
      iterations=100000... time=0.000965919 sec
      iterations=1000000... time=0.0094746 sec
      iterations=10000000... time=0.0971904 sec
      iterations=100000000... time=0.958663 sec
      iterations=200000000... time=1.91477 sec
      result: 1.19673 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.41e-07 sec
      iterations=10... time=3.862e-06 sec
      iterations=100... time=3.51305e-05 sec
      iterations=1000... time=0.000306899 sec
      iterations=10000... time=0.00274328 sec
      iterations=100000... time=0.027032 sec
      iterations=1000000... time=0.27022 sec
      iterations=4000000... time=1.10373 sec
      result: 89.0652 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.43915e-05 sec
      iterations=10... time=0.000100844 sec
      iterations=100... time=0.00052718 sec
      iterations=1000... time=0.00486267 sec
      iterations=10000... time=0.0468901 sec
      iterations=100000... time=0.453427 sec
      iterations=200000... time=0.908784 sec
      iterations=400000... time=1.82414 sec
      result: 86.2251 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=6.2765e-06 sec
      iterations=10... time=8.5139e-05 sec
      iterations=100... time=0.000787966 sec
      iterations=1000... time=0.00796975 sec
      iterations=10000... time=0.0814981 sec
      iterations=100000... time=0.801832 sec
      iterations=200000... time=1.62799 sec
      result: 0.212286 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=3.62325e-05 sec
      iterations=10... time=0.000391587 sec
      iterations=100... time=0.00388657 sec
      iterations=1000... time=0.0385838 sec
      iterations=10000... time=0.387425 sec
      iterations=30000... time=1.1702 sec
      result: 0.625254 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000889547 sec
      iterations=10... time=0.0108891 sec
      iterations=100... time=0.107969 sec
      iterations=1000... time=1.10062 sec
      result: 1.4182 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):  10
INFO (PUGH):  1
INFO (PUGH): 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Thu Aug 21 18:30:55 UTC 2025
+ echo Done.
Done.
  Elapsed time: 64.8 s
