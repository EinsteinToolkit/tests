/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl/output-0000-active
+ hostname
fv-az127-820
+ date
Sat Jun 11 05:38:51 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1654925931
+ CACTUS_STARTTIME=1654925931
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.12.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.12.0
Compile date:      Jun 11 2022 (05:14:08)
Run date:          Jun 11 2022 (05:38:52+0000)
Run host:          fv-az127-820.5aj0erdmsgperguxzqs1t2u5da.phxx.internal.cloudapp.net (pid=105877)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->CycleClock Fortran hwloc MPI IOUtil InitBase LoopControl Carpet CarpetLib CarpetReduce Boundary CartGrid3D CoordBase SymBase MoL NaNChecker Time ADMBase ADMMacros CoordGauge StaticConformal GenericFD ML_BSSN ML_BSSN_Helper TmunuBase CarpetIOBasic CarpetIOASCII<---
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          ADMBase::ADMBase_CartesianMinkowski: Set the metric and extrinsic curvature to cartesian minkowski values
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 1.53 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.357969 ns per clock tick (2.79354 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az127-820, pid=105877
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent: [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent: [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   base_spacing   : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent   : [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent   : [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   spacing           : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [35,35,35]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 770 grid functions in 49 groups
INFO (Carpet):    There are 71 grid scalars in 23 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::alp
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
WARNING[L1,P1] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (MoL): The maximum number of evolved variables is 224. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 224. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 224. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 224. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 224. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
WARNING[L1,P0] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
[1mWARNING[L1,P0] (ML_BSSN_Helper):[0m Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e-02  dy=>3.3333333e-02  dz=>3.3333333e-02
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.067, 1.067]  y=>[-0.067, 1.067]  z=>[-0.067, 1.067]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,34]  y=>[0,34]  z=>[0,34]
INFO (Time): Timestep set to 0.0133333 (courant_static)
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 264
   Maximum allocated memory:  39.9 MB
   Current administrative memory: 0.364 MB
   Total allocated used system memory: 9.99 MB
   Total allocated free system memory: 0.339 MB
   gh::allmemory:    21856
   dh::allmemory:    259992
   th::allmemory:    5964
   ggf::allmemory:   61380
   gdata::allmemory: 15224
-----------------------------------------------
Iteration      Time |              ADMBASE::alp
                    |      minimum      maximum
-----------------------------------------------
        0     0.000 |    1.0000000    1.0000000
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 288
   Maximum allocated memory:  44.8 MB
   Current administrative memory: 0.365 MB
   Total allocated used system memory: 11.6 MB
   Total allocated free system memory: 9.26 MB
   gh::allmemory:    21856
   dh::allmemory:    260024
   th::allmemory:    5964
   ggf::allmemory:   61732
   gdata::allmemory: 15224
       10     0.133 |    1.0000000    1.0000000
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00039300 |       0.00021400 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10007700 |       0.09989300 |   0.00000243 |        0.00000243 |        0.00000000 |        0.00000243 |        0.00000243 
LoopControl     | Set up LoopControl                      |          0.00000200 |       0.00000100 |   0.00000153 |        0.00000153 |        0.00000000 |        0.00000153 |        0.00000153 
ML_BSSN_Helper  | Set checkpointing and prolongation group|          0.00002300 |       0.00002200 |   0.00002263 |        0.00002263 |        0.00000000 |        0.00002263 |        0.00002263 
CarpetReduce    | Startup routine                         |          0.00002600 |       0.00002500 |   0.00002557 |        0.00002557 |        0.00000000 |        0.00002557 |        0.00002557 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000100 |       0.00000100 |   0.00000142 |        0.00000142 |        0.00000000 |        0.00000142 |        0.00000142 
CoordBase       | Register a GH extension to store the coo|          0.00000100 |       0.00000200 |   0.00000138 |        0.00000138 |        0.00000000 |        0.00000138 |        0.00000138 
Timers          | Prepare hierarchical timers             |          0.00000600 |       0.00000500 |   0.00000572 |        0.00000572 |        0.00000000 |        0.00000572 |        0.00000572 
Carpet          | Startup routine                         |          0.00000200 |       0.00000200 |   0.00000213 |        0.00000213 |        0.00000000 |        0.00000213 |        0.00000213 
IOUtil          | Startup routine                         |          0.00000200 |       0.00000200 |   0.00000195 |        0.00000195 |        0.00000000 |        0.00000195 |        0.00000195 
ML_BSSN         | create banner                           |          0.00000100 |       0.00000100 |   0.00000120 |        0.00000120 |        0.00000000 |        0.00000120 |        0.00000120 
ML_BSSN_Helper  | Register slicing                        |          0.00000100 |       0.00000200 |   0.00000132 |        0.00000132 |        0.00000000 |        0.00000132 |        0.00000132 
CarpetIOASCII   | Startup routine                         |          0.00003300 |       0.00003300 |   0.00003303 |        0.00003303 |        0.00000000 |        0.00003303 |        0.00003303 
MoL             | Startup banner                          |          0.00000100 |       0.00000200 |   0.00000163 |        0.00000163 |        0.00000000 |        0.00000163 |        0.00000163 
SymBase         | Register GH Extension for SymBase       |          0.00000200 |       0.00000200 |   0.00000166 |        0.00000166 |        0.00000000 |        0.00000166 |        0.00000166 
CarpetIOBasic   | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000336 |        0.00000336 |        0.00000000 |        0.00000336 |        0.00000336 
Vectors         | Print startup message                   |          0.00002700 |       0.00000700 |   0.00002728 |        0.00002728 |        0.00000000 |        0.00002728 |        0.00002728 
hwloc           | Output hwloc version                    |          0.00002400 |       0.00000600 |   0.00002418 |        0.00002418 |        0.00000000 |        0.00002418 |        0.00002418 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10062500 |       0.10022300 |   0.00015842 |        0.00015842 |        0.00000000 |        0.00015842 |        0.00015842 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00003300 |       0.00003400 |   0.00003379 |        0.00003379 |        0.00000000 |        0.00003379 |        0.00003379 
Boundary        | Register boundary conditions that this t|          0.00001700 |       0.00001600 |   0.00001619 |        0.00001619 |        0.00000000 |        0.00001619 |        0.00001619 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00004600 |       0.00004700 |   0.00004610 |        0.00004610 |        0.00000000 |        0.00004610 |        0.00004610 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001200 |       0.00001200 |   0.00001213 |        0.00001213 |        0.00000000 |        0.00001213 |        0.00001213 
CoordGauge      | Identify the slicing for the next iterat|          0.00000900 |       0.00000900 |   0.00000967 |        0.00000967 |        0.00000000 |        0.00000967 |        0.00000967 
ML_BSSN_Helper  | Handle parameter backward compatibility |          0.00002400 |       0.00002400 |   0.00002431 |        0.00002431 |        0.00000000 |        0.00002431 |        0.00002431 
MoL             | Set up the MoL bookkeeping index arrays |          0.00005600 |       0.00002300 |   0.00005621 |        0.00005621 |        0.00000000 |        0.00005621 |        0.00005621 
MoL             | Set the flag so it is ok to register wit|          0.00001000 |       0.00001100 |   0.00001018 |        0.00001018 |        0.00000000 |        0.00001018 |        0.00001018 
TmunuBase       | Set the stress_energy_state variable    |          0.00006000 |       0.00006000 |   0.00005923 |        0.00005923 |        0.00000000 |        0.00005923 |        0.00005923 
ML_BSSN         | Register Variables for MoL              |          0.00010900 |       0.00007300 |   0.00010942 |        0.00010942 |        0.00000000 |        0.00010942 |        0.00010942 
ML_BSSN_Helper  | Register ADMBase variables as constraine|          0.00002800 |       0.00002800 |   0.00002787 |        0.00002787 |        0.00000000 |        0.00002787 |        0.00002787 
CartGrid3D      | Register symmetry boundaries            |          0.00002600 |       0.00002600 |   0.00002639 |        0.00002639 |        0.00000000 |        0.00002639 |        0.00002639 
ML_BSSN         | register symmetries                     |          0.00004700 |       0.00004700 |   0.00004656 |        0.00004656 |        0.00000000 |        0.00004656 |        0.00004656 
SymBase         | Print symmetry boundary face description|          0.00001100 |       0.00001100 |   0.00001067 |        0.00001067 |        0.00000000 |        0.00001067 |        0.00001067 
MoL             | Report how many of each type of variable|          0.00021100 |       0.00006500 |   0.00021106 |        0.00021106 |        0.00000000 |        0.00021106 |        0.00021106 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00069900 |       0.00048600 |   0.00069977 |        0.00069977 |        0.00000000 |        0.00069977 |        0.00069977 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001400 |       0.00001400 |   0.00001364 |        0.00001364 |        0.00000000 |        0.00001364 |        0.00001364 
Boundary        | Check dimension of grid variables       |          0.00001000 |       0.00001000 |   0.00000956 |        0.00000956 |        0.00000000 |        0.00000956 |        0.00000956 
Carpet          | Parameter checking routine              |          0.00001600 |       0.00001600 |   0.00001603 |        0.00001603 |        0.00000000 |        0.00001603 |        0.00001603 
CarpetLib       | Test prolongation operators             |          0.00002400 |       0.00002300 |   0.00002312 |        0.00002312 |        0.00000000 |        0.00002312 |        0.00002312 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00001500 |       0.00001500 |   0.00001459 |        0.00001459 |        0.00000000 |        0.00001459 |        0.00001459 
Fortran         | Test whether Fortran parameters work cor|          0.00001000 |       0.00000900 |   0.00000977 |        0.00000977 |        0.00000000 |        0.00000977 |        0.00000977 
ML_BSSN_Helper  | Check parameters                        |          0.00013400 |       0.00005400 |   0.00013391 |        0.00013391 |        0.00000000 |        0.00013391 |        0.00013391 
MoL             | Basic parameter checking                |          0.00001100 |       0.00001100 |   0.00001071 |        0.00001071 |        0.00000000 |        0.00001071 |        0.00001071 
TmunuBase       | Check that no deprecated parameters are |          0.00001200 |       0.00001200 |   0.00001186 |        0.00001186 |        0.00000000 |        0.00001186 |        0.00001186 
Vectors         | Run correctness tests.                  |          0.00014000 |       0.00010400 |   0.00014034 |        0.00014034 |        0.00000000 |        0.00014034 |        0.00014034 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00038600 |       0.00026800 |   0.00038354 |        0.00038354 |        0.00000000 |        0.00038354 |        0.00038354 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00003400 |       0.00000000 |   0.00003440 |        0.00003440 |        0.00000000 |        0.00003440 |        0.00003440 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00002700 |       0.00000000 |   0.00002678 |        0.00002678 |        0.00000000 |        0.00002678 |        0.00002678 
ADMBase         | Set the dtshift_state variable to 1     |          0.00002600 |       0.00000000 |   0.00002587 |        0.00002587 |        0.00000000 |        0.00002587 |        0.00002587 
ADMMacros       | Initialize the local_spatial_order      |          0.00002600 |       0.00000000 |   0.00002618 |        0.00002618 |        0.00000000 |        0.00002618 |        0.00002618 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00025000 |       0.00000000 |   0.00024995 |        0.00024995 |        0.00000000 |        0.00024995 |        0.00024995 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00036300 |       0.00000000 |   0.00036218 |        0.00036218 |        0.00000000 |        0.00036218 |        0.00036218 
CarpetReduce    | Allocate the weight function            |          0.00007700 |       0.00000000 |   0.00007676 |        0.00007676 |        0.00000000 |        0.00007676 |        0.00007676 
CarpetReduce    | Initialise the weight function          |          0.00102300 |       0.00000000 |   0.00102268 |        0.00102268 |        0.00000000 |        0.00102268 |        0.00102268 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00215700 |       0.00077400 |   0.00215691 |        0.00215691 |        0.00000000 |        0.00215691 |        0.00215691 
CarpetReduce    | Set up the weight function for the restr|          0.00004900 |       0.00004600 |   0.00004900 |        0.00004900 |        0.00000000 |        0.00004900 |        0.00004900 
CarpetReduce    | Set the weight function                 |          0.00115800 |       0.00109600 |   0.00115728 |        0.00115728 |        0.00000000 |        0.00115728 |        0.00115728 
CarpetReduce    | Test the weight function                |          0.00016400 |       0.00015500 |   0.00016418 |        0.00016418 |        0.00000000 |        0.00016418 |        0.00016418 
ML_BSSN         | check boundaries treatment              |          0.00004400 |       0.00004200 |   0.00004442 |        0.00004442 |        0.00000000 |        0.00004442 |        0.00004442 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00001800 |       0.00001700 |   0.00001787 |        0.00001787 |        0.00000000 |        0.00001787 |        0.00001787 
SymBase         | Check whether the driver set up the grid|          0.00003000 |       0.00002800 |   0.00002977 |        0.00002977 |        0.00000000 |        0.00002977 |        0.00002977 
Time            | Initialise Time variables               |          0.00001800 |       0.00001700 |   0.00001767 |        0.00001767 |        0.00000000 |        0.00001767 |        0.00001767 
Time            | Set timestep based on Courant condition |          0.00007000 |       0.00002700 |   0.00006990 |        0.00006990 |        0.00000000 |        0.00006990 |        0.00006990 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.00553400 |       0.00220200 |   0.00553182 |        0.00553182 |        0.00000000 |        0.00553182 |        0.00553182 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00003700 |       0.00003400 |   0.00003619 |        0.00003619 |        0.00000000 |        0.00003619 |        0.00003619 
ADMBase         | Set the metric and extrinsic curvature t|          0.00090200 |       0.00085500 |   0.00090252 |        0.00090252 |        0.00000000 |        0.00090252 |        0.00090252 
ADMBase         | Set the lapse to 1 at all points        |          0.00009900 |       0.00009400 |   0.00009904 |        0.00009904 |        0.00000000 |        0.00009904 |        0.00009904 
ADMBase         | Set the shift to 0 at all points        |          0.00022300 |       0.00021100 |   0.00022267 |        0.00022267 |        0.00000000 |        0.00022267 |        0.00022267 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00009500 |       0.00009000 |   0.00009497 |        0.00009497 |        0.00000000 |        0.00009497 |        0.00009497 
ADMBase         | Set the dtshift to 0 at all points      |          0.00024000 |       0.00024000 |   0.00024067 |        0.00024067 |        0.00000000 |        0.00024067 |        0.00024067 
CarpetIOASCII   | Initialisation routine                  |          0.00002100 |       0.00002200 |   0.00002174 |        0.00002174 |        0.00000000 |        0.00002174 |        0.00002174 
CarpetIOBasic   | Initialisation routine                  |          0.00001800 |       0.00001800 |   0.00001804 |        0.00001804 |        0.00000000 |        0.00001804 |        0.00001804 
ML_BSSN         | ML_BSSN_InitialADMBase1Everywhere       |          0.00309500 |       0.00305700 |   0.00309532 |        0.00309532 |        0.00000000 |        0.00309532 |        0.00309532 
ML_BSSN         | ML_BSSN_InitialADMBase2BoundaryScalar   |          0.00290500 |       0.00290500 |   0.00290472 |        0.00290472 |        0.00000000 |        0.00290472 |        0.00290472 
MoL             | Initialise the step size control        |          0.00001100 |       0.00001200 |   0.00001156 |        0.00001156 |        0.00000000 |        0.00001156 |        0.00001156 
ML_BSSN         | ML_BSSN_InitialADMBase2Interior         |          0.00307200 |       0.00307100 |   0.00307135 |        0.00307135 |        0.00000000 |        0.00307135 |        0.00307135 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.01071800 |       0.01060900 |   0.01071878 |        0.01071878 |        0.00000000 |        0.01071878 |        0.01071878 
==================================================================================================================================================================================================
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.00127800 |       0.00127800 |   0.00127812 |        0.00127812 |        0.00000000 |        0.00127812 |        0.00127812 
ADMBase         | Select ADMBase boundary conditions - may|          0.00106100 |       0.00106000 |   0.00106031 |        0.00106031 |        0.00000000 |        0.00106031 |        0.00106031 
Boundary        | Apply all requested local physical bound|          0.00094100 |       0.00090500 |   0.00094288 |        0.00018858 |        0.00034874 |        0.00003488 |        0.00044586 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00014500 |       0.00011900 |   0.00014508 |        0.00002902 |        0.00000616 |        0.00002602 |        0.00003380 
Boundary        | Unselect all grid variables for boundary|          0.00004300 |       0.00003500 |   0.00004214 |        0.00000843 |        0.00000297 |        0.00000754 |        0.00001106 
ML_BSSN         | select boundary conditions              |          0.00124100 |       0.00006000 |   0.00124035 |        0.00124035 |        0.00000000 |        0.00124035 |        0.00124035 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.00233600 |       0.00000000 |   0.00233526 |        0.00233526 |        0.00000000 |        0.00233526 |        0.00233526 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.00287400 |       0.00254900 |   0.00287349 |        0.00287349 |        0.00000000 |        0.00287349 |        0.00287349 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.00226300 |       0.00226100 |   0.00226216 |        0.00226216 |        0.00000000 |        0.00226216 |        0.00226216 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00003000 |       0.00003000 |   0.00003018 |        0.00003018 |        0.00000000 |        0.00003018 |        0.00003018 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00068200 |       0.00068200 |   0.00068189 |        0.00068189 |        0.00000000 |        0.00068189 |        0.00068189 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00010100 |       0.00010000 |   0.00010012 |        0.00010012 |        0.00000000 |        0.00010012 |        0.00010012 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.00611500 |       0.00603500 |   0.00611521 |        0.00611521 |        0.00000000 |        0.00611521 |        0.00611521 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00020700 |       0.00020300 |   0.00020699 |        0.00020699 |        0.00000000 |        0.00020699 |        0.00020699 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.01931700 |       0.01531700 |   0.01931418 |        0.01841010 |        0.00035787 |        0.01825252 |        0.01867480 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00029200 |       0.00029000 |   0.00029229 |        0.00002923 |        0.00001063 |        0.00002745 |        0.00003927 
LoopControl     | Update LoopControl algorithm preferences|          0.00049700 |       0.00049400 |   0.00049480 |        0.00004948 |        0.00000772 |        0.00004266 |        0.00005138 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00016200 |       0.00016100 |   0.00015925 |        0.00001592 |        0.00000334 |        0.00001534 |        0.00001902 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00095100 |       0.00094500 |   0.00094635 |        0.00009463 |        0.00002169 |        0.00008545 |        0.00010967 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00009000 |       0.00008900 |   0.00008880 |        0.00000888 |        0.00000949 |        0.00000778 |        0.00001788 
MoL             | Set the counter for the ODE method to lo|          0.00009800 |       0.00010100 |   0.00009980 |        0.00000998 |        0.00000300 |        0.00000934 |        0.00001277 
MoL             | Ensure the correct time and timestep are|          0.00008200 |       0.00007800 |   0.00007951 |        0.00000795 |        0.00000279 |        0.00000753 |        0.00001058 
MoL             | Allocate storage for scratch levels     |          0.00141800 |       0.00030600 |   0.00141526 |        0.00014153 |        0.00105269 |        0.00002762 |        0.00114014 
MoL             | Allocate sufficient space for array scra|          0.00026100 |       0.00022700 |   0.00026137 |        0.00002614 |        0.00000996 |        0.00002483 |        0.00003557 
MoL             | Ensure the data is in the correct timele|          0.01256100 |       0.01123600 |   0.01255759 |        0.00125576 |        0.00011176 |        0.00119461 |        0.00130817 
MoL             | Initialise the RHS functions            |          0.01570800 |       0.01515600 |   0.01570726 |        0.00039268 |        0.00032749 |        0.00032791 |        0.00052840 
ML_BSSN         | ML_BSSN_EvolutionBoundaryScalar         |          0.13353000 |       0.13241500 |   0.13353240 |        0.00333831 |        0.00039677 |        0.00326177 |        0.00351192 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy1       |          0.13765000 |       0.13755700 |   0.13764667 |        0.00344117 |        0.00067578 |        0.00331223 |        0.00368803 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy2       |          0.23674000 |       0.23660300 |   0.23673560 |        0.00591839 |        0.00054997 |        0.00582929 |        0.00614298 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy3       |          0.29430800 |       0.29426900 |   0.29430459 |        0.00735761 |        0.00022720 |        0.00731467 |        0.00745808 
MoL             | Updates calculated with the efficient Ru|          0.05550600 |       0.05540400 |   0.05550758 |        0.00138769 |        0.00087228 |        0.00118608 |        0.00190240 
MoL             | Alter the counter number                |          0.00036800 |       0.00036600 |   0.00036701 |        0.00000918 |        0.00000659 |        0.00000824 |        0.00001469 
MoL             | If necessary, change the time           |          0.00033100 |       0.00032800 |   0.00033053 |        0.00000826 |        0.00000348 |        0.00000766 |        0.00001136 
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.04898700 |       0.04899300 |   0.04898768 |        0.00122469 |        0.00005028 |        0.00120992 |        0.00124093 
ADMBase         | Select ADMBase boundary conditions - may|          0.01727100 |       0.01702500 |   0.01727536 |        0.00043188 |        0.00022016 |        0.00037626 |        0.00050781 
Boundary        | Apply all requested local physical bound|          0.02017300 |       0.01960800 |   0.02017433 |        0.00014410 |        0.00162798 |        0.00003471 |        0.00047125 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00393400 |       0.00379700 |   0.00393773 |        0.00002813 |        0.00001509 |        0.00002574 |        0.00003366 
Boundary        | Unselect all grid variables for boundary|          0.00108000 |       0.00103300 |   0.00107780 |        0.00000770 |        0.00000325 |        0.00000736 |        0.00001048 
ML_BSSN         | select boundary conditions              |          0.02476500 |       0.02341900 |   0.02476289 |        0.00061907 |        0.00198315 |        0.00041805 |        0.00119030 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.09370200 |       0.08917300 |   0.09370006 |        0.00234250 |        0.00035814 |        0.00225193 |        0.00246095 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.11528100 |       0.11368000 |   0.11527764 |        0.00288194 |        0.00024380 |        0.00283793 |        0.00300175 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.10793400 |       0.10525700 |   0.10792761 |        0.00269819 |        0.00033846 |        0.00260378 |        0.00280332 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00103500 |       0.00100100 |   0.00102840 |        0.00002571 |        0.00000908 |        0.00002432 |        0.00003326 
MoL             | If necessary, change the timestep       |          0.00033200 |       0.00032400 |   0.00032766 |        0.00000819 |        0.00000456 |        0.00000763 |        0.00001235 
MoL             | Control the step size                   |          0.00008800 |       0.00007900 |   0.00008519 |        0.00000852 |        0.00000667 |        0.00000763 |        0.00001484 
MoL             | Restoring the Save and Restore variables|          0.00027600 |       0.00024700 |   0.00027563 |        0.00002756 |        0.00000553 |        0.00002669 |        0.00003278 
MoL             | Free storage for scratch levels         |          0.00026600 |       0.00023600 |   0.00026316 |        0.00002632 |        0.00000296 |        0.00002501 |        0.00002861 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00670400 |       0.00603600 |   0.00670446 |        0.00067045 |        0.00002407 |        0.00065599 |        0.00068007 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00096300 |       0.00086700 |   0.00096246 |        0.00009625 |        0.00000795 |        0.00009326 |        0.00010168 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.06110000 |       0.06099200 |   0.06109647 |        0.00610965 |        0.00006127 |        0.00608770 |        0.00616188 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00185500 |       0.00185300 |   0.00185756 |        0.00018576 |        0.00001803 |        0.00018035 |        0.00019791 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |          1.39439700 |       1.37775500 |   1.39435608 |        0.04084013 |        0.00922966 |        0.03939381 |        0.04476678 
==================================================================================================================================================================================================
NaNChecker      | Prepare data structures to check for NaN|          0.00011400 |       0.00011200 |   0.00011424 |        0.00001039 |        0.00001499 |        0.00000793 |        0.00002010 
NaNChecker      | Check for NaNs                          |          0.00028000 |       0.00028000 |   0.00027896 |        0.00002536 |        0.00000904 |        0.00002401 |        0.00003319 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00008600 |       0.00008600 |   0.00008853 |        0.00000805 |        0.00000387 |        0.00000741 |        0.00001064 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00027400 |       0.00027400 |   0.00027158 |        0.00002469 |        0.00000462 |        0.00002360 |        0.00002782 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00075400 |       0.00075200 |   0.00075331 |        0.00006848 |        0.00003253 |        0.00006295 |        0.00009175 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00019200 |       0.00019000 |   0.00018966 |        0.00001724 |        0.00001325 |        0.00001508 |        0.00002608 
CarpetLib       | Print memory statistics if desired      |          0.00122900 |       0.00073000 |   0.00122971 |        0.00011179 |        0.00068336 |        0.00001485 |        0.00060085 
LoopControl     | Output LoopControl statistics           |          0.00035100 |       0.00035100 |   0.00034999 |        0.00003182 |        0.00001291 |        0.00002943 |        0.00004239 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.00177200 |       0.00127100 |   0.00176936 |        0.00016085 |        0.00070952 |        0.00005935 |        0.00066932 
==================================================================================================================================================================================================
LoopControl     | Output LoopControl statistics           |          0.00004300 |       0.00004300 |   0.00004311 |        0.00004311 |        0.00000000 |        0.00004311 |        0.00004311 
MoL             | Free the MoL bookkeeping index arrays   |          0.00003600 |       0.00003500 |   0.00003566 |        0.00003566 |        0.00000000 |        0.00003566 |        0.00003566 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00007900 |       0.00007800 |   0.00007877 |        0.00007877 |        0.00000000 |        0.00007877 |        0.00007877 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00015100 |       0.00015200 |   0.00015179 |        0.00015179 |        0.00000000 |        0.00015179 |        0.00015179 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00015100 |       0.00015200 |   0.00015179 |        0.00015179 |        0.00000000 |        0.00015179 |        0.00015179 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          1.48829100 |       1.44636500 |   1.48825901 |        1.48825901 |        0.00000000 |        1.48825901 |        1.48825901 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Sat Jun 11 05:38:54 UTC 2022
+ echo Done.
Done.
  Elapsed time: 2.4 s
