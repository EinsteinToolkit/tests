/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az1109-982
+ date
Tue Feb  4 00:14:22 UTC 2025
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=1
+ CACTUS_NUM_PROCS=1
+ export CACTUS_NUM_THREADS=2
+ CACTUS_NUM_THREADS=2
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=2
+ OMP_NUM_THREADS=2
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1738628062
+ CACTUS_STARTTIME=1738628062
+ '[' 1 = 1 ']'
+ '[' 0 -eq 0 ']'
+ /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.17.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.17.0
Compile date:      Feb 04 2025 (00:07:41)
Run date:          Feb 04 2025 (00:14:22+0000)
Run host:          fv-az1109-982.c1mkocgufe1ehiau2kxkl3vnrf.dx.internal.cloudapp.net (pid=130387)
Working directory: /home/runner/simulations/TestJob01_temp_1/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_1/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_1/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.7.0, API version 0x20500
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 1
MPI hosts:
  0: fv-az1109-982
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 1
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=16364584KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=46d51030-1264-e040-92e0-4ca404d204b4, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/system.slice/runner-provisioner.service, OSName=Linux, OSRelease=6.5.0-1025-azure, OSVersion="#26~22.04.1-Ubuntu SMP Thu Jul 11 22:33:04 UTC 2024", HostName=fv-az1109-982, Architecture=x86_64, hwlocVersion=2.7.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=16364584KB, CPUVendor=AuthenticAMD, CPUFamilyNumber=25, CPUModelNumber=1, CPUModel="AMD EPYC 7763 64-Core Processor                ", CPUStepping=1)
    L3Cache L#0: (P#0, size=32768KB, linesize=64, ways=16, Inclusive=0)
      L2Cache L#0: (P#0, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#0: (P#0, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
            PU L#1: (P#1)
      L2Cache L#1: (P#1, size=512KB, linesize=64, ways=8, Inclusive=1)
        L1dCache L#1: (P#1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#2: (P#2)
            PU L#3: (P#3)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0-3} P#{0-3}
    OpenMP thread 1: PU set L#{0-3} P#{0-3}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 1 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
    OpenMP thread 1: PU set L#{2} P#{2}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 2 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 2 PUs
  Cache (unknown name) has type "unified" depth 2
    size 524288 linesize 64 associativity 8 stride 65536, for 2 PUs
  Cache (unknown name) has type "unified" depth 3
    size 33554432 linesize 64 associativity 16 stride 2097152, for 4 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00125627 sec
      iterations=10000000... time=0.0124351 sec
      iterations=100000000... time=0.123724 sec
      iterations=900000000... time=1.11354 sec
      iterations=900000000... time=0.83702 sec
      result: 6.50959 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00196818 sec
      iterations=10000000... time=0.0197345 sec
      iterations=100000000... time=0.197251 sec
      iterations=600000000... time=1.18392 sec
      result: 16.2174 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187758 sec
      iterations=10000000... time=0.0185729 sec
      iterations=100000000... time=0.200892 sec
      iterations=500000000... time=0.930171 sec
      iterations=1000000000... time=1.85633 sec
      result: 8.61914 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000125325 sec
      iterations=10000... time=0.00124429 sec
      iterations=100000... time=0.0123708 sec
      iterations=1000000... time=0.123659 sec
      iterations=9000000... time=1.11315 sec
      result: 1.23683 nsec
    Read latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=0.000471752 sec
      iterations=10000... time=0.00444192 sec
      iterations=100000... time=0.0441703 sec
      iterations=1000000... time=0.451365 sec
      iterations=2000000... time=0.885166 sec
      iterations=4000000... time=1.76861 sec
      result: 4.42152 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=7.82e-07 sec
      iterations=10... time=5.25e-06 sec
      iterations=100... time=3.3863e-05 sec
      iterations=1000... time=0.000296535 sec
      iterations=10000... time=0.00253277 sec
      iterations=100000... time=0.024355 sec
      iterations=1000000... time=0.243768 sec
      iterations=5000000... time=1.221 sec
      result: 100.639 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=7.875e-06 sec
      iterations=10... time=5.3309e-05 sec
      iterations=100... time=0.000462605 sec
      iterations=1000... time=0.0045239 sec
      iterations=10000... time=0.0453151 sec
      iterations=100000... time=0.458854 sec
      iterations=200000... time=0.904733 sec
      iterations=400000... time=1.80883 sec
      result: 86.9546 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.076e-06 sec
      iterations=10000... time=3.193e-05 sec
      iterations=100000... time=0.000252983 sec
      iterations=1000000... time=0.00247235 sec
      iterations=10000000... time=0.024738 sec
      iterations=100000000... time=0.251439 sec
      iterations=400000000... time=0.991928 sec
      iterations=800000000... time=1.98058 sec
      result: 0.309466 nsec
    Write latency of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1000... time=1.2414e-05 sec
      iterations=10000... time=9.2383e-05 sec
      iterations=100000... time=0.000953433 sec
      iterations=1000000... time=0.00919004 sec
      iterations=10000000... time=0.0919298 sec
      iterations=100000000... time=0.919326 sec
      iterations=200000000... time=1.83964 sec
      result: 1.14978 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 1*24576 bytes):
      iterations=1... time=2.91e-07 sec
      iterations=10... time=2.665e-06 sec
      iterations=100... time=2.6079e-05 sec
      iterations=1000... time=0.000259565 sec
      iterations=10000... time=0.00260517 sec
      iterations=100000... time=0.0260691 sec
      iterations=1000000... time=0.260906 sec
      iterations=4000000... time=1.04328 sec
      result: 94.2263 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 1*393216 bytes):
      iterations=1... time=6.011e-06 sec
      iterations=10... time=5.359e-05 sec
      iterations=100... time=0.00053996 sec
      iterations=1000... time=0.00451782 sec
      iterations=10000... time=0.0439182 sec
      iterations=100000... time=0.440369 sec
      iterations=200000... time=0.882323 sec
      iterations=400000... time=1.76401 sec
      result: 89.164 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=4.2039e-05 sec
      iterations=10... time=0.00050267 sec
      iterations=100... time=0.00504498 sec
      iterations=1000... time=0.0459287 sec
      iterations=10000... time=0.456357 sec
      iterations=20000... time=0.926318 sec
      iterations=40000... time=1.83047 sec
      result: 0.0377609 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=0.000161492 sec
      iterations=10... time=0.00165612 sec
      iterations=100... time=0.016717 sec
      iterations=1000... time=0.166888 sec
      iterations=7000... time=1.18543 sec
      result: 0.144017 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.00410058 sec
      iterations=10... time=0.0413472 sec
      iterations=100... time=0.400452 sec
      iterations=300... time=1.20936 sec
      result: 0.387203 Gupdates/sec
  Single-node measurements (using 1 MPI processes with 2 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00139209 sec
      iterations=10000000... time=0.0123856 sec
      iterations=100000000... time=0.123956 sec
      iterations=900000000... time=1.11446 sec
      iterations=900000000... time=0.838869 sec
      result: 6.53146 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00197903 sec
      iterations=10000000... time=0.0197376 sec
      iterations=100000000... time=0.197383 sec
      iterations=600000000... time=1.18399 sec
      result: 16.2164 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00187569 sec
      iterations=10000000... time=0.0185671 sec
      iterations=100000000... time=0.186581 sec
      iterations=600000000... time=1.15258 sec
      result: 8.32917 Giop/sec
    Read latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000140031 sec
      iterations=10000... time=0.00131179 sec
      iterations=100000... time=0.0123692 sec
      iterations=1000000... time=0.123884 sec
      iterations=9000000... time=1.11488 sec
      result: 1.23876 nsec
    Read latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=0.000463893 sec
      iterations=10000... time=0.00440683 sec
      iterations=100000... time=0.0437755 sec
      iterations=1000000... time=0.437453 sec
      iterations=3000000... time=1.31142 sec
      result: 4.37141 nsec
    Read latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.61e-07 sec
      iterations=10... time=3.6265e-06 sec
      iterations=100... time=3.76505e-05 sec
      iterations=1000... time=0.000329391 sec
      iterations=10000... time=0.00265854 sec
      iterations=100000... time=0.024378 sec
      iterations=1000000... time=0.243755 sec
      iterations=5000000... time=1.22054 sec
      result: 100.677 GByte/sec
    Read bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=8.7765e-06 sec
      iterations=10... time=5.1486e-05 sec
      iterations=100... time=0.000485417 sec
      iterations=1000... time=0.00469538 sec
      iterations=10000... time=0.0474763 sec
      iterations=100000... time=0.469354 sec
      iterations=200000... time=0.941307 sec
      iterations=400000... time=1.87556 sec
      result: 83.8611 GByte/sec
    Read bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.3415e-06 sec
      iterations=10000... time=3.25965e-05 sec
      iterations=100000... time=0.000290213 sec
      iterations=1000000... time=0.00256549 sec
      iterations=10000000... time=0.0247654 sec
      iterations=100000000... time=0.247599 sec
      iterations=400000000... time=0.991721 sec
      iterations=800000000... time=1.98141 sec
      result: 0.309595 nsec
    Write latency of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1000... time=9.192e-06 sec
      iterations=10000... time=8.7188e-05 sec
      iterations=100000... time=0.000883793 sec
      iterations=1000000... time=0.00873582 sec
      iterations=10000000... time=0.0880459 sec
      iterations=100000000... time=0.884304 sec
      iterations=200000000... time=1.76946 sec
      result: 1.10591 nsec
    Write latency of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 2 PUs) (using 2*24576 bytes):
      iterations=1... time=4.81e-07 sec
      iterations=10... time=3.8125e-06 sec
      iterations=100... time=3.61575e-05 sec
      iterations=1000... time=0.000307655 sec
      iterations=10000... time=0.00274321 sec
      iterations=100000... time=0.0268812 sec
      iterations=1000000... time=0.268857 sec
      iterations=4000000... time=1.0792 sec
      result: 91.0896 GByte/sec
    Write bandwidth of L2 cache (for 2 PUs) (using 2*393216 bytes):
      iterations=1... time=1.3811e-05 sec
      iterations=10... time=5.99275e-05 sec
      iterations=100... time=0.000496578 sec
      iterations=1000... time=0.0044844 sec
      iterations=10000... time=0.0439265 sec
      iterations=100000... time=0.439295 sec
      iterations=300000... time=1.31595 sec
      result: 89.6425 GByte/sec
    Write bandwidth of L3 cache (for 4 PUs) (using 1*25165824 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 2 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=1.0054e-05 sec
      iterations=10... time=0.000123476 sec
      iterations=100... time=0.00120019 sec
      iterations=1000... time=0.0118399 sec
      iterations=10000... time=0.121478 sec
      iterations=90000... time=1.08282 sec
      result: 0.143625 Gupdates/sec
    Stencil code performance of L2 cache (for 2 PUs) (using 1*29^3 grid points, 1*390224 bytes):
      iterations=1... time=4.0706e-05 sec
      iterations=10... time=0.000410377 sec
      iterations=100... time=0.00408754 sec
      iterations=1000... time=0.0416529 sec
      iterations=10000... time=0.426572 sec
      iterations=30000... time=1.31329 sec
      result: 0.557127 Gupdates/sec
    Stencil code performance of L3 cache (for 4 PUs) (using 1*116^3 grid points, 1*24974336 bytes):
      iterations=1... time=0.000977021 sec
      iterations=10... time=0.0112807 sec
      iterations=100... time=0.112889 sec
      iterations=1000... time=1.14129 sec
      result: 1.36765 Gupdates/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 1 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 1 x 1 x 1
INFO (PUGH):   Local load: 1000   [10 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Tue Feb  4 00:15:26 UTC 2025
+ echo Done.
Done.
  Elapsed time: 64.1 s
