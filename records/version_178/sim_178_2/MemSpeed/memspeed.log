/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed/output-0000-active
+ hostname
fv-az136-56
+ date
Wed Nov 17 03:03:03 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1637118183
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Nov 17 2021 (02:36:05)
Run date:          Nov 17 2021 (03:03:04+0000)
Run host:          fv-az136-56.tx1wn0pmd2buhh0jqmoeauzz0d.cx.internal.cloudapp.net (pid=107196)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/MemSpeed
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/CactusUtils/MemSpeed/test/memspeed.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->hwloc MemSpeed SystemTopology CartGrid3D CoordBase IOASCII IOUtil PUGH PUGHSlab<---
Thorn hwloc requests automatic activation of zlib
Thorn MemSpeed requests automatic activation of Vectors
Thorn MemSpeed requests automatic activation of MPI
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn IOASCII...Success -> active implementation IOASCII
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn MemSpeed...Success -> active implementation MemSpeed
Activating thorn MPI...Success -> active implementation MPI
Activating thorn PUGH...Success -> active implementation Driver
Activating thorn PUGHSlab...Success -> active implementation Hyperslab
Activating thorn SystemTopology...Success -> active implementation SystemTopology
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version
      SystemTopology::ST_system_topology: Output and/or modify system topology and hardware locality
      PUGH::Driver_Startup: Startup routine
      PUGH::PUGH_RegisterPUGHP2LRoutines: Register Physical to Logical process mapping routines
      PUGH::PUGH_RegisterPUGHTopologyRoutines: Register topology generation routines routines
      IOUtil::IOUtil_Startup: Startup routine
      Vectors::Vectors_Startup: Print startup message
      IOASCII::IOASCII_Startup: Startup routine

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      MemSpeed::MemSpeed_MeasureSpeed: [meta] Measure CPU, memory, cache speeds
  Parameter checking routines
    [CCTK_PARAMCHECK]
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_INITIAL]
      [CCTK_POSTINITIAL]
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        IOASCII::IOASCII_Choose1D: Choose 1D output lines
        IOASCII::IOASCII_Choose2D: Choose 2D output planes
        PUGH::PUGH_Report: Report on PUGH set up
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
    [CCTK_EVOL]
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
    [CCTK_POSTSTEP]
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      PUGH::Driver_Terminate: Termination routine

  Shutdown routines
    [CCTK_SHUTDOWN]

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
--------------------------------------------------------------------------------
INFO (hwloc): library version 2.1.0, API version 0x20100
INFO (SystemTopology): MPI process-to-host mapping:
This is MPI process 0 of 2
MPI hosts:
  0: fv-az136-56
This MPI process runs on host 0 of 1
On this host, this is MPI process 0 of 2
INFO (SystemTopology): Topology support:
Discovery support:
  discovery->pu                            : yes
CPU binding support:
  cpubind->set_thisproc_cpubind            : yes
  cpubind->get_thisproc_cpubind            : yes
  cpubind->set_proc_cpubind                : yes
  cpubind->get_proc_cpubind                : yes
  cpubind->set_thisthread_cpubind          : yes
  cpubind->get_thisthread_cpubind          : yes
  cpubind->set_thread_cpubind              : yes
  cpubind->get_thread_cpubind              : yes
  cpubind->get_thisproc_last_cpu_location  : yes
  cpubind->get_proc_last_cpu_location      : yes
  cpubind->get_thisthread_last_cpu_location: yes
Memory binding support:
  membind->set_thisproc_membind            : no
  membind->get_thisproc_membind            : no
  membind->set_proc_membind                : no
  membind->get_proc_membind                : no
  membind->set_thisthread_membind          : yes
  membind->get_thisthread_membind          : yes
  membind->set_area_membind                : yes
  membind->get_area_membind                : yes
  membind->alloc_membind                   : yes
  membind->firsttouch_membind              : yes
  membind->bind_membind                    : yes
  membind->interleave_membind              : yes
  membind->nexttouch_membind               : no
  membind->migrate_membind                 : yes
INFO (SystemTopology): Hardware objects in this node:
Machine L#0: (P#0, total=7118772KB, DMIProductName="Virtual Machine", DMIProductVersion=7.0, DMIProductUUID=39a4a4da-dfd4-8e45-a63d-51072e107a6a, DMIBoardVendor="Microsoft Corporation", DMIBoardName="Virtual Machine", DMIBoardVersion=7.0, DMIChassisVendor="Microsoft Corporation", DMIChassisType=3, DMIChassisVersion=7.0, DMIChassisAssetTag=7783-7084-3265-9085-8269-3286-77, DMIBIOSVendor="American Megatrends Inc.", DMIBIOSVersion="090008 ", DMIBIOSDate=12/07/2018, DMISysVendor="Microsoft Corporation", Backend=Linux, LinuxCgroup=/, OSName=Linux, OSRelease=5.11.0-1020-azure, OSVersion="#21~20.04.1-Ubuntu SMP Mon Oct 11 18:54:28 UTC 2021", HostName=fv-az136-56, Architecture=x86_64, hwlocVersion=2.1.0, ProcessName=cactus_sim)
  Package L#0: (P#0, total=7118772KB, CPUVendor=GenuineIntel, CPUFamilyNumber=6, CPUModelNumber=85, CPUModel="Intel(R) Xeon(R) Platinum 8272CL CPU @ 2.60GHz", CPUStepping=7)
    L3Cache L#0: (P#-1, size=36608KB, linesize=64, ways=11, Inclusive=0)
      L2Cache L#0: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#0: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#0: (P#0)
            PU L#0: (P#0)
      L2Cache L#1: (P#-1, size=1024KB, linesize=64, ways=16, Inclusive=0)
        L1dCache L#1: (P#-1, size=32KB, linesize=64, ways=8, Inclusive=0)
          Core L#1: (P#1)
            PU L#1: (P#1)
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Setting thread CPU bindings:
INFO (SystemTopology): Thread CPU bindings:
  MPI process 0 on host 0 (process 0 of 2 on this host)
    OpenMP thread 0: PU set L#{0} P#{0}
  MPI process 1 on host 0 (process 1 of 2 on this host)
    OpenMP thread 0: PU set L#{1} P#{1}
INFO (SystemTopology): Extracting CPU/cache/memory properties:
  There are 1 PUs per core (aka hardware SMT threads)
  There are 1 threads per core (aka SMT threads used)
  Cache (unknown name) has type "data" depth 1
    size 32768 linesize 64 associativity 8 stride 4096, for 1 PUs
  Cache (unknown name) has type "unified" depth 2
    size 1048576 linesize 64 associativity 16 stride 65536, for 1 PUs
  Cache (unknown name) has type "unified" depth 3
    size 37486592 linesize 64 associativity 11 stride 3407872, for 2 PUs
INFO (PUGH): Using physical to logical mappings: direct
INFO (PUGH): Using topology generator: automatic
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
--------------------------------------------------------------------------------
Driver provided by PUGH
--------------------------------------------------------------------------------

INFO (PUGH): Not setting up a topology for 1 dimensions
INFO (PUGH): Not setting up a topology for 2 dimensions
INFO (PUGH): Setting up a topology for 3 dimensions
INFO (IOASCII): I/O Method 'IOASCII_1D' registered: output of 1D lines of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 1D output every 1 iterations
INFO (IOASCII): Periodic 1D output requested for 'GRID::r'
INFO (IOASCII): I/O Method 'IOASCII_2D' registered: output of 2D planes of grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 2D output turned off
INFO (IOASCII): I/O Method 'IOASCII_3D' registered: output of 3D grid functions/arrays to ASCII files
INFO (IOASCII): Periodic 3D output turned off
INFO (MemSpeed): Measuring CPU, cache, memory, and communication speeds:
  Single-core measurements (using 1 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00133691 sec
      iterations=10000000... time=0.0134209 sec
      iterations=100000000... time=0.134117 sec
      iterations=800000000... time=1.0724 sec
      iterations=800000000... time=1.08197 sec
      result: -167.19 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00299072 sec
      iterations=10000000... time=0.029893 sec
      iterations=100000000... time=0.298429 sec
      iterations=400000000... time=1.19261 sec
      result: 10.7328 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00185481 sec
      iterations=10000000... time=0.0182659 sec
      iterations=100000000... time=0.183024 sec
      iterations=600000000... time=1.10063 sec
      result: 8.72232 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=0.000135801 sec
      iterations=10000... time=0.00135421 sec
      iterations=100000... time=0.013485 sec
      iterations=1000000... time=0.134128 sec
      iterations=8000000... time=1.1071 sec
      result: 1.38388 nsec
    Read latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=0.000600705 sec
      iterations=10000... time=0.00536864 sec
      iterations=100000... time=0.0529012 sec
      iterations=1000000... time=0.535245 sec
      iterations=2000000... time=1.05611 sec
      result: 5.28055 nsec
    Read latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Read bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=7e-07 sec
      iterations=10... time=3.5e-06 sec
      iterations=100... time=3.09e-05 sec
      iterations=1000... time=0.000305403 sec
      iterations=10000... time=0.00306362 sec
      iterations=100000... time=0.0306011 sec
      iterations=1000000... time=0.306242 sec
      iterations=4000000... time=1.22434 sec
      result: 80.2912 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.3601e-05 sec
      iterations=10... time=0.000171101 sec
      iterations=100... time=0.00160871 sec
      iterations=1000... time=0.0158754 sec
      iterations=10000... time=0.158714 sec
      iterations=70000... time=1.1113 sec
      result: 49.5367 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write latency of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1000... time=3.3e-06 sec
      iterations=10000... time=2.7201e-05 sec
      iterations=100000... time=0.000279402 sec
      iterations=1000000... time=0.00267842 sec
      iterations=10000000... time=0.026951 sec
      iterations=100000000... time=0.26812 sec
      iterations=400000000... time=1.07699 sec
      result: 0.336559 nsec
    Write latency of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1000... time=3.23e-05 sec
      iterations=10000... time=0.000151101 sec
      iterations=100000... time=0.00144411 sec
      iterations=1000000... time=0.0142617 sec
      iterations=10000000... time=0.142301 sec
      iterations=80000000... time=1.29526 sec
      result: 2.02385 nsec
    Write latency of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Write bandwidth of D1 cache (for 1 PUs) (using 1*24576 bytes):
      iterations=1... time=5e-07 sec
      iterations=10... time=2e-06 sec
      iterations=100... time=1.59e-05 sec
      iterations=1000... time=0.000154201 sec
      iterations=10000... time=0.00154151 sec
      iterations=100000... time=0.0154079 sec
      iterations=1000000... time=0.194247 sec
      iterations=6000000... time=1.20398 sec
      result: 122.474 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 1*786432 bytes):
      iterations=1... time=3.46e-05 sec
      iterations=10... time=0.000309503 sec
      iterations=100... time=0.00302852 sec
      iterations=1000... time=0.0275867 sec
      iterations=10000... time=0.280405 sec
      iterations=40000... time=0.958893 sec
      iterations=80000... time=1.80453 sec
      result: 34.8647 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 1*28114944 bytes):
      [skipped -- avoiding large-memory benchmarks]
    Stencil code performance of D1 cache (for 1 PUs) (using 1*12^3 grid points, 1*27648 bytes):
      iterations=1... time=3.12e-05 sec
      iterations=10... time=0.000234702 sec
      iterations=100... time=0.00249952 sec
      iterations=1000... time=0.048298 sec
      iterations=10000... time=0.316062 sec
      iterations=30000... time=1.00538 sec
      result: 0.0515626 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 1*37^3 grid points, 1*810448 bytes):
      iterations=1... time=0.000210701 sec
      iterations=10... time=0.00197252 sec
      iterations=100... time=0.043814 sec
      iterations=1000... time=0.244023 sec
      iterations=5000... time=1.31608 sec
      result: 0.192439 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      iterations=1... time=0.00485554 sec
      iterations=10... time=0.100733 sec
      iterations=100... time=0.626646 sec
      iterations=200... time=1.29103 sec
      result: 0.274441 Gupdates/sec
  Single-node measurements (using 2 MPI processes with 1 OpenMP threads each):
    CPU frequency:
      iterations=1000000... time=0.00135271 sec
      iterations=10000000... time=0.0173933 sec
      iterations=100000000... time=0.171911 sec
      iterations=600000000... time=1.06653 sec
      iterations=600000000... time=1.06707 sec
      result: -2202.02 GHz
    CPU floating point performance:
      iterations=1000000... time=0.00300632 sec
      iterations=10000000... time=0.0459939 sec
      iterations=100000000... time=0.396547 sec
      iterations=300000000... time=1.21284 sec
      result: 7.91532 Gflop/sec
    CPU integer performance:
      iterations=1000000... time=0.00189746 sec
      iterations=10000000... time=0.0264911 sec
      iterations=100000000... time=0.246447 sec
      iterations=400000000... time=0.981511 sec
      iterations=800000000... time=1.97092 sec
      result: 6.49443 Giop/sec
    Read latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=0.000135251 sec
      iterations=10000... time=0.00133861 sec
      iterations=100000... time=0.0174336 sec
      iterations=1000000... time=0.184246 sec
      iterations=6000000... time=1.08401 sec
      result: 1.80668 nsec
    Read latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=0.000918807 sec
      iterations=10000... time=0.00577674 sec
      iterations=100000... time=0.0842884 sec
      iterations=1000000... time=0.743276 sec
      iterations=2000000... time=1.53702 sec
      result: 7.68509 nsec
    Read latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Read bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=6.5e-07 sec
      iterations=10... time=3.35e-06 sec
      iterations=100... time=3.085e-05 sec
      iterations=1000... time=0.000305202 sec
      iterations=10000... time=0.00306782 sec
      iterations=100000... time=0.0465651 sec
      iterations=1000000... time=0.419603 sec
      iterations=3000000... time=1.21999 sec
      result: 60.4334 GByte/sec
    Read bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=2.885e-05 sec
      iterations=10... time=0.000165351 sec
      iterations=100... time=0.00160106 sec
      iterations=1000... time=0.0219417 sec
      iterations=10000... time=0.210052 sec
      iterations=50000... time=1.05801 sec
      result: 37.1655 GByte/sec
    Read bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write latency of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1000... time=3.3505e-06 sec
      iterations=10000... time=2.71e-05 sec
      iterations=100000... time=0.000267652 sec
      iterations=1000000... time=0.00267337 sec
      iterations=10000000... time=0.0362277 sec
      iterations=100000000... time=0.360571 sec
      iterations=300000000... time=1.05691 sec
      result: 0.440377 nsec
    Write latency of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1000... time=3.16e-05 sec
      iterations=10000... time=0.000149401 sec
      iterations=100000... time=0.00142766 sec
      iterations=1000000... time=0.022266 sec
      iterations=10000000... time=0.182128 sec
      iterations=60000000... time=1.12371 sec
      result: 2.34106 nsec
    Write latency of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Write bandwidth of D1 cache (for 1 PUs) (using 2*24576 bytes):
      iterations=1... time=7.5e-07 sec
      iterations=10... time=2.2e-06 sec
      iterations=100... time=1.595e-05 sec
      iterations=1000... time=0.000153601 sec
      iterations=10000... time=0.00153166 sec
      iterations=100000... time=0.0233935 sec
      iterations=1000000... time=0.194598 sec
      iterations=6000000... time=1.23891 sec
      result: 119.02 GByte/sec
    Write bandwidth of L2 cache (for 1 PUs) (using 2*786432 bytes):
      iterations=1... time=3.06e-05 sec
      iterations=10... time=0.000305002 sec
      iterations=100... time=0.00706315 sec
      iterations=1000... time=0.0415974 sec
      iterations=10000... time=0.357441 sec
      iterations=30000... time=0.991438 sec
      iterations=60000... time=1.69398 sec
      result: 27.8551 GByte/sec
    Write bandwidth of L3 cache (for 2 PUs) (using 2*28114944 bytes):
      [skipped -- too much memory requested]
    Stencil code performance of D1 cache (for 1 PUs) (using 2*9^3 grid points, 2*11664 bytes):
      iterations=1... time=9.6e-06 sec
      iterations=10... time=9.2201e-05 sec
      iterations=100... time=0.000910507 sec
      iterations=1000... time=0.00924967 sec
      iterations=10000... time=0.0915356 sec
      iterations=100000... time=0.91994 sec
      iterations=200000... time=1.83238 sec
      result: 0.0795687 Gupdates/sec
    Stencil code performance of L2 cache (for 1 PUs) (using 2*29^3 grid points, 2*390224 bytes):
      iterations=1... time=0.000119101 sec
      iterations=10... time=0.00115841 sec
      iterations=100... time=0.0113421 sec
      iterations=1000... time=0.113533 sec
      iterations=10000... time=1.13576 sec
      result: 0.214737 Gupdates/sec
    Stencil code performance of L3 cache (for 2 PUs) (using 1*121^3 grid points, 1*28344976 bytes):
      [skipped -- too many MPI processes]
  Single-node measurements:
    MPI latency: 1050 nsec
    MPI bandwidth: 4.40302 GByte/sec
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.1111111e-01  dy=>1.1111111e-01  dz=>1.1111111e-01
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.500, 0.500]  y=>[-0.500, 0.500]  z=>[-0.500, 0.500]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,9]  y=>[0,9]  z=>[0,9]
INFO (PUGH): MPI Evolution on 2 processors
INFO (PUGH): 3-dimensional grid functions
INFO (PUGH):   Size: 10 10 10
INFO (PUGH):   Processor topology: 2 x 1 x 1
INFO (PUGH):   Local load: 600   [6 x 10 x 10]
INFO (PUGH):   Maximum load skew: 0.000000
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Wed Nov 17 03:03:54 UTC 2021
+ echo Done.
Done.
  Elapsed time: 50.5 s
