/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/Carpet
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/Carpet/output-0000-active
+ hostname
fv-az292-792
+ date
Fri Dec  9 14:33:02 UTC 2022
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
++ date +%s
+ export CACTUS_STARTTIME=1670596382
+ CACTUS_STARTTIME=1670596382
+ '[' 2 = 1 ']'
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/Carpet/test/kasner.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.13.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.13.0
Compile date:      Dec 09 2022 (14:16:56)
Run date:          Dec 09 2022 (14:33:02+0000)
Run host:          fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net (pid=106539)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/Carpet
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/Carpet/test/kasner.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->Boundary CartGrid3D CoordBase Slab SymBase Periodic IOUtil Carpet CarpetLib CarpetInterp LoopControl CarpetReduce CarpetSlab SphericalSurface ADMBase AEILocalInterp Fortran GenericFD HDF5 InitBase LocalInterp TGRtensor MoL Time ADMMacros CoordGauge SpaceMask StaticConformal TmunuBase Exact ML_BSSN ML_BSSN_Helper ML_ADMConstraints NaNChecker CarpetIOBasic CarpetIOScalar CarpetIOASCII CarpetIOHDF5<---
Thorn Carpet requests automatic activation of MPI
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn CarpetLib requests automatic activation of CycleClock
Thorn HDF5 requests automatic activation of zlib
Thorn LoopControl requests automatic activation of hwloc
Thorn TGRtensor requests automatic activation of LAPACK
Thorn LAPACK requests automatic activation of BLAS
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn AEILocalInterp...Success -> active implementation AEILocalInterp
Activating thorn BLAS...Success -> active implementation BLAS
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetInterp...Success -> active implementation interp
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetIOHDF5...Success -> active implementation IOHDF5
Activating thorn CarpetIOScalar...Success -> active implementation IOScalar
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CarpetSlab...Success -> active implementation Hyperslab
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Exact...Success -> active implementation exact
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn HDF5...Success -> active implementation HDF5
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LAPACK...Success -> active implementation LAPACK
Activating thorn LocalInterp...Success -> active implementation LocalInterp
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_ADMConstraints...Success -> active implementation ML_ADMConstraints
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn Periodic...Success -> active implementation Periodic
Activating thorn Slab...Success -> active implementation Slab
Activating thorn SpaceMask...Success -> active implementation SpaceMask
Activating thorn SphericalSurface...Success -> active implementation SphericalSurface
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn TGRtensor...Success -> active implementation TGRtensor
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::LC_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      CarpetInterp::CarpetInterpStartup: Startup routine
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      AEILocalInterp::AEILocalInterp_U_Startup: register CCTK_InterpLocalUniform() interpolation operators
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      LocalInterp::LocalInterp_Startup: register LocalInterp's interpolation operators
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      ML_ADMConstraints::ML_ADMConstraints_Startup: [meta] create banner
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOHDF5::CarpetIOHDF5_Startup: Startup routine
      MoL::MoL_Startup: Startup banner
      Slab::Slab_InitMPIDatatypes: Create MPI datatypes for complex variables in C
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOScalar::CarpetIOScalarStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_ADMConstraints::ML_ADMConstraints_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      Slab::Slab_InitTimers: Initialise timers
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_ADMConstraints::ML_ADMConstraints_RegisterSymmetries: [meta] register symmetries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
          Periodic::Periodic_RegisterBC: Register periodic boundary conditions
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Exact::Exact_ParamCheck: [global] do consistency checks on our parameters
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      SphericalSurface::SphericalSurface_ParamCheck: [global] Check that all surface names are unique
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_ADMConstraints_evaluate_bc_group: ML_ADMConstraints_evaluate
            ML_ADMConstraints::ML_ADMConstraints_evaluate_SelectBCs: [level] ML_ADMConstraints_evaluate_SelectBCs
            GROUP ML_ADMConstraints_evaluate_ApplyBCs: Apply BCs for groups set in ML_ADMConstraints_evaluate
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        ML_ADMConstraints::ML_ADMConstraints_CheckBoundaries: [meta] check boundaries treatment
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          Exact::Exact__decode_pars: decode/copy thorn Exact parameters into grid scalars
          Exact::Exact__initialize: Set initial data from exact solution on a trivial slice
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        CarpetIOHDF5::CarpetIOHDF5_Init: [global] Initialisation routine
        CarpetIOScalar::CarpetIOScalarInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
      [CCTK_POSTINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_CloseFiles: [global] Close all filereader input files
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          ML_ADMConstraints::ML_ADMConstraints_SelectBoundConds: [level] select boundary conditions
          GROUP ML_ADMConstraints_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_ADMConstraints_evaluate_group: ML_ADMConstraints_evaluate
            ML_ADMConstraints::ML_ADMConstraints_evaluate: ML_ADMConstraints_evaluate
            GROUP ML_ADMConstraints_evaluate_bc_group: ML_ADMConstraints_evaluate
              ML_ADMConstraints::ML_ADMConstraints_evaluate_SelectBCs: [level] ML_ADMConstraints_evaluate_SelectBCs
              GROUP ML_ADMConstraints_evaluate_ApplyBCs: Apply BCs for groups set in ML_ADMConstraints_evaluate
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          ML_ADMConstraints::ML_ADMConstraints_SelectBoundConds: [level] select boundary conditions
          GROUP ML_ADMConstraints_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_ADMConstraints_evaluate_bc_group: ML_ADMConstraints_evaluate
            ML_ADMConstraints::ML_ADMConstraints_evaluate_SelectBCs: [level] ML_ADMConstraints_evaluate_SelectBCs
            GROUP ML_ADMConstraints_evaluate_ApplyBCs: Apply BCs for groups set in ML_ADMConstraints_evaluate
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        SphericalSurface::SphericalSurface_SetupRes: [global] [loop-local] Set surface resolution automatically
        ML_ADMConstraints::ML_ADMConstraints_CheckBoundaries: [meta] check boundaries treatment
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SphericalSurface::SphericalSurface_Setup: [global] Calculate surface coordinate descriptors
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        SphericalSurface::SphericalSurface_Set: [global] Set surface radii to be used for initial setup in other thorns
        GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
          SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        CarpetIOHDF5::CarpetIOHDF5_InitCheckpointingIntervals: [global] Initialisation of checkpointing intervals after recovery
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          ML_ADMConstraints::ML_ADMConstraints_SelectBoundConds: [level] select boundary conditions
          GROUP ML_ADMConstraints_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
        CarpetIOHDF5::CarpetIOHDF5_InitialDataCheckpoint: [meta] Initial data checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        ML_ADMConstraints::ML_ADMConstraints_SelectBoundConds: [level] select boundary conditions
        GROUP ML_ADMConstraints_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_ADMConstraints_evaluate_bc_group: ML_ADMConstraints_evaluate
          ML_ADMConstraints::ML_ADMConstraints_evaluate_SelectBCs: [level] ML_ADMConstraints_evaluate_SelectBCs
          GROUP ML_ADMConstraints_evaluate_ApplyBCs: Apply BCs for groups set in ML_ADMConstraints_evaluate
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      ADMBase::ADMBase_LapseStatic: Copy the lapse to the current time level
      ADMBase::ADMBase_ShiftStatic: Copy the shift to the current time level
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::LC_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                    Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                ML_ADMConstraints::ML_ADMConstraints_SelectBoundConds: [level] select boundary conditions
                GROUP ML_ADMConstraints_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                    Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                    Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                    Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_ADMConstraints_evaluate_group: ML_ADMConstraints_evaluate
          ML_ADMConstraints::ML_ADMConstraints_evaluate: ML_ADMConstraints_evaluate
          GROUP ML_ADMConstraints_evaluate_bc_group: ML_ADMConstraints_evaluate
            ML_ADMConstraints::ML_ADMConstraints_evaluate_SelectBCs: [level] ML_ADMConstraints_evaluate_SelectBCs
            GROUP ML_ADMConstraints_evaluate_ApplyBCs: Apply BCs for groups set in ML_ADMConstraints_evaluate
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        ML_ADMConstraints::ML_ADMConstraints_SelectBoundConds: [level] select boundary conditions
        GROUP ML_ADMConstraints_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_ADMConstraints_evaluate_bc_group: ML_ADMConstraints_evaluate
          ML_ADMConstraints::ML_ADMConstraints_evaluate_SelectBCs: [level] ML_ADMConstraints_evaluate_SelectBCs
          GROUP ML_ADMConstraints_evaluate_ApplyBCs: Apply BCs for groups set in ML_ADMConstraints_evaluate
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
      SphericalSurface::SphericalSurface_Set: [global] Set surface radii
      GROUP SphericalSurface_HasBeenSet: Set the spherical surfaces before this group, and use it afterwards
        SphericalSurface::SphericalSurface_CheckState: [global] Test the state of the spherical surfaces
    if (checkpoint)
      [CCTK_CHECKPOINT]
      CarpetIOHDF5::CarpetIOHDF5_EvolutionCheckpoint: [meta] Evolution checkpoint routine
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::LC_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      CarpetIOHDF5::CarpetIOHDF5_TerminationCheckpoint: [meta] Termination checkpoint routine
      LoopControl::LC_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        ML_ADMConstraints::ML_ADMConstraints_SelectBoundConds: [level] select boundary conditions
        GROUP ML_ADMConstraints_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_ADMConstraints_evaluate_bc_group: ML_ADMConstraints_evaluate
          ML_ADMConstraints::ML_ADMConstraints_evaluate_SelectBCs: [level] ML_ADMConstraints_evaluate_SelectBCs
          GROUP ML_ADMConstraints_evaluate_ApplyBCs: Apply BCs for groups set in ML_ADMConstraints_evaluate
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Periodic::Periodic_ApplyBC: Apply periodic boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 1.01 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.385518 ns per clock tick (2.59391 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------
ML_ADMConstraints
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 0D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 1D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 2D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
AMR 3D HDF5 I/O provided by CarpetIOHDF5
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR scalar I/O provided by CarpetIOScalar
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az292-792, pid=106539
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[1,1,1],[1,1,1]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [-5,-5,-5] : [5,5,5]   ([10,10,10])
   interior extent: [-5,-5,-5] : [5,5,5]   ([10,10,10])
   exterior extent: [-8,-8,-8] : [8,8,8]   ([16,16,16])
   base_spacing   : [1,1,1]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [-5,-5,-5] : [5,5,5]   ([10,10,10])
   interior extent   : [-5,-5,-5] : [5,5,5]   ([10,10,10])
   exterior extent   : [-8,-8,-8] : [8,8,8]   ([16,16,16])
   spacing           : [1,1,1]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [17,17,17]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 796 grid functions in 56 groups
INFO (Carpet):    There are 105 grid scalars in 43 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 2 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::gxx
   ADMBASE::gxy
   ADMBASE::gxz
   ADMBASE::gyy
   ADMBASE::gyz
   ADMBASE::gzz
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5' registered: AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_0D' registered: 0D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_1D' registered: 1D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_2D' registered: 2D AMR output of grid variables to HDF5 files
INFO (CarpetIOHDF5): I/O Method 'IOHDF5_3D' registered: 3D AMR output of grid variables to HDF5 files
WARNING level 1 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 1
  while executing schedule bin CCTK_WRAGH, routine ML_BSSN_Helper::ML_BSSN_ParamCompat
  in thorn ML_BSSN_Helper, file /home/runner/work/tests/tests/master/configs/sim/build/ML_BSSN_Helper/Parameters.c:95:
  -> Forcing ML_BSSN::evolveB=0 because ML_BSSN::shiftGammaCoeff=0.0
WARNING level 1 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin CCTK_WRAGH, routine ML_BSSN_Helper::ML_BSSN_ParamCompat
  in thorn ML_BSSN_Helper, file /home/runner/work/tests/tests/master/configs/sim/build/ML_BSSN_Helper/Parameters.c:95:
  -> Forcing ML_BSSN::evolveB=0 because ML_BSSN::shiftGammaCoeff=0.0
WARNING level 1 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin CCTK_WRAGH, routine ML_BSSN_Helper::ML_BSSN_ParamCompat
  in thorn ML_BSSN_Helper, file /home/runner/work/tests/tests/master/configs/sim/build/ML_BSSN_Helper/Parameters.c:95:
  -> Forcing ML_BSSN::evolveB=0 because ML_BSSN::shiftGammaCoeff=0.0
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
INFO (SymBase): Symmetry on lower x-face: periodic
INFO (SymBase): Symmetry on upper x-face: periodic
INFO (SymBase): Symmetry on lower y-face: periodic
INFO (SymBase): Symmetry on upper y-face: periodic
INFO (SymBase): Symmetry on lower z-face: periodic
INFO (SymBase): Symmetry on upper z-face: periodic
WARNING level 2 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin SymBase_Wrapper, routine SymBase::SymBase_Statistics
  in thorn SymBase, file /home/runner/work/tests/tests/master/configs/sim/build/SymBase/Statistics.c:102:
  -> The symmetry "periodic" on the lower x-face has not registered a symmetry interpolator
WARNING level 2 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin SymBase_Wrapper, routine SymBase::SymBase_Statistics
  in thorn SymBase, file /home/runner/work/tests/tests/master/configs/sim/build/SymBase/Statistics.c:102:
  -> The symmetry "periodic" on the upper x-face has not registered a symmetry interpolator
WARNING level 2 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin SymBase_Wrapper, routine SymBase::SymBase_Statistics
  in thorn SymBase, file /home/runner/work/tests/tests/master/configs/sim/build/SymBase/Statistics.c:102:
  -> The symmetry "periodic" on the lower y-face has not registered a symmetry interpolator
WARNING level 2 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin SymBase_Wrapper, routine SymBase::SymBase_Statistics
  in thorn SymBase, file /home/runner/work/tests/tests/master/configs/sim/build/SymBase/Statistics.c:102:
  -> The symmetry "periodic" on the upper y-face has not registered a symmetry interpolator
WARNING level 2 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin SymBase_Wrapper, routine SymBase::SymBase_Statistics
  in thorn SymBase, file /home/runner/work/tests/tests/master/configs/sim/build/SymBase/Statistics.c:102:
  -> The symmetry "periodic" on the lower z-face has not registered a symmetry interpolator
WARNING level 2 from host fv-az292-792.tqgtyn10aqxuxoi0mkfbldi5vh.jx.internal.cloudapp.net process 0
  while executing schedule bin SymBase_Wrapper, routine SymBase::SymBase_Statistics
  in thorn SymBase, file /home/runner/work/tests/tests/master/configs/sim/build/SymBase/Statistics.c:102:
  -> The symmetry "periodic" on the upper z-face has not registered a symmetry interpolator
INFO (MoL): The maximum number of evolved variables is 276. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 276. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 276. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 276. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 276. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 276. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 276. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>1.0000000e+00  dy=>1.0000000e+00  dz=>1.0000000e+00
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-8.000, 8.000]  y=>[-8.000, 8.000]  z=>[-8.000, 8.000]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,16]  y=>[0,16]  z=>[0,16]
INFO (Time): Timestep set to 0.1 (courant_static)
INFO (Exact): setting exact data on slice
INFO (Exact): setting exact data on slice
INFO (Exact): setting exact data on slice
----------------------------------------------------------------------------------------------
Iteration      Time | ADMBASE::gxx | ADMBASE::kxx | ADMBASE::alp | *me_per_hour | *STRAINTS::H
                    |        norm2 |        norm2 |        norm2 |              |        norm2
----------------------------------------------------------------------------------------------
        0     1.000 |    1.0000000 |    0.6666667 |    1.0000000 |    0.0000000 | 1.110223e-10
INFO (Carpet): Terminating due to cctk_final_time at t = 1.000000
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00047800 |       0.00026800 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10005800 |       0.09277600 |   0.00009500 |        0.00009500 |        0.00000000 |        0.00009500 |        0.00009500 
LoopControl     | Set up LoopControl                      |          0.00000300 |       0.00000200 |   0.00000183 |        0.00000183 |        0.00000000 |        0.00000183 |        0.00000183 
ML_BSSN_Helper  | Set checkpointing and prolongation group|          0.00003400 |       0.00003100 |   0.00003300 |        0.00003300 |        0.00000000 |        0.00003300 |        0.00003300 
Timers          | Prepare hierarchical timers             |          0.00000600 |       0.00000600 |   0.00000599 |        0.00000599 |        0.00000000 |        0.00000599 |        0.00000599 
Carpet          | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000291 |        0.00000291 |        0.00000000 |        0.00000291 |        0.00000291 
IOUtil          | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000345 |        0.00000345 |        0.00000000 |        0.00000345 |        0.00000345 
CarpetInterp    | Startup routine                         |          0.00000200 |       0.00000200 |   0.00000171 |        0.00000171 |        0.00000000 |        0.00000171 |        0.00000171 
CarpetReduce    | Startup routine                         |          0.00003000 |       0.00002900 |   0.00002993 |        0.00002993 |        0.00000000 |        0.00002993 |        0.00002993 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000200 |       0.00000200 |   0.00000153 |        0.00000153 |        0.00000000 |        0.00000153 |        0.00000153 
CoordBase       | Register a GH extension to store the coo|          0.00000100 |       0.00000100 |   0.00000134 |        0.00000134 |        0.00000000 |        0.00000134 |        0.00000134 
AEILocalInterp  | register CCTK_InterpLocalUniform() inter|          0.00000600 |       0.00000500 |   0.00000527 |        0.00000527 |        0.00000000 |        0.00000527 |        0.00000527 
CarpetIOASCII   | Startup routine                         |          0.00003000 |       0.00002800 |   0.00002975 |        0.00002975 |        0.00000000 |        0.00002975 |        0.00002975 
LocalInterp     | register LocalInterp's interpolation ope|          0.00000200 |       0.00000200 |   0.00000149 |        0.00000149 |        0.00000000 |        0.00000149 |        0.00000149 
CarpetIOBasic   | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000322 |        0.00000322 |        0.00000000 |        0.00000322 |        0.00000322 
ML_ADMConstraint| create banner                           |          0.00000200 |       0.00000100 |   0.00000172 |        0.00000172 |        0.00000000 |        0.00000172 |        0.00000172 
ML_BSSN         | create banner                           |          0.00000100 |       0.00000100 |   0.00000130 |        0.00000130 |        0.00000000 |        0.00000130 |        0.00000130 
ML_BSSN_Helper  | Register slicing                        |          0.00000100 |       0.00000100 |   0.00000140 |        0.00000140 |        0.00000000 |        0.00000140 |        0.00000140 
CarpetIOHDF5    | Startup routine                         |          0.00003300 |       0.00003100 |   0.00003283 |        0.00003283 |        0.00000000 |        0.00003283 |        0.00003283 
MoL             | Startup banner                          |          0.00000100 |       0.00000100 |   0.00000164 |        0.00000164 |        0.00000000 |        0.00000164 |        0.00000164 
Slab            | Create MPI datatypes for complex variabl|          0.00000700 |       0.00000700 |   0.00000716 |        0.00000716 |        0.00000000 |        0.00000716 |        0.00000716 
SymBase         | Register GH Extension for SymBase       |          0.00000200 |       0.00000200 |   0.00000174 |        0.00000174 |        0.00000000 |        0.00000174 |        0.00000174 
CarpetIOScalar  | Startup routine                         |          0.00000400 |       0.00000400 |   0.00000373 |        0.00000373 |        0.00000000 |        0.00000373 |        0.00000373 
Vectors         | Print startup message                   |          0.00001100 |       0.00001100 |   0.00001128 |        0.00001128 |        0.00000000 |        0.00001128 |        0.00001128 
hwloc           | Output hwloc version                    |          0.00001300 |       0.00000800 |   0.00001309 |        0.00001309 |        0.00000000 |        0.00001309 |        0.00001309 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10073600 |       0.09322800 |   0.00029230 |        0.00029230 |        0.00000000 |        0.00029230 |        0.00029230 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00003000 |       0.00003000 |   0.00003024 |        0.00003024 |        0.00000000 |        0.00003024 |        0.00003024 
Boundary        | Register boundary conditions that this t|          0.00001400 |       0.00001400 |   0.00001404 |        0.00001404 |        0.00000000 |        0.00001404 |        0.00001404 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00006500 |       0.00006500 |   0.00006490 |        0.00006490 |        0.00000000 |        0.00006490 |        0.00006490 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001200 |       0.00001100 |   0.00001158 |        0.00001158 |        0.00000000 |        0.00001158 |        0.00001158 
CoordGauge      | Identify the slicing for the next iterat|          0.00001000 |       0.00001000 |   0.00001019 |        0.00001019 |        0.00000000 |        0.00001019 |        0.00001019 
ML_BSSN_Helper  | Handle parameter backward compatibility |          0.00030600 |       0.00017700 |   0.00030645 |        0.00030645 |        0.00000000 |        0.00030645 |        0.00030645 
MoL             | Set up the MoL bookkeeping index arrays |          0.00004200 |       0.00002300 |   0.00004161 |        0.00004161 |        0.00000000 |        0.00004161 |        0.00004161 
MoL             | Set the flag so it is ok to register wit|          0.00001000 |       0.00001000 |   0.00001026 |        0.00001026 |        0.00000000 |        0.00001026 |        0.00001026 
TmunuBase       | Set the stress_energy_state variable    |          0.00007600 |       0.00007600 |   0.00007599 |        0.00007599 |        0.00000000 |        0.00007599 |        0.00007599 
ML_ADMConstraint| Register Variables for MoL              |          0.00003200 |       0.00003200 |   0.00003186 |        0.00003186 |        0.00000000 |        0.00003186 |        0.00003186 
ML_BSSN         | Register Variables for MoL              |          0.00007900 |       0.00007900 |   0.00007887 |        0.00007887 |        0.00000000 |        0.00007887 |        0.00007887 
ML_BSSN_Helper  | Register ADMBase variables as constraine|          0.00003200 |       0.00003200 |   0.00003232 |        0.00003232 |        0.00000000 |        0.00003232 |        0.00003232 
Slab            | Initialise timers                       |          0.00002700 |       0.00002700 |   0.00002742 |        0.00002742 |        0.00000000 |        0.00002742 |        0.00002742 
CartGrid3D      | Register symmetry boundaries            |          0.00003600 |       0.00003700 |   0.00003618 |        0.00003618 |        0.00000000 |        0.00003618 |        0.00003618 
ML_ADMConstraint| register symmetries                     |          0.00003200 |       0.00003200 |   0.00003176 |        0.00003176 |        0.00000000 |        0.00003176 |        0.00003176 
ML_BSSN         | register symmetries                     |          0.00005400 |       0.00005400 |   0.00005373 |        0.00005373 |        0.00000000 |        0.00005373 |        0.00005373 
Periodic        | Register periodic boundary conditions   |          0.00001100 |       0.00001100 |   0.00001178 |        0.00001178 |        0.00000000 |        0.00001178 |        0.00001178 
SymBase         | Print symmetry boundary face description|          0.00062800 |       0.00016700 |   0.00062802 |        0.00062802 |        0.00000000 |        0.00062802 |        0.00062802 
MoL             | Report how many of each type of variable|          0.00019600 |       0.00007500 |   0.00019555 |        0.00019555 |        0.00000000 |        0.00019555 |        0.00019555 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00169200 |       0.00096200 |   0.00169277 |        0.00169277 |        0.00000000 |        0.00169277 |        0.00169277 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001900 |       0.00001900 |   0.00001899 |        0.00001899 |        0.00000000 |        0.00001899 |        0.00001899 
Boundary        | Check dimension of grid variables       |          0.00000900 |       0.00001000 |   0.00000931 |        0.00000931 |        0.00000000 |        0.00000931 |        0.00000931 
Carpet          | Parameter checking routine              |          0.00002100 |       0.00002100 |   0.00002126 |        0.00002126 |        0.00000000 |        0.00002126 |        0.00002126 
CarpetLib       | Test prolongation operators             |          0.00002400 |       0.00002400 |   0.00002363 |        0.00002363 |        0.00000000 |        0.00002363 |        0.00002363 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00001700 |       0.00001700 |   0.00001735 |        0.00001735 |        0.00000000 |        0.00001735 |        0.00001735 
Exact           | do consistency checks on our parameters |          0.00001000 |       0.00000900 |   0.00000973 |        0.00000973 |        0.00000000 |        0.00000973 |        0.00000973 
Fortran         | Test whether Fortran parameters work cor|          0.00001000 |       0.00001000 |   0.00000977 |        0.00000977 |        0.00000000 |        0.00000977 |        0.00000977 
ML_BSSN_Helper  | Check parameters                        |          0.00003000 |       0.00003000 |   0.00003012 |        0.00003012 |        0.00000000 |        0.00003012 |        0.00003012 
MoL             | Basic parameter checking                |          0.00001100 |       0.00001000 |   0.00001049 |        0.00001049 |        0.00000000 |        0.00001049 |        0.00001049 
SphericalSurface| Check that all surface names are unique |          0.00001000 |       0.00000900 |   0.00000957 |        0.00000957 |        0.00000000 |        0.00000957 |        0.00000957 
TmunuBase       | Check that no deprecated parameters are |          0.00000900 |       0.00000900 |   0.00000901 |        0.00000901 |        0.00000000 |        0.00000901 |        0.00000901 
Vectors         | Run correctness tests.                  |          0.00015500 |       0.00011800 |   0.00015460 |        0.00015460 |        0.00000000 |        0.00015460 |        0.00015460 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00032500 |       0.00028600 |   0.00032382 |        0.00032382 |        0.00000000 |        0.00032382 |        0.00032382 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00004100 |       0.00004200 |   0.00004123 |        0.00004123 |        0.00000000 |        0.00004123 |        0.00004123 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00002800 |       0.00002800 |   0.00002847 |        0.00002847 |        0.00000000 |        0.00002847 |        0.00002847 
ADMBase         | Set the dtshift_state variable to 1     |          0.00002800 |       0.00002800 |   0.00002783 |        0.00002783 |        0.00000000 |        0.00002783 |        0.00002783 
ADMMacros       | Initialize the local_spatial_order      |          0.00002900 |       0.00002800 |   0.00002850 |        0.00002850 |        0.00000000 |        0.00002850 |        0.00002850 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00021700 |       0.00010400 |   0.00021694 |        0.00021694 |        0.00000000 |        0.00021694 |        0.00021694 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00007700 |       0.00007600 |   0.00007655 |        0.00007655 |        0.00000000 |        0.00007655 |        0.00007655 
SphericalSurface| Set surface resolution automatically    |          0.00005000 |       0.00005000 |   0.00004978 |        0.00004978 |        0.00000000 |        0.00004978 |        0.00004978 
ML_ADMConstraint| check boundaries treatment              |          0.00005000 |       0.00005100 |   0.00005059 |        0.00005059 |        0.00000000 |        0.00005059 |        0.00005059 
ML_BSSN         | check boundaries treatment              |          0.00003800 |       0.00003700 |   0.00003775 |        0.00003775 |        0.00000000 |        0.00003775 |        0.00003775 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00002300 |       0.00002200 |   0.00002233 |        0.00002233 |        0.00000000 |        0.00002233 |        0.00002233 
SphericalSurface| Calculate surface coordinate descriptors|          0.00001800 |       0.00001700 |   0.00001775 |        0.00001775 |        0.00000000 |        0.00001775 |        0.00001775 
CarpetReduce    | Allocate the weight function            |          0.00008700 |       0.00008600 |   0.00008678 |        0.00008678 |        0.00000000 |        0.00008678 |        0.00008678 
CarpetReduce    | Initialise the weight function          |          0.00009300 |       0.00009200 |   0.00009270 |        0.00009270 |        0.00000000 |        0.00009270 |        0.00009270 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00014900 |       0.00014900 |   0.00014909 |        0.00014909 |        0.00000000 |        0.00014909 |        0.00014909 
CarpetReduce    | Set up the weight function for the restr|          0.00005300 |       0.00005300 |   0.00005281 |        0.00005281 |        0.00000000 |        0.00005281 |        0.00005281 
CarpetReduce    | Set the weight function                 |          0.00007700 |       0.00007600 |   0.00007666 |        0.00007666 |        0.00000000 |        0.00007666 |        0.00007666 
CarpetReduce    | Test the weight function                |          0.00010300 |       0.00010300 |   0.00010321 |        0.00010321 |        0.00000000 |        0.00010321 |        0.00010321 
SphericalSurface| Set surface radii to be used for initial|          0.00002000 |       0.00002100 |   0.00002022 |        0.00002022 |        0.00000000 |        0.00002022 |        0.00002022 
SphericalSurface| Test the state of the spherical surfaces|          0.00001900 |       0.00001800 |   0.00001878 |        0.00001878 |        0.00000000 |        0.00001878 |        0.00001878 
SymBase         | Check whether the driver set up the grid|          0.00003200 |       0.00003200 |   0.00003217 |        0.00003217 |        0.00000000 |        0.00003217 |        0.00003217 
Time            | Initialise Time variables               |          0.00001900 |       0.00001900 |   0.00001868 |        0.00001868 |        0.00000000 |        0.00001868 |        0.00001868 
Time            | Set timestep based on Courant condition |          0.00006400 |       0.00002900 |   0.00006398 |        0.00006398 |        0.00000000 |        0.00006398 |        0.00006398 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.00131500 |       0.00116100 |   0.00131281 |        0.00131281 |        0.00000000 |        0.00131281 |        0.00131281 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00010200 |       0.00010100 |   0.00010153 |        0.00003384 |        0.00000659 |        0.00002924 |        0.00003856 
Exact           | decode/copy thorn Exact parameters into |          0.00015400 |       0.00015400 |   0.00015417 |        0.00005139 |        0.00005414 |        0.00002881 |        0.00009559 
Exact           | Set initial data from exact solution on |          0.01144900 |       0.01134300 |   0.01144830 |        0.00381610 |        0.00088956 |        0.00331598 |        0.00452230 
ADMBase         | Set the lapse to 1 at all points        |          0.00012200 |       0.00012300 |   0.00012234 |        0.00004078 |        0.00000530 |        0.00003825 |        0.00004509 
ADMBase         | Set the shift to 0 at all points        |          0.00012000 |       0.00011900 |   0.00011934 |        0.00003978 |        0.00000229 |        0.00003877 |        0.00004165 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00009300 |       0.00009300 |   0.00009271 |        0.00003090 |        0.00000181 |        0.00003002 |        0.00003237 
ADMBase         | Set the dtshift to 0 at all points      |          0.00010900 |       0.00010700 |   0.00010849 |        0.00003616 |        0.00000094 |        0.00003541 |        0.00003667 
CarpetIOASCII   | Initialisation routine                  |          0.00006300 |       0.00006500 |   0.00006354 |        0.00002118 |        0.00000181 |        0.00002018 |        0.00002262 
CarpetIOBasic   | Initialisation routine                  |          0.00005100 |       0.00005100 |   0.00005139 |        0.00001713 |        0.00000291 |        0.00001584 |        0.00001950 
CarpetIOHDF5    | Initialisation routine                  |          0.00005000 |       0.00005000 |   0.00005031 |        0.00001677 |        0.00000233 |        0.00001568 |        0.00001867 
CarpetIOScalar  | Initialisation routine                  |          0.00004800 |       0.00005000 |   0.00004902 |        0.00001634 |        0.00000299 |        0.00001511 |        0.00001878 
ML_BSSN         | ML_BSSN_InitialADMBase1Everywhere       |          0.00123300 |       0.00123300 |   0.00123264 |        0.00041088 |        0.00009564 |        0.00033279 |        0.00044997 
ML_BSSN         | ML_BSSN_InitialADMBase2BoundaryScalar   |          0.00013800 |       0.00013700 |   0.00013722 |        0.00004574 |        0.00000588 |        0.00004294 |        0.00005051 
MoL             | Initialise the step size control        |          0.00002800 |       0.00002600 |   0.00002688 |        0.00000896 |        0.00000314 |        0.00000761 |        0.00001152 
ML_BSSN         | ML_BSSN_InitialADMBase2Interior         |          0.00106000 |       0.00106100 |   0.00106088 |        0.00035363 |        0.00011950 |        0.00029257 |        0.00045007 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.01482000 |       0.01471300 |   0.01481875 |        0.00493958 |        0.00119481 |        0.00425921 |        0.00585387 
==================================================================================================================================================================================================
CarpetIOHDF5    | Close all filereader input files        |          0.00008100 |       0.00008300 |   0.00008166 |        0.00002722 |        0.00001125 |        0.00002218 |        0.00003639 
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.00035700 |       0.00035700 |   0.00035709 |        0.00011903 |        0.00000254 |        0.00011748 |        0.00012099 
ADMBase         | Select ADMBase boundary conditions - may|          0.00087700 |       0.00077700 |   0.00087809 |        0.00029270 |        0.00017488 |        0.00021648 |        0.00043537 
Boundary        | Apply all requested local physical bound|          0.00084300 |       0.00068900 |   0.00084512 |        0.00004024 |        0.00002120 |        0.00003212 |        0.00005074 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00056500 |       0.00045700 |   0.00056292 |        0.00002681 |        0.00000628 |        0.00002545 |        0.00003122 
Periodic        | Apply periodic boundary conditions      |          0.03573700 |       0.02698700 |   0.03573764 |        0.00170179 |        0.00704184 |        0.00002486 |        0.00442686 
Boundary        | Unselect all grid variables for boundary|          0.00016900 |       0.00013200 |   0.00016820 |        0.00000801 |        0.00000754 |        0.00000686 |        0.00001503 
ML_BSSN         | select boundary conditions              |          0.00111200 |       0.00082600 |   0.00111125 |        0.00037042 |        0.00020712 |        0.00028539 |        0.00053953 
ML_ADMConstraint| select boundary conditions              |          0.00003100 |       0.00002400 |   0.00003153 |        0.00001051 |        0.00000621 |        0.00000792 |        0.00001558 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.00053000 |       0.00052900 |   0.00052868 |        0.00017623 |        0.00001590 |        0.00016877 |        0.00018916 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.00032900 |       0.00032900 |   0.00032967 |        0.00010989 |        0.00001035 |        0.00010555 |        0.00011834 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.00069400 |       0.00069500 |   0.00069349 |        0.00023116 |        0.00000979 |        0.00022621 |        0.00023907 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00007600 |       0.00007500 |   0.00007594 |        0.00002531 |        0.00000846 |        0.00002171 |        0.00003222 
ML_ADMConstraint| ML_ADMConstraints_evaluate              |          0.00148500 |       0.00099900 |   0.00148635 |        0.00049545 |        0.00002414 |        0.00048479 |        0.00051514 
ML_ADMConstraint| ML_ADMConstraints_evaluate_SelectBCs    |          0.00030800 |       0.00028400 |   0.00030761 |        0.00010254 |        0.00001133 |        0.00009365 |        0.00010921 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00019500 |       0.00013000 |   0.00019343 |        0.00006448 |        0.00000541 |        0.00006069 |        0.00006834 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00022500 |       0.00015300 |   0.00022469 |        0.00007490 |        0.00000906 |        0.00006985 |        0.00008210 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.00115100 |       0.00077100 |   0.00115114 |        0.00038371 |        0.00000519 |        0.00037978 |        0.00038705 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00038500 |       0.00026000 |   0.00038493 |        0.00012831 |        0.00000637 |        0.00012555 |        0.00013351 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.04515000 |       0.03455700 |   0.04514946 |        0.00438871 |        0.00758486 |        0.00247529 |        0.00754586 
==================================================================================================================================================================================================
CarpetIOHDF5    | Initial data checkpoint routine         |          0.00004700 |       0.00004400 |   0.00004719 |        0.00004719 |        0.00000000 |        0.00004719 |        0.00004719 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_CPINITIAL           |          0.00004700 |       0.00004400 |   0.00004719 |        0.00004719 |        0.00000000 |        0.00004719 |        0.00004719 
==================================================================================================================================================================================================
NaNChecker      | Prepare data structures to check for NaN|          0.00002200 |       0.00000000 |   0.00002243 |        0.00002243 |        0.00000000 |        0.00002243 |        0.00002243 
NaNChecker      | Check for NaNs                          |          0.00123400 |       0.00041100 |   0.00123384 |        0.00123384 |        0.00000000 |        0.00123384 |        0.00123384 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00002000 |       0.00001900 |   0.00002030 |        0.00002030 |        0.00000000 |        0.00002030 |        0.00002030 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00003100 |       0.00002900 |   0.00003064 |        0.00003064 |        0.00000000 |        0.00003064 |        0.00003064 
SphericalSurface| Set surface radii                       |          0.00002000 |       0.00001900 |   0.00002048 |        0.00002048 |        0.00000000 |        0.00002048 |        0.00002048 
SphericalSurface| Test the state of the spherical surfaces|          0.00002000 |       0.00001900 |   0.00001948 |        0.00001948 |        0.00000000 |        0.00001948 |        0.00001948 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00134700 |       0.00049700 |   0.00134717 |        0.00134717 |        0.00000000 |        0.00134717 |        0.00134717 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00002500 |       0.00002400 |   0.00002514 |        0.00002514 |        0.00000000 |        0.00002514 |        0.00002514 
CarpetLib       | Print memory statistics if desired      |          0.00001900 |       0.00001700 |   0.00001857 |        0.00001857 |        0.00000000 |        0.00001857 |        0.00001857 
LoopControl     | Output LoopControl statistics           |          0.00003700 |       0.00003500 |   0.00003763 |        0.00003763 |        0.00000000 |        0.00003763 |        0.00003763 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.00008100 |       0.00007600 |   0.00008133 |        0.00008133 |        0.00000000 |        0.00008133 |        0.00008133 
==================================================================================================================================================================================================
CarpetIOHDF5    | Termination checkpoint routine          |          0.00007400 |       0.00001900 |   0.00007395 |        0.00007395 |        0.00000000 |        0.00007395 |        0.00007395 
LoopControl     | Output LoopControl statistics           |          0.00003900 |       0.00000000 |   0.00003844 |        0.00003844 |        0.00000000 |        0.00003844 |        0.00003844 
MoL             | Free the MoL bookkeeping index arrays   |          0.00004500 |       0.00000000 |   0.00004572 |        0.00004572 |        0.00000000 |        0.00004572 |        0.00004572 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00015800 |       0.00001900 |   0.00015812 |        0.00015812 |        0.00000000 |        0.00015812 |        0.00015812 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00012100 |       0.00000000 |   0.00012054 |        0.00012054 |        0.00000000 |        0.00012054 |        0.00012054 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00012100 |       0.00000000 |   0.00012054 |        0.00012054 |        0.00000000 |        0.00012054 |        0.00012054 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          0.07659200 |       0.05935500 |   0.07658974 |        0.07658974 |        0.00000000 |        0.07658974 |        0.07658974 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Fri Dec  9 14:33:03 UTC 2022
+ echo Done.
Done.
  Elapsed time: 1.0 s
