/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Preparing:
+ set -e
+ cd output-0000-active
+ echo Checking:
Checking:
+ pwd
/home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl/output-0000-active
+ hostname
fv-az213-71
+ date
Tue Jun  1 17:34:44 UTC 2021
+ echo Environment:
Environment:
+ export CACTUS_NUM_PROCS=2
+ export CACTUS_NUM_THREADS=1
+ export GMON_OUT_PREFIX=gmon.out
+ export OMP_NUM_THREADS=1
+ env
+ sort
+ echo Starting:
Starting:
+ date +%s
+ export CACTUS_STARTTIME=1622568884
+ [ 2 = 1 ]
+ mpirun -np 2 /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim -L 3 /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
INFO (Cactus): Increased logging level from 0 to 3
--------------------------------------------------------------------------------

       10                                  
  1   0101       ************************  
  01  1010 10      The Cactus Code V4.9.0    
 1010 1101 011      www.cactuscode.org     
  1001 100101    ************************  
    00010101                               
     100011     (c) Copyright The Authors  
      0100      GNU Licensed. No Warranty  
      0101                                 
--------------------------------------------------------------------------------

Cactus version:    4.9.0
Compile date:      Jun 01 2021 (17:06:09)
Run date:          Jun 01 2021 (17:34:45+0000)
Run host:          fv-az213-71.wq3jjldsz12ede1gumgyek31ig.jx.internal.cloudapp.net (pid=107403)
Working directory: /home/runner/simulations/TestJob01_temp_2/output-0000/TEST/sim/LoopControl
Executable:        /home/runner/simulations/TestJob01_temp_2/SIMFACTORY/exe/cactus_sim
Parameter file:    /home/runner/simulations/TestJob01_temp_2/output-0000/arrangements/Carpet/LoopControl/test/test-minkowski-carpet-1lev.par
--------------------------------------------------------------------------------

Activating thorn Cactus...Success -> active implementation Cactus
Activation requested for 
--->CycleClock Fortran hwloc MPI IOUtil InitBase LoopControl Carpet CarpetLib CarpetReduce Boundary CartGrid3D CoordBase SymBase MoL NaNChecker Time ADMBase ADMMacros CoordGauge StaticConformal GenericFD ML_BSSN ML_BSSN_Helper TmunuBase CarpetIOBasic CarpetIOASCII<---
Thorn Carpet requests automatic activation of Timers
Thorn CarpetLib requests automatic activation of Vectors
Thorn hwloc requests automatic activation of zlib
Activating thorn ADMBase...Success -> active implementation ADMBase
Activating thorn ADMMacros...Success -> active implementation ADMMacros
Activating thorn Boundary...Success -> active implementation boundary
Activating thorn Carpet...Success -> active implementation Driver
Activating thorn CarpetIOASCII...Success -> active implementation IOASCII
Activating thorn CarpetIOBasic...Success -> active implementation IOBasic
Activating thorn CarpetLib...Success -> active implementation CarpetLib
Activating thorn CarpetReduce...Success -> active implementation reduce
Activating thorn CartGrid3D...Success -> active implementation grid
Activating thorn CoordBase...Success -> active implementation CoordBase
Activating thorn CoordGauge...Success -> active implementation CoordGauge
Activating thorn CycleClock...Success -> active implementation CycleClock
Activating thorn Fortran...Success -> active implementation Fortran
Activating thorn GenericFD...Success -> active implementation GenericFD
Activating thorn hwloc...Success -> active implementation hwloc
Activating thorn InitBase...Success -> active implementation InitBase
Activating thorn IOUtil...Success -> active implementation IO
Activating thorn LoopControl...Success -> active implementation LoopControl
Activating thorn ML_BSSN...Success -> active implementation ML_BSSN
Activating thorn ML_BSSN_Helper...Success -> active implementation ML_BSSN_Helper
Activating thorn MoL...Success -> active implementation MethodOfLines
Activating thorn MPI...Success -> active implementation MPI
Activating thorn NaNChecker...Success -> active implementation NaNChecker
Activating thorn StaticConformal...Success -> active implementation StaticConformal
Activating thorn SymBase...Success -> active implementation SymBase
Activating thorn Time...Success -> active implementation time
Activating thorn Timers...Success -> active implementation Timers
Activating thorn TmunuBase...Success -> active implementation TmunuBase
Activating thorn Vectors...Success -> active implementation Vectors
Activating thorn zlib...Success -> active implementation zlib
--------------------------------------------------------------------------------
  if (recover initial data)
    Recover parameters
  endif

  Startup routines
    [CCTK_STARTUP]
      Carpet::MultiModel_Startup: Multi-model Startup routine
      CycleClock::CycleClock_Setup: Set up CycleClock
      LoopControl::lc_setup: Set up LoopControl
      ML_BSSN_Helper::ML_BSSN_SetGroupTags: [meta] Set checkpointing and prolongation group tags
      CarpetReduce::CarpetReduceStartup: Startup routine
      CartGrid3D::SymmetryStartup: Register GH Extension for GridSymmetry
      CoordBase::CoordBase_Startup: Register a GH extension to store the coordinate system handles
      Timers::Timer_Startup: Prepare hierarchical timers
      Carpet::Driver_Startup: Startup routine
      IOUtil::IOUtil_Startup: Startup routine
      ML_BSSN::ML_BSSN_Startup: [meta] create banner
      ML_BSSN_Helper::ML_BSSN_RegisterSlicing: [meta] Register slicing
      CarpetIOASCII::CarpetIOASCIIStartup: [global] Startup routine
      MoL::MoL_Startup: Startup banner
      SymBase::SymBase_Startup: Register GH Extension for SymBase
      CarpetIOBasic::CarpetIOBasicStartup: [global] Startup routine
      Vectors::Vectors_Startup: Print startup message
      GROUP hwloc_startup: hwloc startup group
        hwloc::hwloc_version: Output hwloc version

  Startup routines which need an existing grid hierarchy
    [CCTK_WRAGH]
      ADMBase::Einstein_InitSymBound: [global] Set up GF symmetries
      Boundary::Boundary_RegisterBCs: [global] Register boundary conditions that this thorn provides
      CartGrid3D::RegisterCartGrid3DCoords: [meta] Register coordinates for the Cartesian grid
      CoordGauge::Einstein_ActivateSlicing: Initialize slicing, setup priorities for mixed slicings
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      ML_BSSN_Helper::ML_BSSN_ParamCompat: [meta] Handle parameter backward compatibility
      MoL::MoL_SetupIndexArrays: Set up the MoL bookkeeping index arrays
      MoL::MoL_SetScheduleStatus: [global] Set the flag so it is ok to register with MoL
      TmunuBase::TmunuBase_SetStressEnergyState: [global] Set the stress_energy_state variable
      GROUP MoL_Register: The group where physics thorns register variables with MoL
        ML_BSSN::ML_BSSN_RegisterVars: [meta] Register Variables for MoL
        ML_BSSN_Helper::ML_BSSN_RegisterConstrained: [meta] Register ADMBase variables as constrained
      GROUP SymBase_Wrapper: Wrapper group for SymBase
        GROUP SymmetryRegister: Register your symmetries here
          CartGrid3D::CartGrid3D_RegisterSymmetryBoundaries: [meta] Register symmetry boundaries
          ML_BSSN::ML_BSSN_RegisterSymmetries: [meta] register symmetries
        SymBase::SymBase_Statistics: Print symmetry boundary face descriptions
      MoL::MoL_ReportNumberVariables: [meta] Report how many of each type of variable there are
  Parameter checking routines
    [CCTK_PARAMCHECK]
      ADMBase::ADMBase_ParamCheck: [global] Check consistency of parameters
      Boundary::Boundary_Check: Check dimension of grid variables
      Carpet::CarpetParamCheck: Parameter checking routine
      CarpetLib::CarpetLib_test_prolongate_3d_rf2: [global] Test prolongation operators
      CartGrid3D::ParamCheck_CartGrid3D: Check coordinates for CartGrid3D
      Fortran::CheckFortranParameters: Test whether Fortran parameters work correctly
      ML_BSSN_Helper::ML_BSSN_ParamCheck: [meta] Check parameters
      MoL::MoL_ParamCheck: Basic parameter checking
      TmunuBase::TmunuBase_ParamCheck: [global] Check that no deprecated parameters are used.
      Vectors::Vectors_Test: Run correctness tests.

  Initialisation
    if (NOT (recover initial data AND recovery_mode is 'strict'))
      [CCTK_PREREGRIDINITIAL]
      Set up grid hierarchy
      [CCTK_POSTREGRIDINITIAL]
        CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_INITIAL]
        StaticConformal::StaticConformal_InitialiseState: Set the conformal_state variable to 0
        GROUP ADMBase_InitialData: Schedule group for calculating ADM initial data
          ADMBase::ADMBase_CartesianMinkowski: Set the metric and extrinsic curvature to cartesian minkowski values
        GROUP ADMBase_InitialGauge: Schedule group for the ADM initial gauge condition
          ADMBase::ADMBase_LapseOne: Set the lapse to 1 at all points
          ADMBase::ADMBase_ShiftZero: Set the shift to 0 at all points
          ADMBase::ADMBase_DtLapseZero: Set the dtlapse to 0 at all points
          ADMBase::ADMBase_DtShiftZero: Set the dtshift to 0 at all points
        CarpetIOASCII::CarpetIOASCIIInit: [global] Initialisation routine
        CarpetIOBasic::CarpetIOBasicInit: [global] Initialisation routine
        GROUP ADMBase_PostInitial: Schedule group for modifying the ADM initial data, such as e.g. adding noise
        ML_BSSN::ML_BSSN_InitialADMBase1Everywhere: ML_BSSN_InitialADMBase1Everywhere
        ML_BSSN::ML_BSSN_InitialADMBase2BoundaryScalar: ML_BSSN_InitialADMBase2BoundaryScalar
        MoL::MoL_StartLoop: [level] Initialise the step size control
        ML_BSSN::ML_BSSN_InitialADMBase2Interior: ML_BSSN_InitialADMBase2Interior
      [CCTK_POSTINITIAL]
        GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
          ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
        GROUP MoL_PostStep: Ensure that everything is correct after the initial data have been set up
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
          GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
            GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
              ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
              GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
            GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
              ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
              GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
                GROUP BoundaryConditions: Execute all boundary conditions
                  Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                  CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      Initialise finer grids recursively
      Restrict from finer grids
      [CCTK_POSTRESTRICTINITIAL]
        GROUP MoL_PostStep: Ensure that everything is correct after restriction
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
      [CCTK_POSTPOSTINITIAL]
      [CCTK_POSTSTEP]
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (recover initial data)
      [CCTK_BASEGRID]
        ADMBase::ADMBase_SetShiftStateOn: Set the shift_state variable to 1
        ADMBase::ADMBase_SetDtLapseStateOn: Set the dtlapse_state variable to 1
        ADMBase::ADMBase_SetDtShiftStateOn: Set the dtshift_state variable to 1
        ADMMacros::ADMMacros_SetLocalSpatialOrder: Initialize the local_spatial_order
        CartGrid3D::SpatialSpacings: Set up ranges for spatial 3D Cartesian coordinates (on all grids)
        CartGrid3D::SpatialCoordinates: Set up spatial 3D Cartesian coordinates on the GH
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        ML_BSSN::ML_BSSN_CheckBoundaries: [meta] check boundaries treatment
        NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
        SymBase::SymBase_Check: Check whether the driver set up the grid consistently
        Time::Time_Initialise: [global] Initialise Time variables
        Time::TemporalSpacings: [singlemap] Set timestep based on Courant condition (courant_static)
      [CCTK_RECOVER_VARIABLES]
      [CCTK_POST_RECOVER_VARIABLES]
        GROUP MaskBase_SetupMask: Set up the weight function
          GROUP MaskBase_SetupMaskAll: Set up the weight function
            CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
            CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
            GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
              CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
              CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
            GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
            GROUP SetupMask: Set up the real weight function (schedule other routines in here)
            CarpetReduce::MaskBase_TestMask: [global] Test the weight function
        GROUP MoL_PostStep: Ensure that everything is correct after recovery
          ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
          GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
          GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
          ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
          ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
          ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
          GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
          GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
          NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
          NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    endif
    if (checkpoint initial data)
      [CCTK_CPINITIAL]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
        CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
        CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
        LoopControl::lc_statistics_analysis: [meta] Output LoopControl statistics
        GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
          ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
          ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
  endif
  Output grid variables

  do loop over timesteps
    [CCTK_PREREGRID]
    Change grid hierarchy
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Rotate timelevels
    iteration = iteration+1
    t = t+dt
    [CCTK_PRESTEP]
      CoordGauge::Einstein_SetNextSlicing: Identify the slicing for the next iteration
      LoopControl::lc_steer: [meta] Update LoopControl algorithm preferences
      NaNChecker::NaNChecker_ResetCounter: [global] Reset the NaNChecker::NaNsFound counter
    [CCTK_EVOL]
      MoL::MoL_StartLoop: [level] Initialise the step size control
      while (MoL::MoL_Stepsize_Bad)
        GROUP MoL_Evolution: A single Cactus evolution step using MoL
          GROUP MoL_StartStep: MoL internal setup for the evolution step
            MoL::MoL_SetCounter: [level] Set the counter for the ODE method to loop over
            MoL::MoL_SetTime: [level] Ensure the correct time and timestep are used
            MoL::MoL_AllocateScratchSpace: [level] Allocate storage for scratch levels
          GROUP MoL_PreStep: Physics thorns can schedule preloop setup routines in here
          MoL::MoL_AllocateScratch: Allocate sufficient space for array scratch variables
          MoL::MoL_InitialCopy: Ensure the data is in the correct timelevel
          while (MoL::MoL_Intermediate_Step)
            GROUP MoL_Step: The loop over the intermediate steps for the ODE integrator
              MoL::MoL_InitRHS: Initialise the RHS functions
              GROUP MoL_CalcRHS: Physics thorns schedule the calculation of the discrete spatial operator in here
                ML_BSSN::ML_BSSN_EvolutionBoundaryScalar: ML_BSSN_EvolutionBoundaryScalar
                GROUP ML_BSSN_EvolutionInteriorSplitBy: 
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy1: ML_BSSN_EvolutionInteriorSplitBy1
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy2: ML_BSSN_EvolutionInteriorSplitBy2
                  ML_BSSN::ML_BSSN_EvolutionInteriorSplitBy3: ML_BSSN_EvolutionInteriorSplitBy3
              GROUP MoL_PostRHS: Modify RHS functions
              GROUP MoL_RHSBoundaries: Any 'final' modifications to the RHS functions (boundaries etc.)
              MoL::MoL_Add: Updates calculated with the efficient Runge-Kutta 4 method
              MoL::MoL_DecrementCounter: [level] Alter the counter number
              MoL::MoL_ResetTime: [level] If necessary, change the time
              GROUP MoL_PostStepModify: The group for physics thorns to schedule enforcing constraints
                ML_BSSN::ML_BSSN_EnforceEverywhere: ML_BSSN_EnforceEverywhere
              GROUP MoL_PostStep: The group for physics thorns to schedule boundary calls etc.
                ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
                GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
                GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
                ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
                ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
                ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
                GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
                  GROUP BoundaryConditions: Execute all boundary conditions
                    Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                    CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
                  Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
                GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
              MoL::MoL_ResetDeltaTime: [level] If necessary, change the timestep
          end while
          MoL::MoL_FinishLoop: [level] Control the step size
          MoL::MoL_RestoreSandR: Restoring the Save and Restore variables to the original state
          MoL::MoL_FreeScratchSpace: [level] Free storage for scratch levels
      end while
      GROUP MoL_PseudoEvolution: Calculate pseudo-evolved quantities
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
        GROUP ML_BSSN_ConstraintsEverywhere_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere: ML_BSSN_ConstraintsEverywhere
          GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
            ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
            GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior: ML_BSSN_ConstraintsInterior
          GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
            ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
            GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
              GROUP BoundaryConditions: Execute all boundary conditions
                Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
                CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
              Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    Evolve finer grids recursively
    Restrict from finer grids
    [CCTK_POSTRESTRICT]
      GROUP MoL_PostStep: Ensure that everything is correct after restriction
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
    [CCTK_POSTSTEP]
      GROUP zzz_NaNChecker_NaNCheck: Check for NaNs and count them in NaNChecker::NaNsFound
        NaNChecker::NaNChecker_NaNCheck_Prepare: [level] Prepare data structures to check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Check: [local] Check for NaNs
        NaNChecker::NaNChecker_NaNCheck_Finish: [level] Count NaNs in NaNChecker::NaNsFound
      NaNChecker::NaNChecker_TakeAction: [global] [loop-level] Output NaNChecker::NaNmask and take action according to NaNChecker::action_if_found
    if (checkpoint)
      [CCTK_CHECKPOINT]
    endif
    if (analysis)
      [CCTK_ANALYSIS]
      CarpetLib::CarpetLib_printtimestats: [global] Print timing statistics if desired
      CarpetLib::CarpetLib_printmemstats: [global] Print memory statistics if desired
      LoopControl::lc_statistics_analysis: [meta] Output LoopControl statistics
      GROUP ML_BSSN_EvolutionAnalysis: Calculate RHS at analysis
        ML_BSSN::ML_BSSN_EvolutionAnalysisInit: ML_BSSN_EvolutionAnalysisInit
        ML_BSSN::ML_BSSN_EvolutionAnalysisInterior: ML_BSSN_EvolutionAnalysisInterior
    endif
    Output grid variables
    enddo

  Termination routines
    [CCTK_TERMINATE]
      LoopControl::lc_statistics_terminate: [meta] Output LoopControl statistics
      MoL::MoL_FreeIndexArrays: Free the MoL bookkeeping index arrays

  Shutdown routines
    [CCTK_SHUTDOWN]
      Timers::Timer_Shutdown: Prepare hierarchical timers

  Routines run after changing the grid hierarchy:
    [CCTK_POSTREGRID]
      CartGrid3D::SpatialCoordinates: Set Coordinates after regridding
      GROUP MaskBase_SetupMask: Set up the weight function
        GROUP MaskBase_SetupMaskAll: Set up the weight function
          CarpetReduce::MaskBase_AllocateMask: [global] Allocate the weight function
          CarpetReduce::MaskBase_InitMask: [global] [loop-local] Initialise the weight function
          GROUP SetupIMaskInternal: Set up the integer weight function (schedule other routines in here)
            CarpetReduce::CoordBase_SetupMask: [global] [loop-local] Set up the outer boundaries of the weight function
            CarpetReduce::CarpetMaskSetup: [global] [loop-singlemap] Set up the weight function for the restriction regions
          GROUP SetupIMask: Set up the integer weight function (schedule other routines in here)
          CarpetReduce::MaskBase_SetMask: [global] [loop-local] Set the weight function
          GROUP SetupMask: Set up the real weight function (schedule other routines in here)
          CarpetReduce::MaskBase_TestMask: [global] Test the weight function
      GROUP MoL_PostStep: Ensure that everything is correct after regridding
        ADMBase::ADMBase_Boundaries: [level] Select ADMBase boundary conditions - may be required for mesh refinement
        GROUP ADMBase_ApplyBCs: Apply the boundary conditions of ADMBase
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_SelectBoundConds: [level] select boundary conditions
        GROUP ML_BSSN_ApplyBCs: Apply boundary conditions controlled by thorn Boundary
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        ML_BSSN::ML_BSSN_ADMBaseInterior: ML_BSSN_ADMBaseInterior
        ML_BSSN::ML_BSSN_ADMBaseBoundaryScalar: ML_BSSN_ADMBaseBoundaryScalar
        ML_BSSN::ML_BSSN_ADMBaseEverywhere: ML_BSSN_ADMBaseEverywhere
        ML_BSSN_Helper::ML_BSSN_ADMBase_SelectBCs: [level] Select boundary conditions for ADMBase variables
        GROUP ML_BSSN_ADMBase_ApplyBCs: Apply boundary conditions to ADMBase variables
          GROUP BoundaryConditions: Execute all boundary conditions
            Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
            CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
          Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ADMBase_SetADMVars: Set the ADM variables before this group, and use them afterwards
      GROUP MoL_PseudoEvolutionBoundaries: Apply boundary conditions to pseudo-evolved quantities
        GROUP ML_BSSN_ConstraintsEverywhere_bc_group: ML_BSSN_ConstraintsEverywhere
          ML_BSSN::ML_BSSN_ConstraintsEverywhere_SelectBCs: [level] ML_BSSN_ConstraintsEverywhere_SelectBCs
          GROUP ML_BSSN_ConstraintsEverywhere_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsEverywhere
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
        GROUP ML_BSSN_ConstraintsInterior_bc_group: ML_BSSN_ConstraintsInterior
          ML_BSSN::ML_BSSN_ConstraintsInterior_SelectBCs: [level] ML_BSSN_ConstraintsInterior_SelectBCs
          GROUP ML_BSSN_ConstraintsInterior_ApplyBCs: Apply BCs for groups set in ML_BSSN_ConstraintsInterior
            GROUP BoundaryConditions: Execute all boundary conditions
              Boundary::Boundary_ApplyPhysicalBCs: Apply all requested local physical boundary conditions
              CartGrid3D::CartGrid3D_ApplyBC: Apply symmetry boundary conditions
            Boundary::Boundary_ClearSelection: [level] Unselect all grid variables for boundary conditions
--------------------------------------------------------------------------------
INFO (Carpet): Multi-Model listing:
   model 0: "world"
INFO (Carpet): Multi-Model process distribution:
   processes 0-1: model 0 "world"
INFO (Carpet): Multi-Model: This is process 0, model 0 "world"
INFO (CarpetLib): Process startup time was 1.59 seconds
Current core file size limit: hard=[unlimited], soft=0 MB
Current addres space size limit: hard=[unlimited], soft=[unlimited]
Current data segment size limit: hard=[unlimited], soft=[unlimited]
Current resident set size limit: hard=[unlimited], soft=[unlimited]
INFO (CycleClock): Measuring CycleClock tick via OpenMP...
INFO (CycleClock): Calibrated CycleClock: 0.417149 ns per clock tick (2.39722 GHz)
INFO (Vectors): Using vector size 2 for architecture SSE2 (64-bit precision)
INFO (hwloc): library version 2.1.0, API version 0x20100
--------------------------------------------------------------------------------
AMR driver provided by Carpet
--------------------------------------------------------------------------------
ML_BSSN
--------------------------------------------------------------------------------
AMR 0D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 1D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 2D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
AMR 3D ASCII I/O provided by CarpetIOASCII
--------------------------------------------------------------------------------
MoL: Generalized time integration.
--------------------------------------------------------------------------------
AMR info I/O provided by CarpetIOBasic
--------------------------------------------------------------------------------

INFO (Carpet): MPI is enabled
INFO (Carpet): Carpet is running on 2 processes
INFO (Carpet): This is process 0
INFO (Carpet): OpenMP is enabled
INFO (Carpet): This process contains 1 threads, this is thread 0
INFO (Carpet): There are 2 threads in total
INFO (Carpet): There are 1 threads per process
INFO (Carpet): This process runs on host fv-az213-71, pid=107403
INFO (Carpet): This process runs on 1 core: 0
INFO (Carpet): Thread 0 runs on 1 core: 0
INFO (Carpet): This simulation is running in 3 dimensions
INFO (Carpet): Boundary specification for map 0:
   nboundaryzones: [[3,3,3],[3,3,3]]
   is_internal   : [[0,0,0],[0,0,0]]
   is_staggered  : [[0,0,0],[0,0,0]]
   shiftout      : [[0,0,0],[0,0,0]]
INFO (Carpet): CoordBase domain specification for map 0:
   physical extent: [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent: [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent: [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   base_spacing   : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Adapted domain specification for map 0:
   convergence factor: 2
   convergence level : 0
   physical extent   : [0,0,0] : [1,1,1]   ([1,1,1])
   interior extent   : [0.0333333,0.0333333,0.0333333] : [0.966667,0.966667,0.966667]   ([0.933333,0.933333,0.933333])
   exterior extent   : [-0.0666667,-0.0666667,-0.0666667] : [1.06667,1.06667,1.06667]   ([1.13333,1.13333,1.13333])
   spacing           : [0.0333333,0.0333333,0.0333333]
INFO (Carpet): Base grid specification for map 0:
   number of grid points             : [35,35,35]
   number of coarse grid ghost points: [[3,3,3],[3,3,3]]
INFO (Carpet): Buffer zone counts (excluding ghosts):
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Overlap zone counts:
   [0]: [[0,0,0],[0,0,0]]
INFO (Carpet): Group and variable statistics:
INFO (Carpet):    There are 770 grid functions in 49 groups
INFO (Carpet):    There are 71 grid scalars in 23 groups
INFO (Carpet):    There are 11 1-dimensional grid arrays in 4 groups
INFO (Carpet):    There are 1 2-dimensional grid arrays in 1 groups
INFO (Carpet):    There are 0 3-dimensional grid arrays in 0 groups
INFO (Carpet):    (The number of variables counts all time levels)
INFO (CarpetIOASCII): I/O Method 'IOASCII_0D' registered: 0D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 0D AMR output requested for:
   CARPET::physical_time_per_hour
   CARPET::current_physical_time_per_hour
   CARPET::time_total
   CARPET::time_evolution
   CARPET::time_computing
   CARPET::time_communicating
   CARPET::time_io
   CARPET::evolution_steps_count
   CARPET::local_grid_points_per_second
   CARPET::total_grid_points_per_second
   CARPET::local_grid_point_updates_count
   CARPET::total_grid_point_updates_count
   CARPET::local_interior_points_per_second
   CARPET::total_interior_points_per_second
   CARPET::local_interior_point_updates_count
   CARPET::total_interior_point_updates_count
   CARPET::io_per_second
   CARPET::io_bytes_per_second
   CARPET::io_bytes_ascii_per_second
   CARPET::io_bytes_binary_per_second
   CARPET::io_count
   CARPET::io_bytes_count
   CARPET::io_bytes_ascii_count
   CARPET::io_bytes_binary_count
   CARPET::comm_per_second
   CARPET::comm_bytes_per_second
   CARPET::comm_count
   CARPET::comm_bytes_count
   CARPET::time_levels
   CARPET::current_walltime
   CARPET::syncs_count
INFO (CarpetIOASCII): I/O Method 'IOASCII_1D' registered: 1D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): Periodic 1D AMR output requested for:
   ADMBASE::alp
INFO (CarpetIOASCII): I/O Method 'IOASCII_2D' registered: 2D AMR output of grid variables to ASCII files
INFO (CarpetIOASCII): I/O Method 'IOASCII_3D' registered: 3D AMR output of grid variables to ASCII files
INFO (MoL): Using Runge-Kutta 4 as the time integrator.
WARNING[L1,P1] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (MoL): The maximum number of evolved variables is 224. 25 are registered.
INFO (MoL): The maximum number of slow evolved variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained variables is 224. 20 are registered.
INFO (MoL): The maximum number of SandR variables is 224. 0 are registered.
INFO (MoL): The maximum number of evolved array variables is 224. 0 are registered.
INFO (MoL): The maximum number of constrained array variables is 224. 0 are registered.
INFO (MoL): The maximum number of SandR array variables is 224. 0 are registered.
INFO (MoL): The maximum size of any array variables is 0.
WARNING[L1,P0] (ML_BSSN_Helper): Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
[1mWARNING[L1,P0] (ML_BSSN_Helper):[0m Parameter ML_BSSN::my_boundary_condition is outdated; please update the parameter file. Do not use this parameter, and set up RHS boundary conditions as usual.
INFO (Vectors): Testing vectorisation... [errors may result in segfaults]
INFO (Vectors): 375/375 tests passed 
INFO (CartGrid3D): Grid Spacings:
INFO (CartGrid3D): dx=>3.3333333e-02  dy=>3.3333333e-02  dz=>3.3333333e-02
INFO (CartGrid3D): Computational Coordinates:
INFO (CartGrid3D): x=>[-0.067, 1.067]  y=>[-0.067, 1.067]  z=>[-0.067, 1.067]
INFO (CartGrid3D): Indices of Physical Coordinates:
INFO (CartGrid3D): x=>[0,34]  y=>[0,34]  z=>[0,34]
INFO (Time): Timestep set to 0.0133333 (courant_static)
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 264
   Maximum allocated memory:  39.9 MB
   Current administrative memory: 0.364 MB
   Total allocated used system memory: 9.98 MB
   Total allocated free system memory: 0.342 MB
   gh::allmemory:    21856
   dh::allmemory:    259992
   th::allmemory:    5964
   ggf::allmemory:   61380
   gdata::allmemory: 15224
-----------------------------------------------
Iteration      Time |              ADMBASE::alp
                    |      minimum      maximum
-----------------------------------------------
        0     0.000 |    1.0000000    1.0000000
Memory statistics from CarpetLib:
   Current number of objects: 262
   Current allocated memory:  39.6 MB
   Maximum number of objects: 288
   Maximum allocated memory:  44.8 MB
   Current administrative memory: 0.365 MB
   Total allocated used system memory: 11.5 MB
   Total allocated free system memory: 9.27 MB
   gh::allmemory:    21856
   dh::allmemory:    260024
   th::allmemory:    5964
   ggf::allmemory:   61732
   gdata::allmemory: 15224
       10     0.133 |    1.0000000    1.0000000
==================================================================================================================================================================================================
Thorn           | Scheduled routine in time bin           | gettimeofday [secs] | getrusage [secs] | cycle [secs] | cycle[avg] [secs] | cycle[sdv] [secs] | cycle[min] [secs] | cycle[max] [secs] 
==================================================================================================================================================================================================
Carpet          | Multi-model Startup routine             |          0.00055000 |       0.00028300 |   0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 |        0.00000000 
CycleClock      | Set up CycleClock                       |          0.10018800 |       0.10004200 |   0.00000544 |        0.00000544 |        0.00000000 |        0.00000544 |        0.00000544 
LoopControl     | Set up LoopControl                      |          0.00000200 |       0.00000200 |   0.00000161 |        0.00000161 |        0.00000000 |        0.00000161 |        0.00000161 
ML_BSSN_Helper  | Set checkpointing and prolongation group|          0.00003200 |       0.00003200 |   0.00003218 |        0.00003218 |        0.00000000 |        0.00003218 |        0.00003218 
CarpetReduce    | Startup routine                         |          0.00004100 |       0.00004100 |   0.00004183 |        0.00004183 |        0.00000000 |        0.00004183 |        0.00004183 
CartGrid3D      | Register GH Extension for GridSymmetry  |          0.00000200 |       0.00000200 |   0.00000159 |        0.00000159 |        0.00000000 |        0.00000159 |        0.00000159 
CoordBase       | Register a GH extension to store the coo|          0.00000100 |       0.00000100 |   0.00000146 |        0.00000146 |        0.00000000 |        0.00000146 |        0.00000146 
Timers          | Prepare hierarchical timers             |          0.00000600 |       0.00000600 |   0.00000613 |        0.00000613 |        0.00000000 |        0.00000613 |        0.00000613 
Carpet          | Startup routine                         |          0.00000200 |       0.00000300 |   0.00000228 |        0.00000228 |        0.00000000 |        0.00000228 |        0.00000228 
IOUtil          | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000292 |        0.00000292 |        0.00000000 |        0.00000292 |        0.00000292 
ML_BSSN         | create banner                           |          0.00000100 |       0.00000100 |   0.00000126 |        0.00000126 |        0.00000000 |        0.00000126 |        0.00000126 
ML_BSSN_Helper  | Register slicing                        |          0.00000100 |       0.00000100 |   0.00000158 |        0.00000158 |        0.00000000 |        0.00000158 |        0.00000158 
CarpetIOASCII   | Startup routine                         |          0.00003700 |       0.00003700 |   0.00003755 |        0.00003755 |        0.00000000 |        0.00003755 |        0.00003755 
MoL             | Startup banner                          |          0.00000200 |       0.00000100 |   0.00000143 |        0.00000143 |        0.00000000 |        0.00000143 |        0.00000143 
SymBase         | Register GH Extension for SymBase       |          0.00000200 |       0.00000200 |   0.00000188 |        0.00000188 |        0.00000000 |        0.00000188 |        0.00000188 
CarpetIOBasic   | Startup routine                         |          0.00000300 |       0.00000300 |   0.00000345 |        0.00000345 |        0.00000000 |        0.00000345 |        0.00000345 
Vectors         | Print startup message                   |          0.00005200 |       0.00001500 |   0.00005382 |        0.00005382 |        0.00000000 |        0.00005382 |        0.00005382 
hwloc           | Output hwloc version                    |          0.00004200 |       0.00001300 |   0.00004322 |        0.00004322 |        0.00000000 |        0.00004322 |        0.00004322 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_STARTUP             |          0.10096700 |       0.10048800 |   0.00023963 |        0.00023963 |        0.00000000 |        0.00023963 |        0.00023963 
==================================================================================================================================================================================================
ADMBase         | Set up GF symmetries                    |          0.00004500 |       0.00004400 |   0.00004461 |        0.00004461 |        0.00000000 |        0.00004461 |        0.00004461 
Boundary        | Register boundary conditions that this t|          0.00001600 |       0.00001600 |   0.00001648 |        0.00001648 |        0.00000000 |        0.00001648 |        0.00001648 
CartGrid3D      | Register coordinates for the Cartesian g|          0.00005400 |       0.00005400 |   0.00005417 |        0.00005417 |        0.00000000 |        0.00005417 |        0.00005417 
CoordGauge      | Initialize slicing, setup priorities for|          0.00001300 |       0.00001300 |   0.00001326 |        0.00001326 |        0.00000000 |        0.00001326 |        0.00001326 
CoordGauge      | Identify the slicing for the next iterat|          0.00001000 |       0.00001000 |   0.00000996 |        0.00000996 |        0.00000000 |        0.00000996 |        0.00000996 
ML_BSSN_Helper  | Handle parameter backward compatibility |          0.00003300 |       0.00003300 |   0.00003250 |        0.00003250 |        0.00000000 |        0.00003250 |        0.00003250 
MoL             | Set up the MoL bookkeeping index arrays |          0.00008000 |       0.00003700 |   0.00007942 |        0.00007942 |        0.00000000 |        0.00007942 |        0.00007942 
MoL             | Set the flag so it is ok to register wit|          0.00001100 |       0.00001200 |   0.00001158 |        0.00001158 |        0.00000000 |        0.00001158 |        0.00001158 
TmunuBase       | Set the stress_energy_state variable    |          0.00011900 |       0.00006900 |   0.00011897 |        0.00011897 |        0.00000000 |        0.00011897 |        0.00011897 
ML_BSSN         | Register Variables for MoL              |          0.00008300 |       0.00008300 |   0.00008286 |        0.00008286 |        0.00000000 |        0.00008286 |        0.00008286 
ML_BSSN_Helper  | Register ADMBase variables as constraine|          0.00004100 |       0.00004100 |   0.00004103 |        0.00004103 |        0.00000000 |        0.00004103 |        0.00004103 
CartGrid3D      | Register symmetry boundaries            |          0.00004400 |       0.00004400 |   0.00004407 |        0.00004407 |        0.00000000 |        0.00004407 |        0.00004407 
ML_BSSN         | register symmetries                     |          0.00006100 |       0.00006100 |   0.00006104 |        0.00006104 |        0.00000000 |        0.00006104 |        0.00006104 
SymBase         | Print symmetry boundary face description|          0.00001200 |       0.00001100 |   0.00001149 |        0.00001149 |        0.00000000 |        0.00001149 |        0.00001149 
MoL             | Report how many of each type of variable|          0.00035000 |       0.00012000 |   0.00035065 |        0.00035065 |        0.00000000 |        0.00035065 |        0.00035065 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_WRAGH               |          0.00097200 |       0.00064800 |   0.00097210 |        0.00097210 |        0.00000000 |        0.00097210 |        0.00097210 
==================================================================================================================================================================================================
ADMBase         | Check consistency of parameters         |          0.00001500 |       0.00001500 |   0.00001495 |        0.00001495 |        0.00000000 |        0.00001495 |        0.00001495 
Boundary        | Check dimension of grid variables       |          0.00001000 |       0.00001000 |   0.00000965 |        0.00000965 |        0.00000000 |        0.00000965 |        0.00000965 
Carpet          | Parameter checking routine              |          0.00002000 |       0.00002000 |   0.00002052 |        0.00002052 |        0.00000000 |        0.00002052 |        0.00002052 
CarpetLib       | Test prolongation operators             |          0.00002000 |       0.00002000 |   0.00002075 |        0.00002075 |        0.00000000 |        0.00002075 |        0.00002075 
CartGrid3D      | Check coordinates for CartGrid3D        |          0.00001300 |       0.00001300 |   0.00001239 |        0.00001239 |        0.00000000 |        0.00001239 |        0.00001239 
Fortran         | Test whether Fortran parameters work cor|          0.00001100 |       0.00001100 |   0.00001002 |        0.00001002 |        0.00000000 |        0.00001002 |        0.00001002 
ML_BSSN_Helper  | Check parameters                        |          0.00026500 |       0.00001200 |   0.00026517 |        0.00026517 |        0.00000000 |        0.00026517 |        0.00026517 
MoL             | Basic parameter checking                |          0.00001300 |       0.00000000 |   0.00001366 |        0.00001366 |        0.00000000 |        0.00001366 |        0.00001366 
TmunuBase       | Check that no deprecated parameters are |          0.00001700 |       0.00000000 |   0.00001628 |        0.00001628 |        0.00000000 |        0.00001628 |        0.00001628 
Vectors         | Run correctness tests.                  |          0.00020200 |       0.00000000 |   0.00020232 |        0.00020232 |        0.00000000 |        0.00020232 |        0.00020232 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PARAMCHECK          |          0.00058600 |       0.00010100 |   0.00058570 |        0.00058570 |        0.00000000 |        0.00058570 |        0.00058570 
==================================================================================================================================================================================================
ADMBase         | Set the shift_state variable to 1       |          0.00005300 |       0.00000000 |   0.00005212 |        0.00005212 |        0.00000000 |        0.00005212 |        0.00005212 
ADMBase         | Set the dtlapse_state variable to 1     |          0.00003500 |       0.00000000 |   0.00003467 |        0.00003467 |        0.00000000 |        0.00003467 |        0.00003467 
ADMBase         | Set the dtshift_state variable to 1     |          0.00003400 |       0.00000000 |   0.00003361 |        0.00003361 |        0.00000000 |        0.00003361 |        0.00003361 
ADMMacros       | Initialize the local_spatial_order      |          0.00003400 |       0.00000000 |   0.00003360 |        0.00003360 |        0.00000000 |        0.00003360 |        0.00003360 
CartGrid3D      | Set up ranges for spatial 3D Cartesian c|          0.00049200 |       0.00000000 |   0.00049190 |        0.00049190 |        0.00000000 |        0.00049190 |        0.00049190 
CartGrid3D      | Set up spatial 3D Cartesian coordinates |          0.00066300 |       0.00000000 |   0.00066285 |        0.00066285 |        0.00000000 |        0.00066285 |        0.00066285 
CarpetReduce    | Allocate the weight function            |          0.00009100 |       0.00000000 |   0.00009106 |        0.00009106 |        0.00000000 |        0.00009106 |        0.00009106 
CarpetReduce    | Initialise the weight function          |          0.00215600 |       0.00183600 |   0.00215601 |        0.00215601 |        0.00000000 |        0.00215601 |        0.00215601 
CarpetReduce    | Set up the outer boundaries of the weigh|          0.00277600 |       0.00277200 |   0.00277605 |        0.00277605 |        0.00000000 |        0.00277605 |        0.00277605 
CarpetReduce    | Set up the weight function for the restr|          0.00006400 |       0.00006500 |   0.00006443 |        0.00006443 |        0.00000000 |        0.00006443 |        0.00006443 
CarpetReduce    | Set the weight function                 |          0.00218100 |       0.00209000 |   0.00218023 |        0.00218023 |        0.00000000 |        0.00218023 |        0.00218023 
CarpetReduce    | Test the weight function                |          0.00022500 |       0.00020500 |   0.00022500 |        0.00022500 |        0.00000000 |        0.00022500 |        0.00022500 
ML_BSSN         | check boundaries treatment              |          0.00005300 |       0.00004800 |   0.00005236 |        0.00005236 |        0.00000000 |        0.00005236 |        0.00005236 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00002100 |       0.00001900 |   0.00002026 |        0.00002026 |        0.00000000 |        0.00002026 |        0.00002026 
SymBase         | Check whether the driver set up the grid|          0.00003900 |       0.00003500 |   0.00003907 |        0.00003907 |        0.00000000 |        0.00003907 |        0.00003907 
Time            | Initialise Time variables               |          0.00002000 |       0.00001800 |   0.00001951 |        0.00001951 |        0.00000000 |        0.00001951 |        0.00001951 
Time            | Set timestep based on Courant condition |          0.00008500 |       0.00003600 |   0.00008572 |        0.00008572 |        0.00000000 |        0.00008572 |        0.00008572 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_BASEGRID            |          0.00902200 |       0.00712400 |   0.00901843 |        0.00901843 |        0.00000000 |        0.00901843 |        0.00901843 
==================================================================================================================================================================================================
StaticConformal | Set the conformal_state variable to 0   |          0.00004500 |       0.00004100 |   0.00004517 |        0.00004517 |        0.00000000 |        0.00004517 |        0.00004517 
ADMBase         | Set the metric and extrinsic curvature t|          0.00248900 |       0.00248800 |   0.00248947 |        0.00248947 |        0.00000000 |        0.00248947 |        0.00248947 
ADMBase         | Set the lapse to 1 at all points        |          0.00013400 |       0.00013300 |   0.00013371 |        0.00013371 |        0.00000000 |        0.00013371 |        0.00013371 
ADMBase         | Set the shift to 0 at all points        |          0.00037900 |       0.00037800 |   0.00037842 |        0.00037842 |        0.00000000 |        0.00037842 |        0.00037842 
ADMBase         | Set the dtlapse to 0 at all points      |          0.00015400 |       0.00015400 |   0.00015404 |        0.00015404 |        0.00000000 |        0.00015404 |        0.00015404 
ADMBase         | Set the dtshift to 0 at all points      |          0.00051400 |       0.00051400 |   0.00051368 |        0.00051368 |        0.00000000 |        0.00051368 |        0.00051368 
CarpetIOASCII   | Initialisation routine                  |          0.00003200 |       0.00003200 |   0.00003155 |        0.00003155 |        0.00000000 |        0.00003155 |        0.00003155 
CarpetIOBasic   | Initialisation routine                  |          0.00002100 |       0.00002100 |   0.00002082 |        0.00002082 |        0.00000000 |        0.00002082 |        0.00002082 
ML_BSSN         | ML_BSSN_InitialADMBase1Everywhere       |          0.00379300 |       0.00379200 |   0.00379226 |        0.00379226 |        0.00000000 |        0.00379226 |        0.00379226 
ML_BSSN         | ML_BSSN_InitialADMBase2BoundaryScalar   |          0.00350900 |       0.00350900 |   0.00350849 |        0.00350849 |        0.00000000 |        0.00350849 |        0.00350849 
MoL             | Initialise the step size control        |          0.00001200 |       0.00001300 |   0.00001251 |        0.00001251 |        0.00000000 |        0.00001251 |        0.00001251 
ML_BSSN         | ML_BSSN_InitialADMBase2Interior         |          0.00425100 |       0.00425100 |   0.00425049 |        0.00425049 |        0.00000000 |        0.00425049 |        0.00425049 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_INITIAL             |          0.01533300 |       0.01532600 |   0.01533064 |        0.01533064 |        0.00000000 |        0.01533064 |        0.01533064 
==================================================================================================================================================================================================
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.00201900 |       0.00202000 |   0.00201925 |        0.00201925 |        0.00000000 |        0.00201925 |        0.00201925 
ADMBase         | Select ADMBase boundary conditions - may|          0.00127800 |       0.00127800 |   0.00127753 |        0.00127753 |        0.00000000 |        0.00127753 |        0.00127753 
Boundary        | Apply all requested local physical bound|          0.00125000 |       0.00099200 |   0.00124807 |        0.00024961 |        0.00044147 |        0.00004152 |        0.00055326 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00017900 |       0.00013900 |   0.00017831 |        0.00003566 |        0.00000923 |        0.00003183 |        0.00004334 
Boundary        | Unselect all grid variables for boundary|          0.00004300 |       0.00003300 |   0.00004357 |        0.00000871 |        0.00000322 |        0.00000748 |        0.00001152 
ML_BSSN         | select boundary conditions              |          0.00140400 |       0.00135700 |   0.00140378 |        0.00140378 |        0.00000000 |        0.00140378 |        0.00140378 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.00351500 |       0.00002300 |   0.00351477 |        0.00351477 |        0.00000000 |        0.00351477 |        0.00351477 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.00353000 |       0.00310800 |   0.00352973 |        0.00352973 |        0.00000000 |        0.00352973 |        0.00352973 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.00355100 |       0.00354800 |   0.00355058 |        0.00355058 |        0.00000000 |        0.00355058 |        0.00355058 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00003200 |       0.00003200 |   0.00003196 |        0.00003196 |        0.00000000 |        0.00003196 |        0.00003196 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.00111400 |       0.00104200 |   0.00111367 |        0.00111367 |        0.00000000 |        0.00111367 |        0.00111367 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00013900 |       0.00012600 |   0.00013912 |        0.00013912 |        0.00000000 |        0.00013912 |        0.00013912 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.00803400 |       0.00464100 |   0.00803408 |        0.00803408 |        0.00000000 |        0.00803408 |        0.00803408 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.00024800 |       0.00022400 |   0.00024827 |        0.00024827 |        0.00000000 |        0.00024827 |        0.00024827 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTINITIAL         |          0.02633600 |       0.01856300 |   0.02633268 |        0.02515672 |        0.00045393 |        0.02494357 |        0.02547085 
==================================================================================================================================================================================================
CoordGauge      | Identify the slicing for the next iterat|          0.00045400 |       0.00036000 |   0.00044829 |        0.00004483 |        0.00002325 |        0.00003903 |        0.00006368 
LoopControl     | Update LoopControl algorithm preferences|          0.00081400 |       0.00066700 |   0.00076627 |        0.00007663 |        0.00002258 |        0.00006691 |        0.00008960 
NaNChecker      | Reset the NaNChecker::NaNsFound counter |          0.00018800 |       0.00015200 |   0.00018910 |        0.00001891 |        0.00000800 |        0.00001711 |        0.00002618 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_PRESTEP             |          0.00145600 |       0.00117900 |   0.00140366 |        0.00014037 |        0.00005384 |        0.00012305 |        0.00017946 
==================================================================================================================================================================================================
MoL             | Initialise the step size control        |          0.00011200 |       0.00009000 |   0.00011055 |        0.00001105 |        0.00000715 |        0.00000987 |        0.00001775 
MoL             | Set the counter for the ODE method to lo|          0.00011900 |       0.00009300 |   0.00011758 |        0.00001176 |        0.00000293 |        0.00001069 |        0.00001331 
MoL             | Ensure the correct time and timestep are|          0.00008900 |       0.00007300 |   0.00009071 |        0.00000907 |        0.00000247 |        0.00000848 |        0.00001131 
MoL             | Allocate storage for scratch levels     |          0.00232000 |       0.00038200 |   0.00230478 |        0.00023048 |        0.00172153 |        0.00004191 |        0.00186358 
MoL             | Allocate sufficient space for array scra|          0.00038000 |       0.00024300 |   0.00037620 |        0.00003762 |        0.00002667 |        0.00003255 |        0.00006272 
MoL             | Ensure the data is in the correct timele|          0.03297900 |       0.02711100 |   0.03297848 |        0.00329785 |        0.00189031 |        0.00227109 |        0.00451591 
MoL             | Initialise the RHS functions            |          0.04066700 |       0.03944400 |   0.04066660 |        0.00101666 |        0.00140586 |        0.00077066 |        0.00198062 
ML_BSSN         | ML_BSSN_EvolutionBoundaryScalar         |          0.16534700 |       0.16218700 |   0.16534136 |        0.00413353 |        0.00390265 |        0.00336405 |        0.00695304 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy1       |          0.21341900 |       0.21285400 |   0.21340422 |        0.00533511 |        0.00272959 |        0.00459734 |        0.00659412 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy2       |          0.34618400 |       0.34587800 |   0.34617145 |        0.00865429 |        0.00412984 |        0.00735632 |        0.01071347 
ML_BSSN         | ML_BSSN_EvolutionInteriorSplitBy3       |          0.38253800 |       0.38219600 |   0.38252251 |        0.00956306 |        0.00364977 |        0.00847948 |        0.01120706 
MoL             | Updates calculated with the efficient Ru|          0.11633600 |       0.11628800 |   0.11633533 |        0.00290838 |        0.00443981 |        0.00225926 |        0.00644884 
MoL             | Alter the counter number                |          0.00051700 |       0.00051600 |   0.00051725 |        0.00001293 |        0.00002117 |        0.00001039 |        0.00002432 
MoL             | If necessary, change the time           |          0.00038800 |       0.00038500 |   0.00038674 |        0.00000967 |        0.00000522 |        0.00000844 |        0.00001397 
ML_BSSN         | ML_BSSN_EnforceEverywhere               |          0.08351700 |       0.08338500 |   0.08353350 |        0.00208834 |        0.00226663 |        0.00163167 |        0.00391262 
ADMBase         | Select ADMBase boundary conditions - may|          0.05020500 |       0.04859900 |   0.05019753 |        0.00125494 |        0.01417970 |        0.00063160 |        0.01470511 
Boundary        | Apply all requested local physical bound|          0.02764600 |       0.02666200 |   0.02762936 |        0.00019735 |        0.00217073 |        0.00004085 |        0.00060243 
CartGrid3D      | Apply symmetry boundary conditions      |          0.00537300 |       0.00518500 |   0.00536893 |        0.00003835 |        0.00017513 |        0.00003092 |        0.00017244 
Boundary        | Unselect all grid variables for boundary|          0.00122700 |       0.00117700 |   0.00121862 |        0.00000870 |        0.00002354 |        0.00000731 |        0.00002468 
ML_BSSN         | select boundary conditions              |          0.03515800 |       0.03285800 |   0.03516133 |        0.00087903 |        0.00300286 |        0.00051895 |        0.00250681 
ML_BSSN         | ML_BSSN_ADMBaseInterior                 |          0.14470500 |       0.14174200 |   0.14470001 |        0.00361750 |        0.00223761 |        0.00309808 |        0.00519944 
ML_BSSN         | ML_BSSN_ADMBaseBoundaryScalar           |          0.14535000 |       0.14516600 |   0.14533791 |        0.00363345 |        0.00229290 |        0.00309770 |        0.00509643 
ML_BSSN         | ML_BSSN_ADMBaseEverywhere               |          0.15835900 |       0.15497600 |   0.15834988 |        0.00395875 |        0.00484950 |        0.00328003 |        0.00733528 
ML_BSSN_Helper  | Select boundary conditions for ADMBase v|          0.00119600 |       0.00116800 |   0.00119298 |        0.00002982 |        0.00001738 |        0.00002516 |        0.00003939 
MoL             | If necessary, change the timestep       |          0.00041500 |       0.00040400 |   0.00041496 |        0.00001037 |        0.00000657 |        0.00000899 |        0.00001537 
MoL             | Control the step size                   |          0.00009900 |       0.00010200 |   0.00009961 |        0.00000996 |        0.00000821 |        0.00000876 |        0.00001772 
MoL             | Restoring the Save and Restore variables|          0.00036000 |       0.00035600 |   0.00035801 |        0.00003580 |        0.00000689 |        0.00003341 |        0.00004172 
MoL             | Free storage for scratch levels         |          0.00039600 |       0.00039400 |   0.00039463 |        0.00003946 |        0.00002244 |        0.00003371 |        0.00005521 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere           |          0.01146500 |       0.01144900 |   0.01146238 |        0.00114624 |        0.00025396 |        0.00104777 |        0.00134197 
ML_BSSN         | ML_BSSN_ConstraintsEverywhere_SelectBCs |          0.00428100 |       0.00427900 |   0.00427843 |        0.00042784 |        0.00197173 |        0.00011981 |        0.00226102 
ML_BSSN         | ML_BSSN_ConstraintsInterior             |          0.07701200 |       0.07697200 |   0.07700993 |        0.00770099 |        0.00139882 |        0.00711672 |        0.00850396 
ML_BSSN         | ML_BSSN_ConstraintsInterior_SelectBCs   |          0.01600700 |       0.01599000 |   0.01599365 |        0.00159937 |        0.00666491 |        0.00022541 |        0.00621674 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_EVOL                |          2.06416600 |       2.03860400 |   2.06402540 |        0.06190774 |        0.06548450 |        0.05017737 |        0.10846837 
==================================================================================================================================================================================================
NaNChecker      | Prepare data structures to check for NaN|          0.00013800 |       0.00013800 |   0.00013721 |        0.00001247 |        0.00001418 |        0.00000973 |        0.00002215 
NaNChecker      | Check for NaNs                          |          0.00291100 |       0.00290300 |   0.00291015 |        0.00026456 |        0.00238686 |        0.00003168 |        0.00254019 
NaNChecker      | Count NaNs in NaNChecker::NaNsFound     |          0.00009600 |       0.00009500 |   0.00009596 |        0.00000872 |        0.00000454 |        0.00000744 |        0.00001116 
NaNChecker      | Output NaNChecker::NaNmask and take acti|          0.00033000 |       0.00028900 |   0.00032952 |        0.00002996 |        0.00001827 |        0.00002528 |        0.00004504 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_POSTSTEP            |          0.00347500 |       0.00342500 |   0.00347283 |        0.00031571 |        0.00242385 |        0.00007413 |        0.00261853 
==================================================================================================================================================================================================
CarpetLib       | Print timing statistics if desired      |          0.00022600 |       0.00020300 |   0.00022401 |        0.00002036 |        0.00001674 |        0.00001628 |        0.00002896 
CarpetLib       | Print memory statistics if desired      |          0.00207600 |       0.00056200 |   0.00207623 |        0.00018875 |        0.00122194 |        0.00001561 |        0.00108563 
LoopControl     | Output LoopControl statistics           |          0.00049200 |       0.00039700 |   0.00049147 |        0.00004468 |        0.00003159 |        0.00003856 |        0.00007236 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_ANALYSIS            |          0.00279400 |       0.00116200 |   0.00279170 |        0.00025379 |        0.00127027 |        0.00007045 |        0.00118695 
==================================================================================================================================================================================================
LoopControl     | Output LoopControl statistics           |          0.00005400 |       0.00005400 |   0.00005382 |        0.00005382 |        0.00000000 |        0.00005382 |        0.00005382 
MoL             | Free the MoL bookkeeping index arrays   |          0.00004400 |       0.00004400 |   0.00004424 |        0.00004424 |        0.00000000 |        0.00004424 |        0.00004424 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_TERMINATE           |          0.00009800 |       0.00009800 |   0.00009806 |        0.00009806 |        0.00000000 |        0.00009806 |        0.00009806 
==================================================================================================================================================================================================
Timers          | Prepare hierarchical timers             |          0.00017100 |       0.00017100 |   0.00017132 |        0.00017132 |        0.00000000 |        0.00017132 |        0.00017132 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for CCTK_SHUTDOWN            |          0.00017100 |       0.00017100 |   0.00017132 |        0.00017132 |        0.00000000 |        0.00017132 |        0.00017132 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                | Total time for simulation               |          2.21230700 |       2.13699200 |   2.21221787 |        2.21221787 |        0.00000000 |        2.21221787 |        2.21221787 
==================================================================================================================================================================================================
--------------------------------------------------------------------------------
Done.
+ echo Stopping:
Stopping:
+ date
Tue Jun  1 17:34:48 UTC 2021
+ echo Done.
Done.
  Elapsed time: 3.2 s
